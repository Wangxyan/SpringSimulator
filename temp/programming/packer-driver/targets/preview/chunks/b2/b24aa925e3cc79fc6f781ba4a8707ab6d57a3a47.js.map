{"version":3,"sources":["file:///D:/CODE/cocos_workspace/%E8%83%8C%E5%8C%85%E8%8B%B1%E9%9B%84/assets/Scripts/Frame/Util.ts"],"names":["Util","Color","Component","Quat","Rect","Vec2","Vec3","bezier","tween","v2","v3","view","misc","screen","isEmptyObject","obj","result","constructor","Object","key","hasOwnProperty","getStringLength","render","strArr","len","i","n","length","val","charCodeAt","Math","ceil","getRandomNFromM","m","array","intRd","count","getRandomInt","flag","min","max","r","random","rr","floor","arrayToObject","srcObj","objectKey","resultObj","clone","sObj","s","Array","objectToArray","resultArr","push","formatMoney","money","arrUnit","strValue","idx","newFormatMoney","toString","toFixed","isNewDay","dateValue","oldDate","Date","curDate","oldYear","getYear","oldMonth","getMonth","oldDay","getDate","curYear","curMonth","curDay","getPropertyCount","o","difference","diff","indexOf","trim","str","replace","format","params","RegExp","format1","isNowValid","start","end","startTime","endTime","getDeltaDays","startYear","getFullYear","startMonth","startDate","endYear","endMonth","endDate","getTime","deltaTime","getMin","Number","formatTwoDigits","time","join","slice","getDay","date","formatDate","formatTimeForMillisecond","ms","second","minute","hour","rand","arr","arrClone","randomIndex","itemIndex","getOffsetMimutes","offSetTime","formatNumToFixed","num","dayRemainingTime","h","curMilliseconds","milliseconds","toLocaleDateString","lerp","targetValue","curValue","ratio","v","base64ToArrayBuffer","base64","split","binaryString","atob","bytes","Uint8Array","index","buffer","uint8arrayToBase64","u8Arr","CHUNK_SIZE","subarray","String","fromCharCode","apply","btoa","base64ToUint8Array","base64String","padding","repeat","rawData","window","outputArray","arrayBufferToBase64","binary","byteLength","encrypt","b64Data","_base64encode","encodeData","decrypt","decodeData","_base64Decode","input","keyStr","output","chr1","chr2","chr3","enc1","enc2","enc3","enc4","_utf8Encode","isNaN","charAt","string","utftext","c","_utf8Decode","c1","c2","c3","checkTwoPosEulRad","x1","z1","x2","z2","atan2","getTwoPosXZLength","x","z","sqrt","setStringToVec3","dataString","data","setStringToQuate","getRandomRange","isIncludeMinus","getDirectionOfDistanceX","distance","eulRad","sin","getDirectionOfDistanceZ","cos","angle_to_radian","angle","radian","PI","radian_to_angle","angle_to_vector","tan","vec","normalize","vector_to_angle","vector","y","dir","signAngle","timeToString","res","timeToStrings","getTimeToString","getTodayRemainingtime","days","day","hours","minutes","seconds","getMonthDay","year","month","d","stringToColor","colorStr","hex2int","g","b","hex","digit","code","getDateDetail","toLocaleString","parseTimeTwo","getHours","getMinutes","getCircleRandPoint","pos","getCirclePoints","randomScope","points","radians","round","unshift","getCircleRandomPoints","offerR","getCirclePos","getUpDownRandomPoints","getLeftRightRectRandomPoints1","limtMoveWidth","limtMoveHeight","rec","newPos","contains","copyPos","randPos","newPosArr","uuid","hexDigits","substr","getUuid","randomLength","now","getMonthDays","getMonthDayMilliseconds","getDayHour","getWinSize","windowSize","getVisibleSize","getBezierPoint","begin","ctrl1","ctrl2","t","bezierTo","target","duration","to","opts","create","twoBezier","p1","cp","p2","onUpdate","arg","position","playTargetTween","playTime","targetPos","Promise","resolve","reject","startPos","startAngle","eulerAngles","targetTween","mixY","maxY","mixX","maxX","progressX","current","progressY","parallel","progress","easing","setPosition","call","targetBezier","px1","py1","px2","py2","tweenObj","prePos","tar","p0","p3","posx","posy","curPos","subtract","radiansToDegrees","targetScaleBezier","scale","t1","t2","setScale","PFromC","dCurP","dPreSuccessP","dPE","nMaxFail","CFromP","p","dUp","dLow","dMid","dPLast","dPtested","abs","segmentsIntr","a","area_abc","area_abd","area_cda","area_cdb","dx","dy","bezier_length","start_point","end_point","prev_point","now_point","weightRandomIdx","weights","tw","rw","sw","ew","numMoveZoro","getRectRandPos","rect","randX","width","randY","height","adapterScale","designSize","getDesignResolutionSize","visibleSize"],"mappings":"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","sourcesContent":["import { Node, Color, Component, Quat, Rect, Size, Vec2, Vec3, bezier, tween, v2, v3, view, misc, log } from \"cc\";\r\nimport { Debug } from \"./Debug\";\r\nimport { screen } from \"cc\";\r\nexport class Util extends Component {\r\n\r\n\r\n    /**\r\n     * 判断传入的参数是否为空的Object。数组或undefined会返回false\r\n     * @param obj\r\n     */\r\n    public static isEmptyObject(obj: any) {\r\n        let result: boolean = true;\r\n        if (obj && obj.constructor === Object) {\r\n            for (var key in obj) {\r\n                if (obj.hasOwnProperty(key)) {\r\n                    result = false;\r\n                    break;\r\n                }\r\n            }\r\n        } else {\r\n            result = false;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * 获取字符串长度\r\n     * @param {string} render \r\n     * @returns \r\n     */\r\n    public static getStringLength(render: string) {\r\n        let strArr: string = render;\r\n        let len: number = 0;\r\n        for (let i: number = 0, n = strArr.length; i < n; i++) {\r\n            let val: number = strArr.charCodeAt(i);\r\n            if (val <= 255) {\r\n                len = len + 1;\r\n            } else {\r\n                len = len + 2;\r\n            }\r\n        }\r\n\r\n        return Math.ceil(len / 2);\r\n    }\r\n\r\n    /**\r\n     * 从n个数中获取m个随机数\r\n     * @param {Number} n   总数\r\n     * @param {Number} m    获取数\r\n     * @returns {Array} array   获取数列\r\n     */\r\n    public static getRandomNFromM(n: number, m: number) {\r\n        let array: any[] = [];\r\n        let intRd: number = 0;\r\n        let count: number = 0;\r\n\r\n        while (count < m) {\r\n            if (count >= n + 1) {\r\n                break;\r\n            }\r\n\r\n            intRd = this.getRandomInt(0, n);\r\n            var flag = 0;\r\n            for (var i = 0; i < count; i++) {\r\n                if (array[i] === intRd) {\r\n                    flag = 1;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (flag === 0) {\r\n                array[count] = intRd;\r\n                count++;\r\n            }\r\n        }\r\n\r\n        return array;\r\n    }\r\n\r\n    /**\r\n     * 获取随机整数\r\n     * @param {Number} min 最小值\r\n     * @param {Number} max 最大值\r\n     * @returns \r\n     */\r\n    public static getRandomInt(min: number, max: number) {\r\n        let r: number = Math.random();\r\n        let rr: number = r * (max - min + 1) + min;\r\n        return Math.floor(rr);\r\n    }\r\n\r\n    /**\r\n     * 将数组转化为object。\r\n     * @param { any} srcObj \r\n     * @param { string} objectKey \r\n     * @returns \r\n     */\r\n    public static arrayToObject(srcObj: any, objectKey: string) {\r\n\r\n        let resultObj: { [key: string]: any } = {};\r\n\r\n        // to object\r\n        for (var key in srcObj) {\r\n            if (!srcObj.hasOwnProperty(key) || !srcObj[key][objectKey]) {\r\n                continue;\r\n            }\r\n\r\n            resultObj[srcObj[key][objectKey]] = srcObj[key];\r\n        }\r\n\r\n\r\n    }\r\n\r\n    /**\r\n     * 深度拷贝\r\n     * @param {any} sObj 拷贝的对象\r\n     * @returns \r\n     */\r\n    public static clone(sObj: any) {\r\n        if (sObj === null || typeof sObj !== \"object\") {\r\n            return sObj;\r\n        }\r\n\r\n        let s: { [key: string]: any } = {};\r\n        if (sObj.constructor === Array) {\r\n            s = [];\r\n        }\r\n\r\n        for (let i in sObj) {\r\n            if (sObj.hasOwnProperty(i)) {\r\n                s[i] = this.clone(sObj[i]);\r\n            }\r\n        }\r\n\r\n        return s;\r\n    }\r\n\r\n    /**\r\n   * 将object转化为数组\r\n   * @param { any} srcObj  \r\n   * @returns \r\n   */\r\n    public static objectToArray(srcObj: { [key: string]: any }) {\r\n\r\n        let resultArr: any[] = [];\r\n\r\n        // to array\r\n        for (let key in srcObj) {\r\n            if (!srcObj.hasOwnProperty(key)) {\r\n                continue;\r\n            }\r\n\r\n            resultArr.push(srcObj[key]);\r\n        }\r\n\r\n        return resultArr;\r\n    }\r\n\r\n    /**\r\n   * 格式化钱数，超过10000 转换位 10K   10000K 转换为 10M\r\n   * @param {number}money 需要被格式化的数值\r\n   * @returns {string}返回 被格式化的数值\r\n   */\r\n    public static formatMoney(money: number) {\r\n        let arrUnit: string[] = ['', 'K', 'M', 'G', 'T', 'P', 'E', 'Z', 'Y', 'B', 'N', 'D'];\r\n\r\n        let strValue: string = '';\r\n        for (let idx: number = 0; idx < arrUnit.length; idx++) {\r\n            if (money >= 10000) {\r\n                money /= 1000;\r\n            } else {\r\n                strValue = Math.floor(money) + arrUnit[idx];\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (strValue === '') {\r\n            strValue = Math.floor(money) + 'U'; //超过最大值就加个U\r\n        }\r\n\r\n        return strValue;\r\n    }\r\n\r\n    /**\r\n    * 格式化钱数，超过10000 转换位 10K   10000K 转换为 10M\r\n    * @param {number}money 需要被格式化的数值\r\n    * @returns {string}返回 被格式化的数值\r\n    */\r\n    public static newFormatMoney(money: number) {\r\n        if (money < 10000) {\r\n            return money.toString();\r\n        }\r\n        let arrUnit: string[] = ['', 'K', 'M', 'G', 'T', 'P', 'E', 'Z', 'Y', 'B', 'N', 'D'];\r\n        let strValue: string = '';\r\n        for (let idx: number = 0; idx < arrUnit.length; idx++) {\r\n            if (money >= 10000) {\r\n                money /= 1000;\r\n            } else {\r\n                strValue = money.toFixed(1) + arrUnit[idx];\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (strValue === '') {\r\n            strValue = Math.floor(money) + 'U'; //超过最大值就加个U\r\n        }\r\n\r\n        return strValue;\r\n    }\r\n\r\n    /**\r\n    * 判断是否是新的一天\r\n    * @param {Object|Number} dateValue 时间对象 todo MessageCenter 与 pve 相关的时间存储建议改为 Date 类型\r\n    * @returns {boolean}\r\n    */\r\n    public static isNewDay(dateValue: any) {\r\n        // todo：是否需要判断时区？\r\n        var oldDate: any = new Date(dateValue);\r\n        var curDate: any = new Date();\r\n\r\n        var oldYear = oldDate.getYear();\r\n        var oldMonth = oldDate.getMonth();\r\n        var oldDay = oldDate.getDate();\r\n        var curYear = curDate.getYear();\r\n        var curMonth = curDate.getMonth();\r\n        var curDay = curDate.getDate();\r\n\r\n        if (curYear > oldYear) {\r\n            return true;\r\n        } else {\r\n            if (curMonth > oldMonth) {\r\n                return true;\r\n            } else {\r\n                if (curDay > oldDay) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 获取对象属性数量\r\n     * @param {object} 对象\r\n     * @returns \r\n     */\r\n    public static getPropertyCount(o: Object) {\r\n        var n, count = 0;\r\n        for (n in o) {\r\n            if (o.hasOwnProperty(n)) {\r\n                count++;\r\n            }\r\n        }\r\n        return count;\r\n    }\r\n\r\n    /**\r\n     * 返回一个差异化数组（将array中diff里的值去掉）\r\n     * @param array\r\n     * @param diff\r\n     */\r\n    public static difference(array: [], diff: any) {\r\n        let result: any[] = [];\r\n        if (array.constructor !== Array || diff.constructor !== Array) {\r\n            return result;\r\n        }\r\n\r\n        let length = array.length;\r\n        for (let i: number = 0; i < length; i++) {\r\n            if (diff.indexOf(array[i]) === -1) {\r\n                result.push(array[i]);\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    public static trim(str: string) {\r\n        return str.replace(/(^\\s*)|(\\s*$)/g, \"\");\r\n    }\r\n\r\n    public static format(s: string, params: string) {\r\n        s = s.replace(new RegExp('\\\\{' + 0 + '\\\\}', 'gm'), params);\r\n        return s;\r\n    }\r\n\r\n    public static format1(s: string, params: Array<string>) {\r\n        var i = params.length;\r\n        while (i--) {\r\n            s = s.replace(new RegExp('\\\\{' + i + '\\\\}', 'gm'), params[i]);\r\n        }\r\n        return s;\r\n    }\r\n\r\n    /**\r\n     * 判断当前时间是否在有效时间内\r\n     * @param {String|Number} start 起始时间。带有时区信息\r\n     * @param {String|Number} end 结束时间。带有时区信息\r\n     */\r\n    public static isNowValid(start: any, end: any) {\r\n        var startTime = new Date(start);\r\n        var endTime = new Date(end);\r\n        var result = false;\r\n\r\n        if (startTime.getDate() + '' !== 'NaN' && endTime.getDate() + '' !== 'NaN') {\r\n            var curDate = new Date();\r\n            result = curDate < endTime && curDate > startTime;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * 返回相隔天数\r\n     * @param start \r\n     * @param end \r\n     * @returns \r\n     */\r\n    public static getDeltaDays(start: any, end: any) {\r\n        start = new Date(start);\r\n        end = new Date(end);\r\n\r\n        let startYear: number = start.getFullYear();\r\n        let startMonth: number = start.getMonth() + 1;\r\n        let startDate: number = start.getDate();\r\n        let endYear: number = end.getFullYear();\r\n        let endMonth: number = end.getMonth() + 1;\r\n        let endDate: number = end.getDate();\r\n\r\n        start = new Date(startYear + '/' + startMonth + '/' + startDate + ' GMT+0800').getTime();\r\n        end = new Date(endYear + '/' + endMonth + '/' + endDate + ' GMT+0800').getTime();\r\n\r\n        let deltaTime = end - start;\r\n        return Math.floor(deltaTime / (24 * 60 * 60 * 1000));\r\n    }\r\n\r\n    /**\r\n     * 获取数组最小值\r\n     * @param array 数组\r\n     * @returns \r\n     */\r\n    public static getMin(array: number[]) {\r\n        let result: number = null!;\r\n        if (array.constructor === Array) {\r\n            let length = array.length;\r\n            for (let i = 0; i < length; i++) {\r\n                if (i === 0) {\r\n                    result = Number(array[0]);\r\n                } else {\r\n                    result = result > Number(array[i]) ? Number(array[i]) : result;\r\n                }\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * 格式化两位小数点\r\n     * @param time \r\n     * @returns \r\n     */\r\n    public static formatTwoDigits(time: number) {\r\n        //@ts-ignore\r\n        return (Array(2).join(0) + time).slice(-2);\r\n    }\r\n\r\n    /**\r\n     * 获取格式化后的日期（不含小时分秒）\r\n     */\r\n    public static getDay() {\r\n        let date: Date = new Date();\r\n\r\n        return date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate();\r\n    }\r\n\r\n    /**\r\n    * 获取格式化后的日期（不含小时分秒）\r\n    */\r\n    public static formatDate(time: number) {\r\n        let date: Date = new Date(time);\r\n\r\n        return date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate();\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     *  根据剩余毫秒数格式化剩余时间 返回 HH:MM:SS\r\n     *\r\n     * @param {Number} ms\r\n     */\r\n    public static formatTimeForMillisecond(ms: number): Object {\r\n        let second: number = Math.floor(ms / 1000 % 60);\r\n        let minute: number = Math.floor(ms / 1000 / 60 % 60);\r\n        let hour: number = Math.floor(ms / 1000 / 60 / 60);\r\n        return { 'hour': hour, 'minute': minute, 'second': second };\r\n    }\r\n\r\n\r\n    /**\r\n     * 将数组内容进行随机排列\r\n     * @param {Array}arr 需要被随机的数组 \r\n     * @returns \r\n     */\r\n    public static rand(arr: any[]): [] {\r\n        let arrClone = this.clone(arr);\r\n        // 首先从最大的数开始遍历，之后递减\r\n        for (let i: number = arrClone.length - 1; i >= 0; i--) {\r\n            // 随机索引值randomIndex是从0-arrClone.length中随机抽取的\r\n            const randomIndex: number = Math.floor(Math.random() * (i + 1));\r\n            // 下面三句相当于把从数组中随机抽取到的值与当前遍历的值互换位置\r\n            const itemIndex: number = arrClone[randomIndex];\r\n            arrClone[randomIndex] = arrClone[i];\r\n            arrClone[i] = itemIndex;\r\n        }\r\n        // 每一次的遍历都相当于把从数组中随机抽取（不重复）的一个元素放到数组的最后面（索引顺序为：len-1,len-2,len-3......0）\r\n        return arrClone;\r\n    }\r\n\r\n\r\n    /**\r\n    * 获得开始和结束两者之间相隔分钟数\r\n    *\r\n    * @static\r\n    * @param {number} start\r\n    * @param {number} end\r\n    * @memberof Util\r\n    */\r\n    public static getOffsetMimutes(start: number, end: number) {\r\n        let offSetTime: number = end - start;\r\n        let minute: number = Math.floor((offSetTime % (1000 * 60 * 60)) / (1000 * 60));\r\n        return minute;\r\n    }\r\n\r\n    /**\r\n     * 返回指定小数位的数值\r\n     * @param {number} num \r\n     * @param {number} idx \r\n     */\r\n    public static formatNumToFixed(num: number, idx: number = 0) {\r\n        return Number(num.toFixed(idx));\r\n    }\r\n\r\n    /** 返回当天剩余时间 */\r\n    public static dayRemainingTime(): string[] {\r\n        let h: string = \"\";\r\n        let m: string = \"\";\r\n        let s: string = \"\";\r\n        let curMilliseconds = new Date().getTime();\r\n        let milliseconds = new Date(new Date().toLocaleDateString()).getTime() + 24 * 60 * 60 * 1000;\r\n        let diff = milliseconds - curMilliseconds;\r\n        let second: number = Math.floor(diff / 1000 % 60);\r\n        if (second >= 10) {\r\n            s = second.toString();\r\n        } else {\r\n            s = \"0\" + second;\r\n        }\r\n        let minute: number = Math.floor(diff / 1000 / 60 % 60);\r\n        if (minute >= 10) {\r\n            m = minute.toString();\r\n        } else {\r\n            m = \"0\" + minute;\r\n        }\r\n        let hour: number = Math.floor(diff / 1000 / 60 / 60);\r\n        if (hour >= 10) {\r\n            h = hour.toString();\r\n        } else {\r\n            h = \"0\" + hour;\r\n        }\r\n        return [h, m, s];\r\n    }\r\n\r\n    /**\r\n     * 用于数值到达另外一个目标数值之间进行平滑过渡运动效果\r\n     * @param {number} targetValue 目标数值 \r\n     * @param {number} curValue 当前数值\r\n     * @param {number} ratio    过渡比率\r\n     * @returns \r\n     */\r\n    public static lerp(targetValue: number, curValue: number, ratio: number = 0.25) {\r\n        let v: number = curValue;\r\n        if (targetValue > curValue) {\r\n            v = curValue + (targetValue - curValue) * ratio;\r\n        } else if (targetValue < curValue) {\r\n            v = curValue - (curValue - targetValue) * ratio;\r\n        }\r\n\r\n        return v;\r\n    }\r\n\r\n    /**\r\n     * base64转buffer\r\n     * @param base64 \r\n     * @returns \r\n     */\r\n    static base64ToArrayBuffer(base64: any): any {\r\n        var arr = base64.split(\",\");\r\n        var binaryString = atob(base64)\r\n        var len = binaryString.length\r\n        var bytes = new Uint8Array(len)\r\n        for (let index = 0; index < len; index++) {\r\n            bytes[index] = binaryString.charCodeAt(index)\r\n\r\n        }\r\n        return bytes.buffer\r\n    }\r\n\r\n    // uint8array转为base64字符串\r\n    static uint8arrayToBase64(u8Arr) {\r\n        let CHUNK_SIZE = 0x8000; //arbitrary number\r\n        let index = 0;\r\n        let length = u8Arr.length;\r\n        let result = '';\r\n        let slice;\r\n        while (index < length) {\r\n            slice = u8Arr.subarray(index, Math.min(index + CHUNK_SIZE, length));\r\n            result += String.fromCharCode.apply(null, slice);\r\n            index += CHUNK_SIZE;\r\n        }\r\n        // web image base64图片格式: \"data:image/png;base64,\" + b64encoded;\r\n        // return  \"data:image/png;base64,\" + btoa(result);\r\n        return btoa(result);\r\n    }\r\n    // base64字符串转为uint8array数组\r\n    static base64ToUint8Array(base64String) {\r\n        let padding = '='.repeat((4 - base64String.length % 4) % 4);\r\n        let base64 = (base64String + padding)\r\n            .replace(/\\-/g, '+')\r\n            .replace(/_/g, '/');\r\n        let rawData = window.atob(base64);\r\n        let outputArray = new Uint8Array(rawData.length);\r\n        for (var i = 0; i < rawData.length; ++i) {\r\n            outputArray[i] = rawData.charCodeAt(i);\r\n        }\r\n        return outputArray;\r\n    }\r\n\r\n\r\n    /**\r\n     * buffer转base64\r\n     * @param buffer \r\n     * @returns \r\n     */\r\n    static arrayBufferToBase64(buffer: any) {\r\n        var binary = '';\r\n        var bytes = new Uint8Array(buffer);\r\n        var len = bytes.byteLength;\r\n        for (var i = 0; i < len; i++) {\r\n            binary += String.fromCharCode(bytes[i]);\r\n        }\r\n        return window.btoa(binary);\r\n    }\r\n\r\n    /**\r\n     * 数据加密\r\n     * @param {String} str \r\n     */\r\n    public static encrypt(str: string) {\r\n        let b64Data = this._base64encode(str);\r\n\r\n        let n: number = 6;\r\n        if (b64Data.length % 2 === 0) {\r\n            n = 7;\r\n        }\r\n\r\n        let encodeData: string = '';\r\n\r\n        for (let idx = 0; idx < (b64Data.length - n + 1) / 2; idx++) {\r\n            encodeData += b64Data[2 * idx + 1];\r\n            encodeData += b64Data[2 * idx];\r\n        }\r\n\r\n        encodeData += b64Data.slice(b64Data.length - n + 1);\r\n\r\n        return encodeData;\r\n    }\r\n\r\n    /**\r\n     * 数据解密\r\n     * @param {String} str \r\n     */\r\n    public static decrypt(b64Data: string) {\r\n        let n: number = 6;\r\n        if (b64Data.length % 2 === 0) {\r\n            n = 7;\r\n        }\r\n\r\n        let decodeData = '';\r\n        for (var idx = 0; idx < b64Data.length - n; idx += 2) {\r\n            decodeData += b64Data[idx + 1];\r\n            decodeData += b64Data[idx];\r\n        }\r\n\r\n        decodeData += b64Data.slice(b64Data.length - n + 1);\r\n\r\n        decodeData = this._base64Decode(decodeData);\r\n\r\n        return decodeData;\r\n    }\r\n\r\n    /**\r\n    * base64加密\r\n    * @param {string}input \r\n    * @returns \r\n    */\r\n    private static _base64encode(input: string) {\r\n        let keyStr: string = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\r\n        let output: string = \"\", chr1: number, chr2: number, chr3: number, enc1: number, enc2: number, enc3: number, enc4: number, i: number = 0;\r\n        input = this._utf8Encode(input);\r\n        while (i < input.length) {\r\n            chr1 = input.charCodeAt(i++);\r\n            chr2 = input.charCodeAt(i++);\r\n            chr3 = input.charCodeAt(i++);\r\n            enc1 = chr1 >> 2;\r\n            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\r\n            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\r\n            enc4 = chr3 & 63;\r\n            if (isNaN(chr2)) {\r\n                enc3 = enc4 = 64;\r\n            } else if (isNaN(chr3)) {\r\n                enc4 = 64;\r\n            }\r\n            output = output +\r\n                keyStr.charAt(enc1) + keyStr.charAt(enc2) +\r\n                keyStr.charAt(enc3) + keyStr.charAt(enc4);\r\n        }\r\n        return output;\r\n    }\r\n\r\n    /**\r\n     * utf-8 加密\r\n     * @param string \r\n     * @returns \r\n     */\r\n    private static _utf8Encode(string: string) {\r\n        string = string.replace(/\\r\\n/g, \"\\n\");\r\n        let utftext: string = \"\";\r\n        for (let n: number = 0; n < string.length; n++) {\r\n            let c: number = string.charCodeAt(n);\r\n            if (c < 128) {\r\n                utftext += String.fromCharCode(c);\r\n            } else if ((c > 127) && (c < 2048)) {\r\n                utftext += String.fromCharCode((c >> 6) | 192);\r\n                utftext += String.fromCharCode((c & 63) | 128);\r\n            } else {\r\n                utftext += String.fromCharCode((c >> 12) | 224);\r\n                utftext += String.fromCharCode(((c >> 6) & 63) | 128);\r\n                utftext += String.fromCharCode((c & 63) | 128);\r\n            }\r\n\r\n        }\r\n        return utftext;\r\n    }\r\n\r\n    /**\r\n     * utf-8解密\r\n     * @param utftext \r\n     * @returns \r\n     */\r\n    private static _utf8Decode(utftext: string) {\r\n        let string = \"\";\r\n        let i: number = 0;\r\n        let c: number = 0;\r\n        let c1: number = 0;\r\n        let c2: number = 0;\r\n        let c3: number = 0;\r\n        while (i < utftext.length) {\r\n            c = utftext.charCodeAt(i);\r\n            if (c < 128) {\r\n                string += String.fromCharCode(c);\r\n                i++;\r\n            } else if ((c > 191) && (c < 224)) {\r\n                c2 = utftext.charCodeAt(i + 1);\r\n                string += String.fromCharCode(((c & 31) << 6) | (c2 & 63));\r\n                i += 2;\r\n            } else {\r\n                c2 = utftext.charCodeAt(i + 1);\r\n                c3 = utftext.charCodeAt(i + 2);\r\n                string += String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\r\n                i += 3;\r\n            }\r\n        }\r\n        return string;\r\n    }\r\n\r\n    /**\r\n     * base64解密\r\n     * @param {string}input 解密字符串\r\n     * @returns \r\n     */\r\n    private static _base64Decode(input: string) {\r\n        let keyStr: string = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\r\n        let output: string = \"\";\r\n        let chr1: number;\r\n        let chr2: number;\r\n        let chr3: number;\r\n        let enc1: number;\r\n        let enc2: number;\r\n        let enc3: number;\r\n        let enc4: number;\r\n        let i: number = 0;\r\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\r\n        while (i < input.length) {\r\n            enc1 = keyStr.indexOf(input.charAt(i++));\r\n            enc2 = keyStr.indexOf(input.charAt(i++));\r\n            enc3 = keyStr.indexOf(input.charAt(i++));\r\n            enc4 = keyStr.indexOf(input.charAt(i++));\r\n            chr1 = (enc1 << 2) | (enc2 >> 4);\r\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\r\n            chr3 = ((enc3 & 3) << 6) | enc4;\r\n            output = output + String.fromCharCode(chr1);\r\n            if (enc3 != 64) {\r\n                output = output + String.fromCharCode(chr2);\r\n            }\r\n            if (enc4 != 64) {\r\n                output = output + String.fromCharCode(chr3);\r\n            }\r\n        }\r\n        output = this._utf8Decode(output);\r\n        return output;\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * 计算两个节点的xz坐标的弧度\r\n     * @param x1 \r\n     * @param z1 \r\n     * @param x2 \r\n     * @param z2 \r\n     * @returns \r\n     */\r\n    public static checkTwoPosEulRad(x1: number, z1: number, x2: number, z2: number) {\r\n        return Math.atan2(x1 - x2, z1 - z2);\r\n    }\r\n\r\n    /**\r\n    * 获取两个坐标在xz轴的距离\r\n    * @param x1 \r\n    * @param z1 \r\n    * @param x2 \r\n    * @param z2 \r\n    * @returns \r\n    */\r\n    public static getTwoPosXZLength(x1: number, z1: number, x2: number, z2: number) {\r\n        const x = x1 - x2;\r\n        const z = z1 - z2;\r\n        return Math.sqrt(x * x + z * z);\r\n    }\r\n\r\n    /**\r\n     * 将当前的string型 转化为vec3类型数据\r\n     * @param dataString string\r\n     * @returns Vec3\r\n     */\r\n    public static setStringToVec3(dataString: string) {\r\n        const data = dataString.split(',');\r\n        return new Vec3(Number(data[0]), Number(data[1]), Number(data[2]));\r\n    }\r\n\r\n    /**\r\n     * 将当前的string型 转化为Quat类型数据\r\n     * @param dataString string\r\n     * @returns Quat\r\n     */\r\n    public static setStringToQuate(dataString: string) {\r\n        const data = dataString.split(',');\r\n        return new Quat(Number(data[0]), Number(data[1]), Number(data[2]), Number(data[3]));\r\n    }\r\n\r\n    /**\r\n     * 获取给定范围内随机值\r\n     * @param num 0-n的n的具体数值\r\n     * @param isIncludeMinus 是否包含负数\r\n     * @returns \r\n     */\r\n    public static getRandomRange(num: number, isIncludeMinus?: boolean) {\r\n        if (isIncludeMinus) {\r\n            return (Math.random() > 0.5 ? 1 : -1) * Math.random() * num;\r\n        }\r\n        return Math.random() * num;\r\n    }\r\n\r\n    /**\r\n    * 获得一定角度一定距离的坐标X\r\n    * @param distance \r\n    * @param eulRad \r\n    * @returns \r\n    */\r\n    public static getDirectionOfDistanceX(distance: number, eulRad: number) {\r\n        return distance * Math.sin(eulRad);\r\n    }\r\n\r\n    /**\r\n     * 获得一定角度一定距离的坐标Z\r\n     * @param distance \r\n     * @param eulRad \r\n     * @returns \r\n     */\r\n    public static getDirectionOfDistanceZ(distance: number, eulRad: number) {\r\n        return distance * Math.cos(eulRad);\r\n    }\r\n\r\n    /* 角度转弧度 */\r\n    public static angle_to_radian(angle: number): number {\r\n        // 角度转弧度公式\r\n        // π / 180 * 角度\r\n\r\n        // 计算出弧度\r\n        let radian = Math.PI / 180 * angle;\r\n        // 返回弧度\r\n        return (radian);\r\n    }\r\n\r\n\r\n    /* 弧度转角度 */\r\n    public static radian_to_angle(radian: number): number {\r\n        // 弧度转角度公式\r\n        // 180 / π * 弧度\r\n\r\n        // 计算出角度\r\n        let angle = 180 / Math.PI * radian;\r\n        // 返回弧度\r\n        return (angle);\r\n    }\r\n\r\n\r\n    /* 角度转向量   */\r\n    public static angle_to_vector(angle: number): Vec2 {\r\n        // tan = sin / cos\r\n        // 将传入的角度转为弧度\r\n        let radian = this.angle_to_radian(angle);\r\n        // 算出cos,sin和tan\r\n        let cos = Math.cos(radian);// 邻边 / 斜边\r\n        let sin = Math.sin(radian);// 对边 / 斜边\r\n        let tan = sin / cos;// 对边 / 邻边\r\n        // 结合在一起并归一化\r\n        let vec = new Vec2(cos, sin).normalize();\r\n        // 返回向量\r\n        return (vec);\r\n    }\r\n\r\n\r\n    /* 向量转角度 */\r\n    public static vector_to_angle(vector: Vec2): number {\r\n        if (vector.x == 0 && vector.y == 0) {\r\n            return null;\r\n        }\r\n        // 将传入的向量归一化\r\n        let dir = v2(vector.x, vector.y).normalize();\r\n        // 计算出目标角度的弧度\r\n        let radian = dir.signAngle(new Vec2(1, 0));\r\n        // 把弧度计算成角度\r\n        let angle = -this.radian_to_angle(radian);\r\n        // 返回角度\r\n        return (angle);\r\n    }\r\n\r\n    /* 根据剩余秒数格式化剩余时间 返回 HH:MM:SS */\r\n    public static timeToString(time: any) {\r\n        let h = Math.floor(time / 3600) < 10 ? '0' + Math.floor(time / 3600) : Math.floor(time / 3600);\r\n        let m = Math.floor((time / 60 % 60)) < 10 ? '0' + Math.floor((time / 60 % 60)) : Math.floor((time / 60 % 60));\r\n        let s = Math.floor((time % 60)) < 10 ? '0' + Math.floor((time % 60)) : Math.floor((time % 60));\r\n\r\n        let res = '';\r\n        if (h != '00') {\r\n            res = `${h}:${m}:${s}`;\r\n            return res;\r\n        }\r\n        else {\r\n            res = `${m}:${s}`;\r\n            return res;\r\n        }\r\n    }\r\n\r\n    /* 根据剩余秒数格式化剩余时间 返回 HH时MM分SS秒 */\r\n    public static timeToStrings(time: any) {\r\n        let h = Math.floor(time / 3600) < 10 ? '0' + Math.floor(time / 3600) : Math.floor(time / 3600);\r\n        let m = Math.floor((time / 60 % 60)) < 10 ? '0' + Math.floor((time / 60 % 60)) : Math.floor((time / 60 % 60));\r\n        let s = Math.floor((time % 60)) < 10 ? '0' + Math.floor((time % 60)) : Math.floor((time % 60));\r\n\r\n        let res = '';\r\n        res = `${h}:${m}:${s}`;\r\n        return res;\r\n    }\r\n\r\n    /* 根据剩余秒数格式化剩余时间 返回 HH时MM分SS秒 */\r\n    public static getTimeToString(time: any) {\r\n        let h = Math.floor(time / 3600) < 10 ? '0' + Math.floor(time / 3600) : Math.floor(time / 3600);\r\n        let m = Math.floor((time / 60 % 60)) < 10 ? '0' + Math.floor((time / 60 % 60)) : Math.floor((time / 60 % 60));\r\n        let s = Math.floor((time % 60)) < 10 ? '0' + Math.floor((time % 60)) : Math.floor((time % 60));\r\n\r\n        let res = '';\r\n        if (h != '00') {\r\n            res = `${h}时${m}分`;\r\n            return res;\r\n        }\r\n        else if (m != '00') {\r\n            res = `${m}分${s}秒`;\r\n            return res;\r\n        }\r\n        else {\r\n            res = `${s}秒`;\r\n            return res;\r\n        }\r\n    }\r\n\r\n    /* 获取今日剩余时间 返回剩余秒数 */\r\n    public static getTodayRemainingtime() {\r\n        let startTime: any = new Date().getTime();\r\n        let endTime: any = new Date(new Date().toLocaleDateString()).getTime();\r\n        let days = (endTime - startTime) / 1000 / 3600 / 24;\r\n        let day = Math.floor(days);\r\n        let hours = (days - day) * 24;\r\n        let hour: any = Math.floor(hours);\r\n        let minutes = (hours - hour) * 60;\r\n        let minute: any = Math.floor(minutes);\r\n        let seconds = (minutes - minute) * 60;\r\n        let second: any = Math.floor(seconds);\r\n        if (hour > 0) {\r\n            hour = hour < 10 ? '0' + hour : hour;\r\n            minute = minute < 10 ? '0' + minute : minute;\r\n            second = second < 10 ? '0' + second : second;\r\n            return `${hour}:${minute}:${second}:`;\r\n        }\r\n        else {\r\n            minute = minute < 10 ? '0' + minute : minute;\r\n            second = second < 10 ? '0' + second : second;\r\n            return `${minute}:${second}:`;\r\n        }\r\n\r\n    }\r\n\r\n    /* 获取当前月的天数 */\r\n    public static getMonthDay() {\r\n        var date = new Date();\r\n        var year = date.getFullYear();\r\n        var month = date.getMonth() + 1;\r\n        var d = new Date(year, month, 0);\r\n        return d.getDate();\r\n    }\r\n\r\n    public static getMonth() {\r\n        var date = new Date();\r\n        var month = date.getMonth() + 1;\r\n        return month;\r\n    }\r\n\r\n    public static stringToColor(colorStr: string) {\r\n        let r = this.hex2int(colorStr[0], 16) + this.hex2int(colorStr[1], 1);\r\n        let g = this.hex2int(colorStr[2], 16) + this.hex2int(colorStr[3], 1);\r\n        let b = this.hex2int(colorStr[4], 16) + this.hex2int(colorStr[5], 1);\r\n        return new Color(r, g, b, 255);\r\n    }\r\n\r\n    public static hex2int(hex: string, digit: number) {\r\n        let code = hex.charCodeAt(0);\r\n        if (48 <= code && code < 58) {\r\n            code -= 48;\r\n        } else {\r\n            code = (code & 0xdf) - 65 + 10;\r\n        }\r\n        return code * digit;\r\n    }\r\n\r\n    /**\r\n     * 根据时间戳获取具体的时间\r\n     * @param time  秒\r\n     */\r\n    public static getDateDetail(time: number) {\r\n        let date = new Date(time * 1000);\r\n        let n = date.toLocaleString();\r\n        return n;\r\n    }\r\n\r\n    public static parseTimeTwo(time: number) {\r\n        if (time) {\r\n            let date = new Date(time * 1000);\r\n            let year = date.getFullYear()\r\n            /* 在日期格式中，月份是从0开始的，因此要加0\r\n             * 使用三元表达式在小于10的前面加0，以达到格式统一  如 09:11:05\r\n             * */\r\n            let month = date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1\r\n            let day = date.getDate() < 10 ? '0' + date.getDate() : date.getDate()\r\n            let hours = date.getHours() < 10 ? '0' + date.getHours() : date.getHours()\r\n            let minutes = date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes()\r\n            // 拼接\r\n            return year + '年' + month + '月' + day + '日 ' + hours + ':' + minutes\r\n        } else {\r\n            return ''\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取圆内随机点\r\n     * @param r \r\n     * @param pos \r\n     */\r\n    public static getCircleRandPoint(r: number, pos: Vec2) {\r\n        let x = pos.x + (Math.random() - 0.5) * 2 * r;\r\n        let y = pos.y + (Math.random() - 0.5) * 2 * r;\r\n        return new Vec2(x, y);\r\n    }\r\n\r\n\r\n    /**\r\n   * 以某点为圆心，生成圆周上等分点的坐标\r\n   *\r\n   * @param {number} r 半径\r\n   * @param {Vec2} pos 圆心坐标\r\n   * @param {number} count 等分点数量\r\n   * @param {number} [randomScope=80] 等分点的随机波动范围\r\n   * @returns {Vec2[]} 返回等分点坐标\r\n   */\r\n    public static getCirclePoints(r: number, pos: Vec2, count: number, randomScope: number = 60, dir = 1): Vec2[] {\r\n        let points = [];\r\n        let radians = dir * (Math.PI / 180) * Math.round(360 / count);\r\n        for (let i = 0; i < count; i++) {\r\n            let x = pos.x + r * Math.sin(radians * i);\r\n            let y = pos.y + r * Math.cos(radians * i);\r\n            points.unshift(new Vec2(x + Math.random() * randomScope, y + Math.random() * randomScope));\r\n        }\r\n        return points;\r\n    }\r\n\r\n    /**\r\n  * 以某点为圆心，生成圆周上等分点的坐标\r\n  *\r\n  * @param {number} r 半径\r\n  * @param {Vec2} pos 圆心坐标\r\n  * @param {number} count 等分点数量\r\n  * @param {number} [randomScope=80] 等分点的随机波动范围\r\n  * @returns {Vec2[]} 返回等分点坐标\r\n  */\r\n    public static getCircleRandomPoints(r: number, pos: Vec3, count: number, randomScope: number = 60): Vec3[] {\r\n        let points = [];\r\n        let radians = (Math.PI / 180) * Math.round(360 / count);\r\n        let offerR = Math.random() * Math.PI;\r\n        for (let i = 0; i < count; i++) {\r\n            let x = pos.x + r * Math.sin(radians * i + offerR);\r\n            let y = pos.y + r * Math.cos(radians * i + offerR);\r\n            points.unshift(new Vec3(x + Math.random() * randomScope, y + Math.random() * randomScope, 0));\r\n        }\r\n        return points;\r\n    }\r\n\r\n    /**\r\n     * 通过半径和角度获取坐标\r\n     * @param r \r\n     * @param pos \r\n     * @param angle \r\n     * @returns \r\n     */\r\n    public static getCirclePos(r: number, pos: Vec3, angle: number) {\r\n        let radians = (Math.PI / 180) * angle;\r\n        let x = pos.y + r * Math.cos(radians);\r\n        let y = pos.x + r * Math.sin(radians);\r\n        return new Vec3(x, y, 0);\r\n\r\n    }\r\n\r\n    /**\r\n     * 获取上下随机坐标\r\n     * @param r \r\n     * @param pos \r\n     * @param count \r\n     * @param randomScope \r\n     * @returns \r\n     */\r\n    public static getUpDownRandomPoints(r: number, pos: Vec3, count: number, randomScope: number = 300): Array<Vec3> {\r\n        let points = [];\r\n        for (let i = 0; i < count; i++) {\r\n            let dir = Math.floor(Math.random() * 100) <= 50 ? 1 : -1;\r\n            let x = (Math.random() - 0.5) * 2 * randomScope;\r\n            let y = pos.y + (r + Math.random() * 60) * dir;\r\n            points.unshift(new Vec3(x, y, 0));\r\n        }\r\n        return points;\r\n    }\r\n\r\n    /**\r\n     * 固定方形小地图刷怪\r\n     * @param r \r\n     * @param pos \r\n     * @param count \r\n     * @param limtMoveWidth \r\n     * @param limtMoveHeight \r\n     * @returns \r\n     */\r\n    public static getLeftRightRectRandomPoints1(r: number, pos: Vec3, count: number, limtMoveWidth: number, limtMoveHeight: number, randomScope: number = 20): Array<Vec3> {\r\n        let points = [];\r\n        if (limtMoveWidth > limtMoveHeight) {\r\n            r = limtMoveHeight / 2 - randomScope;\r\n        }\r\n        else {\r\n            r = limtMoveWidth / 2 - randomScope;\r\n        }\r\n        r = limtMoveWidth / 2 - randomScope;\r\n        let radians = (Math.PI / 180) * Math.round(360 / count);\r\n        let offerR = Math.random() * Math.PI;\r\n        let rec = new Rect(-limtMoveWidth / 2, -limtMoveHeight / 2, limtMoveWidth, limtMoveHeight);\r\n        let index = 0;\r\n        for (let i = 0; i < count; i++) {\r\n            let x = pos.x + r * Math.sin(radians * i + offerR);\r\n            let y = pos.y + r * Math.cos(radians * i + offerR);\r\n            //判断当前坐标是否在方形内内\r\n            let newPos = new Vec2(x + Math.random() * randomScope, y + Math.random() * randomScope);\r\n            if (rec.contains(newPos)) {\r\n                points.unshift(new Vec3(newPos.x, newPos.y, 0));\r\n            }\r\n            else {\r\n                if (points.length) {\r\n                    //存在 从现有的点取\r\n                    index = Math.floor(Math.random() * points.length);\r\n                    let copyPos = this.clone(points[index]);\r\n                    let randPos = new Vec3(copyPos.x + (Math.random() - 0.5) * 2 * 20, copyPos.y + (Math.random() - 0.5) * 2 * 20, 0);\r\n                    points.unshift(randPos);\r\n                }\r\n                else {\r\n                    //方形内随机取随机取\r\n                    r = limtMoveHeight / 2 - randomScope;\r\n                    let newPosArr = this.getCircleRandomPoints(r, new Vec3(0, 0, 0), 10, 20);\r\n                    index = Math.floor(Math.random() * newPosArr.length);\r\n                    points.unshift(newPosArr[index]);\r\n                }\r\n            }\r\n        }\r\n        return points;\r\n    }\r\n\r\n\r\n    public static uuid() {\r\n        var s = [];\r\n        var hexDigits = \"0123456789abcdef\";\r\n        for (var i = 0; i < 36; i++) {\r\n            s[i] = hexDigits.substr(Math.floor(Math.random() * 0x10), 1);\r\n        }\r\n        s[14] = \"4\"; // bits 12-15 of the time_hi_and_version field to 0010\r\n        s[19] = hexDigits.substr((s[19] & 0x3) | 0x8, 1); // bits 6-7 of the clock_seq_hi_and_reserved to 01\r\n        s[8] = s[13] = s[18] = s[23] = \"-\";\r\n\r\n        var uuid = s.join(\"\");\r\n        return uuid;\r\n    }\r\n\r\n\r\n    /**\r\n * 生成一个用不重复的ID\r\n * @param { Number } randomLength\r\n */\r\n    public static getUuid(randomLength: number) {\r\n        return Number(Math.random().toString().substr(2, randomLength) + Date.now()).toString(36)\r\n    }\r\n\r\n    /** 获取指定月份天数 */\r\n    public static getMonthDays(year: number, month: number): number {\r\n        let date = new Date(year, month, 0);\r\n        return date.getDate();\r\n    }\r\n\r\n    /** 获取指定月份第一天时间戳 */\r\n    public static getMonthDayMilliseconds(year: number, month: number): number {\r\n        let date = new Date(year, month, 1);\r\n        return date.getTime();\r\n    }\r\n\r\n    public static getDayHour(time: number) {\r\n        let date = new Date(time);\r\n        let day = date.getDate() < 10 ? '0' + date.getDate() : date.getDate();\r\n        let hours = date.getHours() < 10 ? '0' + date.getHours() : date.getHours();\r\n        let minutes = date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes();\r\n        // 拼接\r\n        return day + '天' + hours + '时';\r\n    }\r\n\r\n    public static getWinSize(): Size {\r\n        return screen.windowSize;\r\n        return view.getVisibleSize();\r\n    }\r\n\r\n    public static getBezierPoint(begin: Vec2, ctrl1: Vec2, ctrl2: Vec2, end: Vec2, t: number): Vec2 {\r\n        const x = begin.x * (1 - t) * (1 - t) * (1 - t) + 3 * ctrl1.x * t * (1 - t) * (1 - t) + 3 * ctrl2.x * t * t * (1 - t) + end.x * t * t * t;\r\n        const y = begin.y * (1 - t) * (1 - t) * (1 - t) + 3 * ctrl1.y * t * (1 - t) * (1 - t) + 3 * ctrl2.y * t * t * (1 - t) + end.y * t * t * t;\r\n        return v2(x, y);\r\n    }\r\n\r\n    /**\r\n *  二阶贝塞尔曲线 运动\r\n * @param target\r\n * @param {number} duration\r\n * @param {} c1 起点坐标\r\n * @param {} c2 控制点\r\n * @param {Vec3} to 终点坐标\r\n * @param opts\r\n * @returns {any}\r\n * TweenUtils.bezierTo(this.spNode,2,v2(-200,-200),v2(200,0),v3(350,400,0),null).start()\r\n */\r\n    public static bezierTo(target: any, duration: number, c1: Vec2, c2: Vec2, to: Vec3, opts: any) {\r\n        opts = opts || Object.create(null);\r\n        /**\r\n         * @desc 二阶贝塞尔\r\n         * @param {number} t 当前百分比\r\n         * @param {} p1 起点坐标\r\n         * @param {} cp 控制点\r\n         * @param {} p2 终点坐标\r\n         * @returns {any}\r\n         */\r\n        let twoBezier = (t: number, p1: Vec2, cp: Vec2, p2: Vec3) => {\r\n            let x = (1 - t) * (1 - t) * p1.x + 2 * t * (1 - t) * cp.x + t * t * p2.x;\r\n            let y = (1 - t) * (1 - t) * p1.y + 2 * t * (1 - t) * cp.y + t * t * p2.y;\r\n            return v3(x, y, 0);\r\n        };\r\n        opts.onUpdate = (arg: Vec3, ratio: number) => {\r\n            target.position = twoBezier(ratio, c1, c2, to);\r\n        };\r\n        return tween(target).to(duration, {}, opts);\r\n    }\r\n\r\n    /* 贝塞尔曲线运动 */\r\n    public static playTargetTween(target: Node, playTime: number, targetPos: Vec2) {\r\n        return new Promise((resolve, reject) => {\r\n            var startPos = target.position;\r\n            var startAngle = target.eulerAngles;\r\n            var targetTween = tween(startPos);\r\n            let c1 = new Vec2();\r\n            const mixY = 100;\r\n            const maxY = 200;\r\n            const mixX = 100;\r\n            const maxX = 200;\r\n            var progressX = function (start, end, current, t) {\r\n                //@ts-ignore\r\n                current = bezier(start, mixX, maxX, end, t);\r\n                return current;\r\n            };\r\n            var progressY = function (start, end, current, t) {\r\n                //@ts-ignore\r\n                current = bezier(start, mixY, maxY, end, t);\r\n                return current;\r\n            };\r\n\r\n            targetTween.parallel(\r\n                tween().to(playTime, { x: -target.position.x }, {\r\n                    progress: progressX, easing: \"smooth\", onUpdate: () => {\r\n                        target.setPosition(startPos);\r\n                    }\r\n                }),\r\n                tween().to(playTime, { y: 0 }, {\r\n                    progress: progressY, easing: \"smooth\", onUpdate: () => {\r\n                        target.setPosition(startPos);\r\n                    }\r\n                }),\r\n            ).start();\r\n            tween(startAngle).to(playTime, { z: 360 }, {\r\n                onUpdate: () => {\r\n                    target.eulerAngles = startAngle;\r\n                }\r\n            }).call(() => {\r\n                resolve(1);\r\n            }).start();\r\n        })\r\n    }\r\n\r\n    /**\r\n     * 贝塞尔曲线 \r\n     * Util.targetBezier(this.node, startPos, targetPos, 1, 0, 0.72, 0.1, 1).then(() => {\r\n             PoolManager.instance.putNode(this.node);\r\n         });\r\n     * @param target \r\n     * @param startPos \r\n     * @param targetPos \r\n     * @param time \r\n     * @param px1 \r\n     * @param py1 \r\n     * @param px2 \r\n     * @param py2 \r\n     * @returns \r\n     */\r\n    public static targetBezier(target: Node, startPos: Vec2, targetPos: Vec2, time: number, px1: number, py1: number, px2: number, py2: number) {\r\n        return new Promise((resolve, reject) => {\r\n            let tweenObj = { t: 0 };\r\n            let prePos = new Vec2(startPos.x, startPos.y);\r\n            tween(tweenObj).to(time, { t: 1 }, {\r\n                onUpdate: (tar, t) => {\r\n                    const p0 = v2(0, 0);\r\n                    const p1 = v2(px1, py1);\r\n                    const p2 = v2(px2, py2);\r\n                    const p3 = v2(1, 1);\r\n                    const x = p0.x * (1 - t) * (1 - t) * (1 - t) + 3 * p1.x * t * (1 - t) * (1 - t) + 3 * p2.x * t * t * (1 - t) + p3.x * t * t * t;\r\n                    const y = p0.y * (1 - t) * (1 - t) * (1 - t) + 3 * p1.y * t * (1 - t) * (1 - t) + 3 * p2.y * t * t * (1 - t) + p3.y * t * t * t;\r\n                    let posx = (targetPos.x - startPos.x) * x + startPos.x;\r\n                    let posy = (targetPos.y - startPos.y) * y + startPos.y;\r\n                    let curPos = new Vec2(posx, posy);\r\n                    target.setPosition(posx, posy);\r\n                    let vector = new Vec2();\r\n                    Vec2.subtract(vector, curPos, prePos);\r\n                    let r = vector.signAngle(v2(0, 1));\r\n                    let angle = misc.radiansToDegrees(r);\r\n                    target.angle = -angle;\r\n                    prePos = curPos.clone();\r\n                }\r\n            }).call(() => {\r\n                resolve(1);\r\n            }).start();\r\n        })\r\n    }\r\n\r\n    /**\r\n     * 贝塞尔加缩放\r\n     * @param tweenObj \r\n     * @param target \r\n     * @param startPos \r\n     * @param targetPos \r\n     * @param time \r\n     * @param scale \r\n     * @param px1 \r\n     * @param py1 \r\n     * @param px2 \r\n     * @param py2 \r\n     * @returns \r\n     */\r\n    public static targetScaleBezier(tweenObj: any, target: Node, startPos: Vec3, targetPos: Vec3, time: number, scale: number, px1: number, py1: number, px2: number, py2: number) {\r\n        return new Promise((resolve, reject) => {\r\n            let t1 = tween(tweenObj).to(time, { t: 1 }, {\r\n                onUpdate: (tar, t) => {\r\n                    const p0 = v2(0, 0);\r\n                    const p1 = v2(px1, py1);\r\n                    const p2 = v2(px2, py2);\r\n                    const p3 = v2(1, 1);\r\n                    const x = p0.x * (1 - t) * (1 - t) * (1 - t) + 3 * p1.x * t * (1 - t) * (1 - t) + 3 * p2.x * t * t * (1 - t) + p3.x * t * t * t;\r\n                    const y = p0.y * (1 - t) * (1 - t) * (1 - t) + 3 * p1.y * t * (1 - t) * (1 - t) + 3 * p2.y * t * t * (1 - t) + p3.y * t * t * t;\r\n                    let posx = (targetPos.x - startPos.x) * x + startPos.x;\r\n                    let posy = (targetPos.y - startPos.y) * y + startPos.y;\r\n                    target.setPosition(posx, posy);\r\n                }\r\n            });\r\n            let t2 = tween(tweenObj).to(time, { scale: scale }, {\r\n                onUpdate: (tar: any, t) => {\r\n                    target.setScale(tar.scale, tar.scale, tar.scale);\r\n                }\r\n            });\r\n            tween(tweenObj).parallel(t1, t2).call(() => {\r\n                resolve(1);\r\n            }).start();\r\n        })\r\n\r\n    }\r\n\r\n    // 根据 传入 C 值，计算该C值下，最小暴击范围的平均暴击率\r\n    private static PFromC(c: number): number {\r\n        let dCurP: number = 0;\r\n        let dPreSuccessP: number = 0;\r\n        let dPE: number = 0;\r\n        let nMaxFail = Math.ceil(1 / c);\r\n        for (let i = 1; i <= nMaxFail; ++i) {\r\n            dCurP = Math.min(1, i * c) * (1 - dPreSuccessP);\r\n            dPreSuccessP += dCurP;\r\n            dPE += i * dCurP;\r\n        }\r\n        return 1 / dPE;\r\n    }\r\n\r\n    // 根据传入的暴击率，计算 PRD 算法中的系数 C\r\n    public static CFromP(p: number): number {\r\n        let dUp: number = p;\r\n        let dLow: number = 0;\r\n        let dMid: number = p;\r\n        let dPLast: number = 1;\r\n        while (true) {\r\n            dMid = (dUp + dLow) / 2;\r\n            let dPtested: number = this.PFromC(dMid);\r\n\r\n            if (Math.abs(dPtested - dPLast) <= 0.00005) break;\r\n\r\n            if (dPtested > p) dUp = dMid;\r\n            else dLow = dMid;\r\n\r\n            dPLast = dPtested;\r\n        }\r\n\r\n        return dMid;\r\n    }\r\n\r\n    /* 计算两线段的交点坐标 */\r\n    public static segmentsIntr(a, b, c, d) {\r\n\r\n        // 三角形abc 面积的2倍 \r\n        var area_abc = (a.x - c.x) * (b.y - c.y) - (a.y - c.y) * (b.x - c.x);\r\n\r\n        // 三角形abd 面积的2倍 \r\n        var area_abd = (a.x - d.x) * (b.y - d.y) - (a.y - d.y) * (b.x - d.x);\r\n\r\n        // 面积符号相同则两点在线段同侧,不相交 (对点在线段上的情况,本例当作不相交处理); \r\n        if (area_abc * area_abd >= 0) {\r\n            return false;\r\n        }\r\n\r\n        // 三角形cda 面积的2倍 \r\n        var area_cda = (c.x - a.x) * (d.y - a.y) - (c.y - a.y) * (d.x - a.x);\r\n        // 三角形cdb 面积的2倍 \r\n        // 注意: 这里有一个小优化.不需要再用公式计算面积,而是通过已知的三个面积加减得出. \r\n        var area_cdb = area_cda + area_abc - area_abd;\r\n        if (area_cda * area_cdb >= 0) {\r\n            return false;\r\n        }\r\n\r\n        //计算交点坐标 \r\n        var t = area_cda / (area_abd - area_abc);\r\n        var dx = t * (b.x - a.x),\r\n            dy = t * (b.y - a.y);\r\n        return v2(a.x + dx, a.y + dy);\r\n    }\r\n\r\n\r\n\r\n    /* 贝塞尔曲线分线段数量 */\r\n    public static bezier_length(start_point, ctrl1, ctrl2, end_point, count: number = 20) {\r\n        var prev_point = start_point;\r\n\r\n        var length = 0;\r\n\r\n        var t = 0.05;\r\n        for (var i = 0; i < 20; i++) {\r\n            var x = start_point.x * (1 - t) * (1 - t) * (1 - t) + 3 * ctrl1.x * t * (1 - t) * (1 - t) + 3 * ctrl2.x * t * t * (1 - t) + end_point.x * t * t * t;\r\n\r\n            var y = start_point.y * (1 - t) * (1 - t) * (1 - t) + 3 * ctrl1.y * t * (1 - t) * (1 - t) + 3 * ctrl2.y * t * t * (1 - t) + end_point.y * t * t * t;\r\n\r\n            var now_point = new Vec2(x, y);\r\n\r\n            var dir = now_point.subtract(prev_point);\r\n\r\n            prev_point = now_point;\r\n\r\n            length += dir.length();\r\n\r\n            t += 0.05;\r\n\r\n        }\r\n\r\n        return length;\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * @param weights 权重数组 随机一个\r\n     * @returns \r\n     */\r\n    static weightRandomIdx(weights: number[]) {\r\n        if (weights.length <= 1) {\r\n            return 0;\r\n        }\r\n\r\n        let tw: number = 0;\r\n        for (let i = 0; i < weights.length; i++) {\r\n            tw += weights[i];\r\n        }\r\n        let rw = Math.random() * tw;\r\n        let sw: number = 0, ew: number = 0;\r\n\r\n        for (let i = 0; i < weights.length; i++) {\r\n            ew = sw + weights[i];\r\n            if (sw < rw && rw <= ew) {\r\n                return i;\r\n            }\r\n            sw = ew;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    /**小数去0 */\r\n    public static numMoveZoro(num: string) {\r\n        if (num.indexOf('.') < 0) {\r\n            return num;\r\n        }\r\n        num = num.replace(/0+?$/g, '')\r\n        if (num[num.length - 1] == '.') {\r\n            num = num.replace(/[.$]/, '');\r\n        }\r\n        return num;\r\n    }\r\n\r\n    /**\r\n     * 获取矩形区域内随机坐标点\r\n     * @param rect \r\n     */\r\n    public static getRectRandPos(rect: Rect) {\r\n        let pos = new Vec3();\r\n        let randX = Math.random() * rect.width;\r\n        let randY = Math.random() * rect.height;\r\n        pos.x = rect.x + randX;\r\n        pos.y = rect.y + randY;\r\n        return pos;\r\n    }\r\n\r\n    public static adapterScale() {\r\n        let designSize = view.getDesignResolutionSize();\r\n        let visibleSize = view.getVisibleSize();\r\n        let scale = visibleSize.width / designSize.width;\r\n        return scale\r\n    }\r\n}\r\n"]}
{"version":3,"sources":["file:///D:/CODE/cocos_workspace/%E8%83%8C%E5%8C%85%E8%8B%B1%E9%9B%84/assets/Scripts/Game/Data/ChapterMapData.ts"],"names":["ChapterMapData","ChapterDropRewardObj","Constants","CfgMgr","Debug","ChapterCfg","PlayerData","_chapterMapData","_ChapterDropRewardData","Map","chapterMapData","init","setChapterMapData","chapterId","instance","playerInfo","curChapter","getDataById","selectLoadConfig","cMonsterId","log","setChapterRewardData","chapterMapRewardData","rewardStr","rewardArr","split","chapterDropRewardObj","itemId","Number","num","has","Num","ItemId","set","getChapterRewardData","isWin","StarReward","StarRewardArr","i","length","WinReward","WinRewardArr","Array","from","values","clear","_instance"],"mappings":"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","sourcesContent":["import { Constants } from \"../../Constants\";\r\nimport { CfgMgr } from \"../../Frame/CfgMgr\";\r\nimport { Debug } from \"../../Frame/Debug\";\r\nimport { ChapterCfg } from \"../../Model/ChapterModel\";\r\nimport { PlayerData } from \"./PlayerData\";\r\n\r\nexport class ChapterMapData {\r\n    private _chapterMapData: ChapterCfg = null; //章节地图数据\r\n    private _ChapterDropRewardData: Map<number, ChapterDropRewardObj> = new Map();//掉落奖励数据\r\n\r\n    public get chapterMapData() {\r\n        return this._chapterMapData;\r\n    }\r\n\r\n    init() {\r\n        this.setChapterMapData();\r\n    }\r\n\r\n    /* 设置章节数据 */\r\n    setChapterMapData() {\r\n        let chapterId = PlayerData.instance.playerInfo.curChapter;\r\n        this._chapterMapData = CfgMgr.getDataById<ChapterCfg>(new ChapterCfg(), chapterId);\r\n        //加载配置\r\n        Constants.selectLoadConfig = [this._chapterMapData.cMonsterId];\r\n        Debug.log('游戏章节数据', this._chapterMapData);\r\n    }\r\n\r\n    /* 设置奖励数据 */\r\n    setChapterRewardData(chapterMapRewardData: Map<number, ChapterDropRewardObj>, rewardStr: string) {\r\n        let rewardArr = rewardStr.split('|');\r\n        let chapterDropRewardObj: ChapterDropRewardObj = null;\r\n        let itemId = Number(rewardArr[0]);\r\n        let num = Number(rewardArr[1]);\r\n        if (chapterMapRewardData.has(itemId)) {\r\n            chapterDropRewardObj.Num += num;\r\n        }\r\n        else {\r\n            chapterDropRewardObj = new ChapterDropRewardObj();\r\n            chapterDropRewardObj.ItemId = itemId;\r\n            chapterDropRewardObj.Num = num;\r\n            chapterMapRewardData.set(itemId, chapterDropRewardObj);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 是否胜利\r\n     * @param isWin \r\n     */\r\n    getChapterRewardData(isWin: boolean) {\r\n        //TODO 掉落奖励\r\n        let chapterMapRewardData: Map<number, ChapterDropRewardObj> = new Map();\r\n        if (this._chapterMapData.StarReward) {\r\n            //开始奖励\r\n            let StarRewardArr = this._chapterMapData.StarReward.split(',');\r\n            for (let i = 0; i < StarRewardArr.length; i++) {\r\n                const rewardStr = StarRewardArr[i];\r\n                this.setChapterRewardData(chapterMapRewardData, rewardStr);\r\n            }\r\n        }\r\n        if (isWin) {\r\n            //胜利奖励\r\n            if (this._chapterMapData.WinReward) {\r\n                let WinRewardArr = this._chapterMapData.WinReward.split(',');\r\n                for (let i = 0; i < WinRewardArr.length; i++) {\r\n                    const rewardStr = WinRewardArr[i];\r\n                    this.setChapterRewardData(chapterMapRewardData, rewardStr);\r\n                }\r\n            }\r\n            //首次通关奖励\r\n            // let chapterLeveId = ChapterData.instance.getChapterLeveIdByChapterId(this._chapterMapData.Id);\r\n            // if (this._chapterMapData.FirstPass && chapterLeveId == PlayerData.instance.playerInfo.UnlockChapter) {\r\n            //     let FirstPassArr = this._chapterMapData.FirstPass.split(',');\r\n            //     for (let i = 0; i < FirstPassArr.length; i++) {\r\n            //         const rewardStr = FirstPassArr[i];\r\n            //         this.setChapterRewardData(chapterMapRewardData, rewardStr);\r\n            //     }\r\n            // }\r\n        }\r\n        return Array.from(chapterMapRewardData.values());\r\n    }\r\n\r\n\r\n    clear() {\r\n        this._chapterMapData = null;\r\n        this._ChapterDropRewardData.clear();\r\n    }\r\n\r\n    private static _instance: ChapterMapData = null;\r\n    public static get instance() {\r\n        if (!this._instance) {\r\n            this._instance = new ChapterMapData();\r\n        }\r\n        return this._instance;\r\n    }\r\n}\r\n\r\nexport class ChapterDropRewardObj {\r\n    ItemId: number;//物品id\r\n    Num: number;//物品数量\r\n}\r\n\r\n\r\n"]}
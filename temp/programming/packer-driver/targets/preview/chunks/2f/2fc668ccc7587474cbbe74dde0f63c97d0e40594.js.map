{"version":3,"sources":["file:///D:/CODE/cocos_workspace/%E8%83%8C%E5%8C%85%E8%8B%B1%E9%9B%84/assets/Scripts/Game/Battle/DamageItem.ts"],"names":["_decorator","Color","Component","Label","tween","v3","PoolManager","ccclass","property","DamageItem","monsterKey","init","attack","type","fontSize","numLab","string","setsetDamageColor","setDamageFlyAnim","setDamageScaleAnim","node","scale","to","call","instance","putNode","start","BindTarget","position","target","getPosition","parallel","by","onUpdate","tar","setPosition","setScale","delay","color","fromHEX"],"mappings":"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","sourcesContent":["import { _decorator, Color, Component, Label, tween, v3, Vec3 } from 'cc';\r\nimport { PoolManager } from '../../Frame/PoolManager';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('DamageItem')\r\nexport class DamageItem extends Component {\r\n    @property(Label)\r\n    numLab: Label = null;\r\n    public monsterKey = ''\r\n\r\n    init(attack: number, type: number, fontSize: number = 25) {\r\n        this.numLab.string = `${attack}`;\r\n        this.numLab.fontSize = fontSize;\r\n        this.setsetDamageColor(type);\r\n        this.setDamageFlyAnim(attack, type);\r\n    }\r\n\r\n\r\n    setDamageScaleAnim(attack: number, type: number) {\r\n        if (attack > 0) {\r\n            this.node.scale = v3(1, 1, 1);\r\n            tween(this.node).to(0.25, { scale: v3(0.8, 0.8, 0.8) }).call(() => {\r\n                PoolManager.instance.putNode(this.node);\r\n            }).start();\r\n        }\r\n        else {\r\n            PoolManager.instance.putNode(this.node);\r\n        }\r\n    }\r\n\r\n    setDamageFlyAnim(attack: number, type: number) {\r\n        let node = this.numLab.node;\r\n        if (attack > 0) {\r\n            class BindTarget {\r\n                position: Vec3;\r\n                scale: number;\r\n            }\r\n            let target = new BindTarget();\r\n            target.position = node.getPosition();\r\n            target.scale = 1.5;\r\n            tween(target).parallel(\r\n                tween().by(0.25, { position: v3(0, 30, 0) }, {\r\n                    onUpdate: (tar: BindTarget) => {\r\n                        node.setPosition(tar.position);\r\n                    }\r\n                }),\r\n                tween().to(0.25, { scale: 1.3 }, {\r\n                    onUpdate: (tar: BindTarget) => {\r\n                        node.setScale(tar.scale, tar.scale);\r\n                    }\r\n                })\r\n            ).delay(0.25).call(() => {\r\n                node.setPosition(0, 0, 0);\r\n                PoolManager.instance.putNode(this.node);\r\n            }).start();\r\n        }\r\n        else {\r\n            node.setPosition(0, 0, 0);\r\n            PoolManager.instance.putNode(this.node);\r\n        }\r\n    }\r\n\r\n    setsetDamageColor(type: number) {\r\n        switch (type) {\r\n            case 0:\r\n                //正常\r\n                this.numLab.color = new Color().fromHEX('#ffffff');\r\n                break;\r\n            case 1:\r\n                //暴击\r\n                this.numLab.color = new Color().fromHEX('#FF0000');\r\n                break\r\n        }\r\n    }\r\n}\r\n\r\n\r\n"]}
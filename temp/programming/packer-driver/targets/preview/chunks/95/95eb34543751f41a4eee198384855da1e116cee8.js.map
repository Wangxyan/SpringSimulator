{"version":3,"sources":["file:///D:/CODE/cocos_workspace/%E8%83%8C%E5%8C%85%E8%8B%B1%E9%9B%84/assets/Scripts/Game/Mgr/GridMapManager.ts"],"names":["GridBgObj","_decorator","director","Component","Node","UITransform","Layout","Sprite","Vec3","v3","UIOpacity","v2","Rect","Label","Constants","EventListener","ResourcesUtil","Util","GridData","GridObj","GameEvent","GridBgItem","WeaponItem","ccclass","property","GridMapManager","type","tooltip","_countdownTime","_isCounting","_gridRes","_padding","startPoint","_isTouch","_offfSet","_startPos","_placeStatus","_temPos","_temPoint","_temAddPoint","_mainAreaKey","_addPlaceAreaData","Map","init","initGridRes","initStatPoint","updateAttributeDisplay","countdownLabel","string","toString","max_gridLenArr","instance","bagCfg","max_gridLen","split","private_gridLenArr","private_gridLen","startRow","Math","floor","Number","startCol","gridObj","row","col","initAllGridRes","space","size","getMaxGridMapSize","gridWidth","allGridList","getComponent","setContentSize","spacingX","spacingY","bg","width","height","paddingTop","paddingBottom","paddingLeft","paddingRight","updateLayout","setPosition","removeWeaponList","res","i","sprite","bgs","path","gridPath","geSpriteFrame","then","data","spriteFrame","pos","resNodePos","equals","ZERO","length","getGridMapSize","rowColArr","gridList","basePositionX","basePositionY","anchorNode","anchorWorldPos","getWorldPosition","localAnchorPos","node","convertToNodeSpaceAR","x","gridListOffset","y","weaponList","weaponListOffset","preWeaponList","preWeaponListOffset","offerY","offerX","padding","setNodeOpacity","value","opacity","children","element","setMainPlaceAreaKey","startGridObj","gripObjArr","getGridMapObjArr","items","index","subGridObj","griddata","getGridMapData","newGridObj","push","newIndex","getGridBgIndexByTiled","gridBgItem","placeAreaKey","gridValue","gridBgObj","item","set","setAddPlaceAreaKey","weaponBgItem","getPointGridObjArr","weaponCfg","absoluteGridObjArr","weaponKey","delPlaceAreaKey","key","getConnectStatus","isConnect","row_col","checkAddAreaGridData","forEach","upObj","downObj","leftObj","rightObj","destroy","rebuildGridData","emit","ADD_REMOVE_WEAPON_LIST","delete","gridObjArr","concat","rowMinMax","colMinMax","sort","newdata","rowData","j","setRebuildGridMapData","INIT_BUILD_GRID_LIST","INIT_BUILD_WEAPON_POS","debugAllList","a","debugAllListValue","debugAllListGridObj","onPlaceGridStart","active","initAllGridListPlaceValue","gridEditMode","parent","preBg","SHOW_HIDE_PLACE_LIST","getGridPosByTiled","wpos","convertToWorldSpaceAR","newPos","gridHeight","onPlaceGridMove","initAllGridListTips","firstGridObj","tieldPos","point","checkPos","all_row_col","rect","contains","placeArr","setTipsGreen","includes","startPos","points","Points","n","m","gridObj1","endGridObj","newEndObj","pos1","wpos1","endPos","centePos","clone","onPlaceGridEnd","onPlaceGridFinish","console","log","REFRESH_ATTRIBUTES","getFirstGridObj","gridMapData","gripObj","gridBg","setTipsDefault","checkAllGridListByPos","setGridMoveTips","onTouchStart","touchPos","gridData","touched","gridPos","gridWpos","getPosition","onTouchMove","onTouchEnd","onTouchCancle","onClearAreaData","clear","update","deltaTime","ceil","onCountdownEnd","loadScene","onEnable","on","PLACE_GRID_START","PLACE_GRID_MOVE","PLACE_GRID_END","GAME_TOUCH_START","GAME_TOUCH_MOVE","GAME_TOUCH_END","GAME_TOUCH_CANCLE","CLEAR_AREA_DATA","PLACE_GRID_FINISH","WEAPON_PlACE","WEAPON_REMOVE","WEAPON_UPGRADE","onDisable","off","totalAttrs","getTotalAttributes","charmLabel","charm","knowledgeLabel","knowledge","talentLabel","talent","wealthLabel","wealth"],"mappings":"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","sourcesContent":["import { _decorator, director, Component, Node, UITransform, Layout, Sprite, Vec3, Size, v3, SpriteFrame, UIOpacity, Vec2, v2, Rect, tween, Label } from 'cc';\r\nimport { Constants } from '../../Constants';\r\nimport { EventListener } from '../../Frame/EventListener';\r\nimport { ResourcesUtil } from '../../Frame/ResourcesUtil';\r\nimport { Util } from '../../Frame/Util';\r\nimport { WeaponCfg } from '../../Model/WeaponModel';\r\nimport { GridData, GridObj } from '../Data/GridData';\r\nimport { GameEvent } from '../Event/GameEvent';\r\nimport { GridBgItem } from '../Grid/GridBgItem';\r\nimport { WeaponBgItem } from '../Weapon/WeaponBgItem';\r\nimport { WeaponItem } from '../Weapon/WeaponItem';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('GridMapManager')\r\nexport class GridMapManager extends Component {\r\n    @property(Node)\r\n    bgs: Array<Node> = [];\r\n    @property(Node)\r\n    bg: Node = null;\r\n    @property(Node)\r\n    gridList: Node = null;  //拥有格子\r\n    @property({ type: Vec3, tooltip: \"GridList相对于基准点的偏移\" })\r\n    gridListOffset: Vec3 = new Vec3(0, 0, 0);\r\n    @property(Node)\r\n    allGridList: Node = null;  //所有格子列表\r\n    @property(Node)\r\n    weaponList: Node = null;\r\n    @property({ type: Vec3, tooltip: \"WeaponList相对于基准点的偏移\" })\r\n    weaponListOffset: Vec3 = new Vec3(0, 0, 0);\r\n    @property(Node)\r\n    removeWeaponList: Node = null;\r\n    @property(Node)\r\n    preWeaponList: Node = null;\r\n    @property({ type: Vec3, tooltip: \"PreWeaponList相对于基准点的偏移\" })\r\n    preWeaponListOffset: Vec3 = new Vec3(0, 0, 0);\r\n    @property(Node)\r\n    preBg: Node = null;\r\n    // 新增：倒计时相关属性\r\n    @property(Label) \r\n    countdownLabel: Label = null;  // 显示倒计时的Label组件\r\n\r\n    // 新增：属性显示Label\r\n    @property(Label)\r\n    charmLabel: Label = null;\r\n    @property(Label)\r\n    knowledgeLabel: Label = null;\r\n    @property(Label)\r\n    talentLabel: Label = null;\r\n    @property(Label)\r\n    wealthLabel: Label = null;\r\n\r\n    // 新增：锚点Node（需在Cocos编辑器中绑定）\r\n    @property(Node)\r\n    anchorNode: Node = null;  // 作为锚点的特定Node\r\n\r\n\r\n    \r\n    // 计时器预设\r\n    private _countdownTime: number = 63;  // 初始倒计时60秒（可根据需求调整）\r\n    private _isCounting: boolean = false;  // 计时器是否运行中\r\n\r\n\r\n    private _gridRes: Array<string> = ['bag1', 'bag1', 'bag3', 'bag5', 'bag5', 'bag6', 'bag6', 'bag7', 'bag7', 'bag8', 'bag8', 'bag9', 'bag']; //背包背景图\r\n    private _padding: number = 220;//周围内边距距离\r\n\r\n    private startPoint: GridObj = null; //拥有格子gridList \r\n    private _isTouch: boolean = false;//是否被点击\r\n    private _offfSet: Vec3 = new Vec3(0, 0, 0);//移动偏移 \r\n    private _startPos: Vec3 = new Vec3(0, 0, 0);//weaponList初始位置\r\n    private _placeStatus: boolean = false; //是否正确放置了\r\n    private _temPos: Vec3 = new Vec3(0, 0, 0);\r\n    private _temPoint: GridObj = null;\r\n    private _temAddPoint: GridObj = null; //新增格子\r\n    private _mainAreaKey: string = '1';//原区域key \r\n\r\n    private _addPlaceAreaData: Map<string, GridBgObj> = new Map();//新增放置区域数据  key=>placeAreaKey\r\n\r\n    init() {\r\n        this.initGridRes();\r\n        this.initStatPoint();\r\n        // 初始显示属性总和\r\n        this.updateAttributeDisplay();\r\n        // 新增：初始化倒计时显示\r\n        this._countdownTime = 65;  // 重置为60秒\r\n        this._isCounting = true;   // 启动计时（或根据实际逻辑控制启动时机）\r\n        if (this.countdownLabel) {\r\n            this.countdownLabel.string = this._countdownTime.toString();\r\n        }\r\n    }\r\n\r\n\r\n    /* 初始拥有格子在背景格子中的位置 */\r\n    initStatPoint() {\r\n        let max_gridLenArr = GridData.instance.bagCfg.max_gridLen.split('_');\r\n        let private_gridLenArr = GridData.instance.bagCfg.private_gridLen.split('_');\r\n        let startRow = Math.floor((Number(max_gridLenArr[0]) - Number(private_gridLenArr[0])) / 2);\r\n        let startCol = Math.floor((Number(max_gridLenArr[1]) - Number(private_gridLenArr[1])) / 2);\r\n        let gridObj = new GridObj();\r\n        gridObj.row = startRow;\r\n        gridObj.col = startCol;\r\n        this.startPoint = gridObj;\r\n    }\r\n\r\n    /* 所有格子适配 */\r\n    initAllGridRes() {\r\n        let space = GridData.instance.space;\r\n        let size = GridData.instance.getMaxGridMapSize();\r\n        let gridWidth = GridData.instance.gridWidth;\r\n        this.allGridList.getComponent(UITransform).setContentSize(size);\r\n        this.allGridList.getComponent(Layout).spacingX = space;\r\n        this.allGridList.getComponent(Layout).spacingY = space;\r\n        this.bg.getComponent(UITransform).setContentSize(size.width + this._padding, size.height + this._padding);\r\n        this.bg.getComponent(Layout).paddingTop = this._padding / 2;\r\n        this.bg.getComponent(Layout).paddingBottom = this._padding / 2;\r\n        this.bg.getComponent(Layout).paddingLeft = this._padding / 2;\r\n        this.bg.getComponent(Layout).paddingRight = this._padding / 2;\r\n        this.allGridList.getComponent(Layout).updateLayout(true);\r\n        this.bg.getComponent(Layout).updateLayout(true);\r\n        this.allGridList.setPosition(-size.width / 2, size.height / 2);\r\n        this.removeWeaponList.setPosition(0, -size.height / 2 - 100);\r\n        for (let i = 0; i < this._gridRes.length; i++) {\r\n            const res = this._gridRes[i];\r\n            let sprite = this.bgs[i].getComponent(Sprite);\r\n            let path = Constants.gridPath + res + '/spriteFrame';\r\n            ResourcesUtil.geSpriteFrame(path).then((data: SpriteFrame) => {\r\n                sprite.spriteFrame = data;\r\n                let pos = this.resNodePos(i, size, this._padding, gridWidth);\r\n                if (!pos.equals(Vec3.ZERO)) {\r\n                    this.bgs[i].setPosition(pos);\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    initGridRes() {\r\n        let space = GridData.instance.space;\r\n        let size = GridData.instance.getGridMapSize();\r\n        let gridWidth = GridData.instance.gridWidth;\r\n        let bagCfg = GridData.instance.bagCfg;\r\n        let rowColArr = bagCfg.private_gridLen.split('_');\r\n\r\n        this.gridList.getComponent(UITransform).setContentSize(size);\r\n        this.gridList.getComponent(Layout).spacingX = space;\r\n        this.gridList.getComponent(Layout).spacingY = space;\r\n\r\n        this.bg.getComponent(UITransform).setContentSize(size.width + this._padding, size.height + this._padding);\r\n        this.bg.getComponent(Layout).paddingTop = this._padding / 2;\r\n        this.bg.getComponent(Layout).paddingBottom = this._padding / 2;\r\n        this.bg.getComponent(Layout).paddingLeft = this._padding / 2;\r\n        this.bg.getComponent(Layout).paddingRight = this._padding / 2;\r\n        this.gridList.getComponent(Layout).updateLayout(true);\r\n        this.bg.getComponent(Layout).updateLayout(true);\r\n\r\n        // 计算 gridList 的基准位置 (例如，左上角对齐到父节点的某个点)\r\n        // 假设基准点是父节点中心，然后向上向左偏移 size 的一半\r\n        const basePositionX = -size.width / 2;\r\n        const basePositionY = size.height / 2;\r\n\r\n        //this.gridList.setPosition(basePositionX + this.gridListOffset.x, basePositionY + this.gridListOffset.y, this.gridListOffset.z);\r\n\r\n        // 设置 weaponList\r\n        // this.weaponList.getComponent(UITransform).setContentSize(size.width, size.height); // 假设它和gridList一样大\r\n        // this.weaponList.setPosition(basePositionX + this.weaponListOffset.x, basePositionY + this.weaponListOffset.y, this.weaponListOffset.z);\r\n        // 或者 weaponList 的位置可以独立于 gridList 的 size\r\n        // this.weaponList.setPosition(this.weaponListOffset.x, this.weaponListOffset.y, this.weaponListOffset.z); // 如果偏移是绝对的\r\n\r\n        // 设置 preWeaponList\r\n        // this.preWeaponList.getComponent(UITransform).setContentSize(size.width, size.height); // 假设它和gridList一样大\r\n        // this.preWeaponList.setPosition(basePositionX + this.preWeaponListOffset.x, basePositionY + this.preWeaponListOffset.y, this.preWeaponListOffset.z);\r\n        // 或者 preWeaponList 的位置可以独立于 gridList 的 size\r\n        // this.preWeaponList.setPosition(this.preWeaponListOffset.x, this.preWeaponListOffset.y, this.preWeaponListOffset.z);\r\n\r\n        // 固定位置计算方法\r\n        // this.gridList.setPosition(-size.width / 2, (size.height / 2));\r\n        // this.weaponList.setPosition(-size.width / 2, (size.height / 2))\r\n        // this.preWeaponList.setPosition(-size.width / 2, (size.height / 2));\r\n        // 改为直接使用Map对象的Position  \r\n        //let mapPosition = this.getMapPosition();  \r\n        //this.gridList.setPosition(mapPosition.x, mapPosition.y);\r\n        //this.weaponList.setPosition(mapPosition.x, mapPosition.y);\r\n        //this.preWeaponList.setPosition(mapPosition.x, mapPosition.y); \r\n\r\n        // 新增：基于锚点的位置计算\r\n    if (this.anchorNode) {\r\n        // 获取锚点的世界坐标\r\n        const anchorWorldPos = this.anchorNode.getWorldPosition();\r\n        // 转换为当前节点的局部坐标\r\n        const localAnchorPos = this.node.getComponent(UITransform).convertToNodeSpaceAR(anchorWorldPos);\r\n        \r\n        // 设置背包对象位置（锚点位置 + 偏移量）\r\n        this.gridList.setPosition(\r\n            localAnchorPos.x + this.gridListOffset.x, \r\n            localAnchorPos.y + this.gridListOffset.y\r\n        );\r\n        this.weaponList.setPosition(\r\n            localAnchorPos.x + this.weaponListOffset.x, \r\n            localAnchorPos.y + this.weaponListOffset.y\r\n        );\r\n        this.preWeaponList.setPosition(\r\n            localAnchorPos.x + this.preWeaponListOffset.x, \r\n            localAnchorPos.y + this.preWeaponListOffset.y\r\n        );\r\n    } else {\r\n        // 无锚点时使用默认位置（可选）\r\n        this.gridList.setPosition(-size.width / 2, (size.height / 2));\r\n        this.weaponList.setPosition(-size.width / 2, (size.height / 2));\r\n        this.preWeaponList.setPosition(-size.width / 2, (size.height / 2));\r\n    }\r\n        \r\n        this.weaponList.getComponent(UITransform).setContentSize(size.width, size.height);\r\n        this.preWeaponList.getComponent(UITransform).setContentSize(size.width, size.height);\r\n\r\n        let offerY = Number(rowColArr[0]) > 5 ? 100 : 200;\r\n        // this.removeWeaponList.setPosition(0, -size.height / 2 - offerY);\r\n        let offerX = size.width / 2 + 800; // 可以根据需要调整距离  \r\n        this.removeWeaponList.setPosition(-offerX, 0); \r\n        for (let i = 0; i < this._gridRes.length; i++) {\r\n            const res = this._gridRes[i];\r\n            let sprite = this.bgs[i].getComponent(Sprite);\r\n            let path = Constants.gridPath + res + '/spriteFrame';\r\n            ResourcesUtil.geSpriteFrame(path).then((data: SpriteFrame) => {\r\n                sprite.spriteFrame = data;\r\n                let pos = this.resNodePos(i, size, this._padding, gridWidth);\r\n                if (!pos.equals(Vec3.ZERO)) {\r\n                    this.bgs[i].setPosition(pos);\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    resNodePos(i: number, size: Size, padding: number, gridWidth: number) {\r\n        let pos = Vec3.ZERO;\r\n        switch (i) {\r\n            case 0:\r\n                pos = v3(-(size.width - 100) / 2, -size.height / 2 - 10, 0);\r\n                break;\r\n            case 1:\r\n                pos = v3((size.width - 100) / 2, -size.height / 2 - 10, 0);\r\n                break;\r\n            case 2:\r\n                pos = v3(0, size.height / 2 + padding / 2 - padding / 2 / 3, 0);\r\n                break;\r\n            case 3:\r\n                pos = v3(size.width / 2 + padding / 2 / 3, size.height / 2, 0);\r\n                break;\r\n            case 4:\r\n                pos = v3(-(size.width / 2 + padding / 2 / 3), size.height / 2, 0);\r\n                break;\r\n            case 5:\r\n                pos = v3(-(gridWidth / 2 + gridWidth) + 10, size.height / 2 + padding / 2, 0);\r\n                break;\r\n            case 6:\r\n                pos = v3(gridWidth / 2 + gridWidth - 10, size.height / 2 + padding / 2, 0);\r\n                break;\r\n            case 7:\r\n                pos = v3(-size.width / 2 - padding / 4, -size.height / 2 + gridWidth / 2 + padding / 4, 0);\r\n                break;\r\n            case 8:\r\n                pos = v3(size.width / 2 + padding / 4, -size.height / 2 + gridWidth / 2 + padding / 4, 0);\r\n                break;\r\n            case 9:\r\n                pos = v3(-(size.width / 2 + padding / 2 / 3), size.height / 2 - 30, 0);\r\n                break;\r\n            case 10:\r\n                pos = v3((size.width / 2 + padding / 2 / 3), size.height / 2 - 30, 0);\r\n                break;\r\n            case 11:\r\n                pos = v3(0, size.height / 2 - padding / 2 + 20, 0);\r\n                this.bgs[i].getComponent(UITransform).width = size.width;\r\n                break;\r\n        }\r\n\r\n        return pos;\r\n    }\r\n\r\n\r\n    /* 设置节点透明度 */\r\n    setNodeOpacity(value: number) {\r\n        this.weaponList.getComponent(UIOpacity).opacity = value;\r\n        for (let i = 0; i < this.removeWeaponList.children.length; i++) {\r\n            const element = this.removeWeaponList.children[i];\r\n            if (element.getComponent(WeaponItem)) {\r\n                element.getComponent(UIOpacity).opacity = value;\r\n            }\r\n        }\r\n    }\r\n\r\n    /* 设置区域占位key */\r\n    setMainPlaceAreaKey(startGridObj: GridObj) {\r\n        let gripObjArr = this.getGridMapObjArr();\r\n        let items = this.allGridList.children;\r\n        let data: Array<GridObj> = [];\r\n        for (let index = 0; index < gripObjArr.length; index++) {\r\n            const subGridObj = gripObjArr[index];\r\n            let griddata = GridData.instance.getGridMapData();\r\n            let value = griddata[subGridObj.row][subGridObj.col]\r\n            let row = startGridObj.row + subGridObj.row;\r\n            let col = startGridObj.col + subGridObj.col;\r\n            let newGridObj = new GridObj();\r\n            newGridObj.row = row;\r\n            newGridObj.col = col;\r\n            data.push(newGridObj);\r\n            let newIndex = GridData.instance.getGridBgIndexByTiled(row, col);\r\n            let gridBgItem = items[newIndex];\r\n            gridBgItem.getComponent(GridBgItem).placeAreaKey = this._mainAreaKey;\r\n            gridBgItem.getComponent(GridBgItem).gridValue = value;\r\n        }\r\n        let gridBgObj = new GridBgObj();\r\n        gridBgObj.item = this.weaponList;\r\n        gridBgObj.data = data;\r\n        this._addPlaceAreaData.set(this._mainAreaKey, gridBgObj);\r\n    }\r\n\r\n    /* 设置新增格子区域的占位key */\r\n    // setAddPlaceAreaKey(weaponBgItem: WeaponBgItem) {\r\n    //     let startGridObj = this._temAddPoint;\r\n    //     let gripObjArr = this.getPointGridObjArr(weaponBgItem.weaponCfg);\r\n    //     let items = this.allGridList.children;\r\n    //     let data: Array<GridObj> = [];\r\n        \r\n    //     for (let index = 0; index < gripObjArr.length; index++) {\r\n    //         const subGridObj = gripObjArr[index];\r\n    //         let row = startGridObj.row + subGridObj.row;\r\n    //         let col = startGridObj.col + subGridObj.col;\r\n    //         let newGridObj = new GridObj();\r\n    //         newGridObj.row = row;\r\n    //         newGridObj.col = col;\r\n    //         data.push(newGridObj);\r\n    //         let newIndex = GridData.instance.getGridBgIndexByTiled(row, col);\r\n    //         let gridBgItem = items[newIndex];\r\n    //         gridBgItem.getComponent(GridBgItem).placeAreaKey = weaponBgItem.weaponKey;\r\n    //     }\r\n    //     let gridBgObj = new GridBgObj();\r\n    //     gridBgObj.item = weaponBgItem.node;\r\n    //     gridBgObj.data = data;\r\n    //     this._addPlaceAreaData.set(weaponBgItem.weaponKey, gridBgObj);\r\n\r\n    // }\r\n\r\n    /* 设置新增格子区域的占位key */\r\n    setAddPlaceAreaKey(weaponBgItem: WeaponBgItem) {\r\n        let startGridObj = this._temAddPoint;\r\n        let gripObjArr = this.getPointGridObjArr(weaponBgItem.weaponCfg);\r\n        let items = this.allGridList.children;\r\n        let data: Array<GridObj> = []; // 这些是武器占用的绝对格子坐标\r\n\r\n        // ... (计算 data: Array<GridObj>) ...\r\n        // 你需要确保这里的 gripObjArr 是武器在 allGridList 中的绝对坐标，而不是相对武器自身的。\r\n        // 当前的 gripObjArr 是相对武器自身的，需要结合 _temAddPoint 转换。\r\n        let absoluteGridObjArr: Array<GridObj> = [];\r\n        for (let index = 0; index < gripObjArr.length; index++) {\r\n            const subGridObj = gripObjArr[index]; // 武器内部的相对坐标\r\n            let row = startGridObj.row + subGridObj.row;\r\n            let col = startGridObj.col + subGridObj.col;\r\n            let newGridObj = new GridObj();\r\n            newGridObj.row = row;\r\n            newGridObj.col = col;\r\n            absoluteGridObjArr.push(newGridObj); // 收集绝对坐标\r\n\r\n            let newIndex = GridData.instance.getGridBgIndexByTiled(row, col);\r\n            let gridBgItem = items[newIndex];\r\n            gridBgItem.getComponent(GridBgItem).placeAreaKey = weaponBgItem.weaponKey;\r\n        }\r\n\r\n        let gridBgObj = new GridBgObj();\r\n        gridBgObj.item = weaponBgItem.node;\r\n        gridBgObj.data = absoluteGridObjArr; // 使用绝对坐标\r\n        this._addPlaceAreaData.set(weaponBgItem.weaponKey, gridBgObj);\r\n\r\n        // !!! 关键改动: 在这里将武器数据添加到 GridData，并触发事件 !!!\r\n        // 这个前提是 setAddPlaceAreaKey 意味着这个武器已经被“初步确认”放置了。\r\n        // 如果后续可能会取消，则这个时机不对。\r\n        // 更好的时机可能是在 onPlaceGridFinish 内部，当所有武器都确定了最终位置之后。\r\n\r\n        // ---- 下面的逻辑需要根据你的“确认”流程来调整触发时机 ----\r\n    }\r\n\r\n    /* 清除区域key 和区域值 */\r\n    delPlaceAreaKey(key: string) {\r\n        let items = this.allGridList.children;\r\n        for (let index = 0; index < items.length; index++) {\r\n            const gridBgItem = items[index];\r\n            gridBgItem.getComponent(GridBgItem).delPlaceAreaKey(key);\r\n        }\r\n    }\r\n\r\n    getConnectStatus(gridObj: GridObj) {\r\n        let isConnect = false;\r\n        let bagCfg = GridData.instance.bagCfg;\r\n        let row_col = bagCfg.max_gridLen.split('_');\r\n\r\n        if (gridObj.row >= 0 && gridObj.col >= 0 && gridObj.row <= Number(row_col[0]) - 1 && gridObj.col <= Number(row_col[1]) - 1) {\r\n            let index = GridData.instance.getGridBgIndexByTiled(gridObj.row, gridObj.col);\r\n            let item = this.allGridList.children[index];\r\n            if (item.getComponent(GridBgItem).placeAreaKey == this._mainAreaKey) {\r\n                isConnect = true;\r\n            }\r\n        }\r\n        return isConnect;\r\n    }\r\n\r\n    /* 检测新增区域数据是否相连 */\r\n    checkAddAreaGridData() {\r\n        this._addPlaceAreaData.forEach((gridBgObj, key) => {\r\n            if (key != this._mainAreaKey) {\r\n                let item = gridBgObj.item;\r\n                let data = gridBgObj.data;\r\n                let isConnect = false;\r\n                for (let i = 0; i < data.length; i++) {\r\n                    const gridObj = data[i];\r\n                    //上\r\n                    let upObj = new GridObj();\r\n                    upObj.row = gridObj.row - 1;\r\n                    upObj.col = gridObj.col;\r\n                    if (!isConnect) {\r\n                        isConnect = this.getConnectStatus(upObj);\r\n                    }\r\n                    //下\r\n                    let downObj = new GridObj();\r\n                    downObj.row = gridObj.row + 1;\r\n                    downObj.col = gridObj.col;\r\n                    if (!isConnect) {\r\n                        isConnect = this.getConnectStatus(downObj);\r\n                    }\r\n                    //左\r\n                    let leftObj = new GridObj();\r\n                    leftObj.row = gridObj.row;\r\n                    leftObj.col = gridObj.col - 1;\r\n                    if (!isConnect) {\r\n                        isConnect = this.getConnectStatus(leftObj);\r\n                    }\r\n                    //右\r\n                    let rightObj = new GridObj();\r\n                    rightObj.row = gridObj.row;\r\n                    rightObj.col = gridObj.col + 1;\r\n                    if (!isConnect) {\r\n                        isConnect = this.getConnectStatus(rightObj);\r\n                    }\r\n                    if (isConnect) {\r\n                        break;\r\n                    }\r\n                }\r\n                if (isConnect) {\r\n                    item.destroy();\r\n                    this.rebuildGridData();\r\n                }\r\n                else {\r\n                    EventListener.emit(GameEvent.ADD_REMOVE_WEAPON_LIST, item);\r\n                    this._addPlaceAreaData.delete(key);\r\n                    this.delPlaceAreaKey(key);\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    /* 重组拥有格子数据 */\r\n    rebuildGridData() {\r\n        let data: Array<GridObj> = [];\r\n        this._addPlaceAreaData.forEach((gridBgObj, key) => {\r\n            let gridObjArr = gridBgObj.data;\r\n            data = data.concat(gridObjArr);\r\n        })\r\n        let rowMinMax = [];\r\n        let colMinMax = [];\r\n        data.sort((x, y) => { return x.row - y.row });\r\n        rowMinMax.push(data[0].row);\r\n        rowMinMax.push(data[data.length - 1].row);\r\n        data.sort((x, y) => { return x.col - y.col });\r\n        colMinMax.push(data[0].col);\r\n        colMinMax.push(data[data.length - 1].col);\r\n        //重组新格子数据\r\n        let newdata: Array<Array<string>> = [];\r\n        let items = this.allGridList.children;\r\n        for (let i = rowMinMax[0]; i <= rowMinMax[1]; i++) {\r\n            let rowData = [];\r\n            for (let j = colMinMax[0]; j <= colMinMax[1]; j++) {\r\n                let index = GridData.instance.getGridBgIndexByTiled(i, j);\r\n                let gridBgItem = items[index];\r\n                let value = gridBgItem.getComponent(GridBgItem).placeAreaKey ? gridBgItem.getComponent(GridBgItem).gridValue : '';\r\n                rowData.push(value);\r\n            }\r\n            newdata.push(rowData);\r\n        }\r\n        GridData.instance.setRebuildGridMapData(newdata);\r\n        EventListener.emit(GameEvent.INIT_BUILD_GRID_LIST);\r\n        EventListener.emit(GameEvent.INIT_BUILD_WEAPON_POS);\r\n        this.startPoint.row = rowMinMax[0];\r\n        this.startPoint.col = colMinMax[0];\r\n    }\r\n\r\n    /* 调试查看数据 */\r\n    debugAllList() {\r\n        let items = this.allGridList.children;\r\n        let data: Array<Array<string>> = [];\r\n        for (let i = 0; i < 7; i++) {\r\n            let a = [];\r\n            for (let j = 0; j < 5; j++) {\r\n                let index = GridData.instance.getGridBgIndexByTiled(i, j);\r\n                let value = items[index].getComponent(GridBgItem).placeAreaKey;\r\n                a.push(value)\r\n            }\r\n            data.push(a);\r\n        }\r\n    }\r\n\r\n    /* 调试查看数据 */\r\n    debugAllListValue() {\r\n        let items = this.allGridList.children;\r\n        let data: Array<Array<string>> = [];\r\n        for (let i = 0; i < 7; i++) {\r\n            let a = [];\r\n            for (let j = 0; j < 5; j++) {\r\n                let index = GridData.instance.getGridBgIndexByTiled(i, j);\r\n                let value = items[index].getComponent(GridBgItem).gridValue;\r\n                a.push(value)\r\n            }\r\n            data.push(a);\r\n        }\r\n    }\r\n\r\n\r\n    /* 调试查看数据 */\r\n    debugAllListGridObj() {\r\n        let items = this.allGridList.children;\r\n        let data: Array<Array<string>> = [];\r\n        for (let i = 0; i < 7; i++) {\r\n            let a = [];\r\n            for (let j = 0; j < 5; j++) {\r\n                let index = GridData.instance.getGridBgIndexByTiled(i, j);\r\n                let gridObj = items[index].getComponent(GridBgItem).gridObj;\r\n                a.push(gridObj)\r\n            }\r\n            data.push(a);\r\n        }\r\n    }\r\n\r\n    /* 放置新增格子开始 */\r\n    onPlaceGridStart(weaponBgItem: WeaponBgItem) {\r\n        if (!this.allGridList.active) {\r\n            this.initAllGridListPlaceValue();\r\n            GridData.instance.gridEditMode = true;\r\n            this.gridList.parent = this.preBg;\r\n            weaponBgItem.node.parent = this.node;\r\n            this.allGridList.active = true;\r\n            //设置透明度\r\n            this.setNodeOpacity(100);\r\n            this.initAllGridRes();\r\n            this.node.parent.getComponent(UITransform).height = this.allGridList.getComponent(UITransform).height;\r\n            EventListener.emit(GameEvent.SHOW_HIDE_PLACE_LIST, true);\r\n            //设置拥有格子列表位置\r\n            let pos = GridData.instance.getGridPosByTiled(this.startPoint);\r\n            let wpos = this.allGridList.getComponent(UITransform).convertToWorldSpaceAR(pos);\r\n            let newPos = this.node.parent.getComponent(UITransform).convertToNodeSpaceAR(wpos);\r\n            let gridWidth = GridData.instance.gridWidth;\r\n            let gridHeight = GridData.instance.gridHeight;\r\n            this.gridList.setPosition(newPos.x - gridWidth / 2, newPos.y + gridHeight / 2);\r\n            this.weaponList.setPosition(newPos.x - gridWidth / 2, newPos.y + gridHeight / 2);\r\n            this.setMainPlaceAreaKey(this.startPoint);\r\n        }\r\n        this.delPlaceAreaKey(weaponBgItem.weaponKey);\r\n    }\r\n\r\n    /* 放置新增格子移动 */\r\n    onPlaceGridMove(weaponBgItem: WeaponBgItem) {\r\n        weaponBgItem.node.parent = this.node;\r\n        this.initAllGridListTips();\r\n        let firstGridObj = new GridObj();\r\n        firstGridObj.row = 0;\r\n        firstGridObj.col = 0;\r\n        let tieldPos = GridData.instance.getGridPosByTiled(firstGridObj);\r\n        let wpos = weaponBgItem.point.getComponent(UITransform).convertToWorldSpaceAR(tieldPos);\r\n        let checkPos = this.allGridList.getComponent(UITransform).convertToNodeSpaceAR(wpos);\r\n        let items = this.allGridList.children;\r\n        let all_row_col = GridData.instance.bagCfg.max_gridLen.split('_');\r\n        this._placeStatus = false;\r\n        for (let i = 0; i < items.length; i++) {\r\n            const element = items[i];\r\n            let gridObj = element.getComponent(GridBgItem).gridObj;\r\n            let pos = GridData.instance.getGridPosByTiled(gridObj);\r\n            let width = GridData.instance.gridWidth;\r\n            let height = GridData.instance.gridHeight;\r\n            let rect = new Rect(pos.x - width / 2, pos.y - height / 2, width, height);\r\n            if (rect.contains(v2(checkPos.x, checkPos.y))) {\r\n                let gripObjArr = this.getPointGridObjArr(weaponBgItem.weaponCfg);\r\n                let placeArr = [];//0 为未放置\r\n                for (let index = 0; index < gripObjArr.length; index++) {\r\n                    const subGridObj = gripObjArr[index];\r\n                    let row = gridObj.row + subGridObj.row;\r\n                    let col = gridObj.col + subGridObj.col;\r\n                    if (row < Number(all_row_col[0]) && col < Number(all_row_col[1])) {\r\n                        let newIndex = GridData.instance.getGridBgIndexByTiled(row, col);\r\n                        let gridBgItem = items[newIndex];\r\n                        //检测格子占用\r\n                        if (!gridBgItem.getComponent(GridBgItem).placeAreaKey) {\r\n                            gridBgItem.getComponent(GridBgItem).setTipsGreen();\r\n                            placeArr.push(1);\r\n                        }\r\n                        else {\r\n                            placeArr.push(0);\r\n                        }\r\n                    }\r\n                    else {\r\n                        placeArr.push(0);\r\n                    }\r\n                }\r\n                if (placeArr.includes(0)) {\r\n                    this._placeStatus = false;\r\n\r\n                }\r\n                else {\r\n                    this._placeStatus = true;\r\n                    //设置新坐标\r\n                    let wpos = this.allGridList.getComponent(UITransform).convertToWorldSpaceAR(pos);\r\n                    let startPos = this.node.parent.getComponent(UITransform).convertToNodeSpaceAR(wpos);\r\n\r\n                    let points = weaponBgItem.weaponCfg.Points;\r\n                    let data: Array<GridObj> = [];\r\n                    for (let n = 0; n < points.length; n++) {\r\n                        const element = points[n];\r\n                        for (let m = 0; m < element.length; m++) {\r\n                            let gridObj1 = new GridObj();\r\n                            gridObj1.row = n;\r\n                            gridObj1.col = m;\r\n                            data.push(gridObj1);\r\n                        }\r\n                    }\r\n                    const endGridObj = data[data.length - 1];\r\n                    let newEndObj = new GridObj();\r\n                    newEndObj.row = gridObj.row + endGridObj.row;\r\n                    newEndObj.col = gridObj.col + endGridObj.col;\r\n                    let pos1 = GridData.instance.getGridPosByTiled(newEndObj);\r\n                    let wpos1 = this.allGridList.getComponent(UITransform).convertToWorldSpaceAR(pos1);\r\n                    let endPos = this.node.parent.getComponent(UITransform).convertToNodeSpaceAR(wpos1);\r\n\r\n                    let centePos = new Vec3(0, 0, 0);\r\n                    centePos.x = (startPos.x + endPos.x) / 2;\r\n                    centePos.y = (startPos.y + endPos.y) / 2;\r\n                    this._temPos = centePos;\r\n                    this._temAddPoint = Util.clone(gridObj);\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    /* 放置新增格子完成 */\r\n    onPlaceGridEnd(weaponBgItem: WeaponBgItem) {\r\n        let item = weaponBgItem.node;\r\n        this.initAllGridListTips();\r\n        \r\n        if (this._placeStatus) {\r\n            item.setPosition(this._temPos);\r\n            this.setAddPlaceAreaKey(weaponBgItem);\r\n        }\r\n        // else {\r\n        //     EventListener.emit(GameEvent.ADD_REMOVE_WEAPON_LIST, item);\r\n        //     this._addPlaceAreaData.delete(weaponBgItem.weaponKey);\r\n        // }\r\n        // this._placeStatus = false;\r\n        else {\r\n            // 如果放置状态无效（比如拖到了不可放置区域或部分重叠）\r\n            EventListener.emit(GameEvent.ADD_REMOVE_WEAPON_LIST, item); // 将武器送回待移除列表\r\n            this._addPlaceAreaData.delete(weaponBgItem.weaponKey); // 从尝试放置区域中移除\r\n            this.delPlaceAreaKey(weaponBgItem.weaponKey); // 清除其在 allGridList 上的占位标记\r\n        }\r\n        this._placeStatus = false; // 重置放置状态，为下一个武器拖拽做准备\r\n        this._temPos.set(0,0,0); // 重置临时位置\r\n        this._temAddPoint = null; // 重置临时添加点\r\n    }\r\n\r\n\r\n    /* 放置格子确定 */\r\n    onPlaceGridFinish() {\r\n        if (this.allGridList.active) {\r\n            this.checkAddAreaGridData();\r\n\r\n            GridData.instance.gridEditMode = false;\r\n            this.allGridList.active = false;\r\n            this.gridList.parent = this.bg;\r\n            //设置透明度\r\n            this.setNodeOpacity(255);\r\n            this.initGridRes();\r\n            EventListener.emit(GameEvent.SHOW_HIDE_PLACE_LIST, false);\r\n\r\n            // 触发属性更新\r\n            console.log(\"GridMapManager: onPlaceGridFinish - Triggering REFRESH_ATTRIBUTES\");\r\n            EventListener.emit(GameEvent.REFRESH_ATTRIBUTES); // 创建一个新的事件名，或复用，但要确保 GridMapManager 监听它\r\n        }\r\n    }\r\n    \r\n\r\n    /* 获取拥有格子里的第一个有格子的数据 */\r\n    getFirstGridObj() {\r\n        let gridMapData = GridData.instance.getGridMapData();\r\n        let gripObjArr: Array<GridObj> = [];\r\n        let gripObj = null;\r\n        for (let i = 0; i < gridMapData.length; i++) {\r\n            const element = gridMapData[i];\r\n            for (let j = 0; j < element.length; j++) {\r\n                const value = element[j];\r\n                if (value) {\r\n                    gripObj = new GridObj();\r\n                    gripObj.row = i;\r\n                    gripObj.col = j;\r\n                    break;\r\n                }\r\n            }\r\n            if (gripObj) {\r\n                break;\r\n            }\r\n        }\r\n        return gripObj;\r\n    }\r\n\r\n    /* 获取拥有格子的位置数据 */\r\n    getGridMapObjArr() {\r\n        let gridMapData = GridData.instance.getGridMapData();\r\n        let gripObjArr: Array<GridObj> = [];\r\n        for (let i = 0; i < gridMapData.length; i++) {\r\n            const element = gridMapData[i];\r\n            for (let j = 0; j < element.length; j++) {\r\n                const value = element[j];\r\n                if (value) {\r\n                    let gripObj = new GridObj();\r\n                    gripObj.row = i;\r\n                    gripObj.col = j;\r\n                    gripObjArr.push(gripObj);\r\n                }\r\n            }\r\n        }\r\n        return gripObjArr;\r\n    }\r\n\r\n    getPointGridObjArr(weaponCfg: WeaponCfg) {\r\n        let point = weaponCfg.Points;\r\n        let gripObjArr: Array<GridObj> = [];\r\n        for (let i = 0; i < point.length; i++) {\r\n            const element = point[i];\r\n            for (let j = 0; j < element.length; j++) {\r\n                const value = element[j];\r\n                if (value) {\r\n                    let gripObj = new GridObj();\r\n                    gripObj.row = i;\r\n                    gripObj.col = j;\r\n                    gripObjArr.push(gripObj);\r\n                }\r\n            }\r\n        }\r\n        return gripObjArr;\r\n    }\r\n\r\n    /* 初始格子颜色 */\r\n    initAllGridListTips() {\r\n        let items = this.allGridList.children;\r\n        for (let index = 0; index < items.length; index++) {\r\n            const gridBg = items[index];\r\n            gridBg.getComponent(GridBgItem).setTipsDefault();\r\n        }\r\n    }\r\n\r\n    /* 初始格子占有 */\r\n    initAllGridListPlaceValue() {\r\n        let items = this.allGridList.children;\r\n        for (let index = 0; index < items.length; index++) {\r\n            const gridBg = items[index];\r\n            gridBg.getComponent(GridBgItem).placeAreaKey = '';\r\n        }\r\n    }\r\n\r\n    /* 检测坐标是否在格子中 */\r\n    checkAllGridListByPos(checkPos: Vec3) {\r\n        let items = this.allGridList.children;\r\n        let all_row_col = GridData.instance.bagCfg.max_gridLen.split('_');\r\n        this._placeStatus = false;\r\n        for (let i = 0; i < items.length; i++) {\r\n            const element = items[i];\r\n            let gridObj = element.getComponent(GridBgItem).gridObj;\r\n            let pos = GridData.instance.getGridPosByTiled(gridObj);\r\n            let width = GridData.instance.gridWidth;\r\n            let height = GridData.instance.gridHeight;\r\n            let rect = new Rect(pos.x - width / 2, pos.y - height / 2, width, height);\r\n            if (rect.contains(v2(checkPos.x, checkPos.y))) {\r\n                let gripObjArr = this.getGridMapObjArr();\r\n                let placeArr = [];//0 为未放置\r\n                for (let index = 0; index < gripObjArr.length; index++) {\r\n                    const subGridObj = gripObjArr[index];\r\n                    let row = gridObj.row + subGridObj.row;\r\n                    let col = gridObj.col + subGridObj.col;\r\n                    if (row < Number(all_row_col[0]) && col < Number(all_row_col[1])) {\r\n                        let newIndex = GridData.instance.getGridBgIndexByTiled(row, col);\r\n                        let gridBgItem = items[newIndex];\r\n                        //是否格子占用\r\n                        if (!gridBgItem.getComponent(GridBgItem).placeAreaKey) {\r\n                            gridBgItem.getComponent(GridBgItem).setTipsGreen();\r\n                            placeArr.push(1);\r\n                        }\r\n                        else {\r\n                            placeArr.push(0);\r\n                        }\r\n                    }\r\n                    else {\r\n                        placeArr.push(0);\r\n                    }\r\n                }\r\n                if (placeArr.includes(0)) {\r\n                    this._placeStatus = false;\r\n                }\r\n                else {\r\n                    this._placeStatus = true;\r\n                    let wpos = this.allGridList.getComponent(UITransform).convertToWorldSpaceAR(pos);\r\n                    let newPos = this.node.parent.getComponent(UITransform).convertToNodeSpaceAR(wpos);\r\n                    let gridWidth = GridData.instance.gridWidth;\r\n                    let gridHeight = GridData.instance.gridHeight;\r\n                    this._temPos.x = newPos.x - gridWidth / 2;\r\n                    this._temPos.y = newPos.y + gridHeight / 2;\r\n                    this._temPoint = Util.clone(gridObj);\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    /* 设置移动提示 */\r\n    setGridMoveTips() {\r\n        this.initAllGridListTips();\r\n        //检测第一个格子是否在所有格子里中\r\n        let firstGridObj = new GridObj();\r\n        firstGridObj.row = 0;\r\n        firstGridObj.col = 0;\r\n        let tieldPos = GridData.instance.getGridPosByTiled(firstGridObj);\r\n        let wpos = this.gridList.getComponent(UITransform).convertToWorldSpaceAR(tieldPos);\r\n        let pos = this.allGridList.getComponent(UITransform).convertToNodeSpaceAR(wpos);\r\n        this.checkAllGridListByPos(pos);\r\n    }\r\n\r\n    /*放置拥有格子触摸点击 */\r\n    onTouchStart(wpos: Vec2) {\r\n        //是否触摸到拥有格子列表\r\n        let touchPos = this.node.parent.getComponent(UITransform).convertToNodeSpaceAR(new Vec3(wpos.x, wpos.y, 0));\r\n        //坐标在可用格子中时\r\n        let gridData = GridData.instance.getGridMapData();\r\n        let touched = false;\r\n        for (let i = 0; i < gridData.length; i++) {\r\n            const element = gridData[i];\r\n            for (let j = 0; j < element.length; j++) {\r\n                const value = element[j];\r\n                if (value) {\r\n                    let gridObj = new GridObj();\r\n                    gridObj.row = i;\r\n                    gridObj.col = j;\r\n                    let gridPos = GridData.instance.getGridPosByTiled(gridObj);\r\n                    let gridWpos = this.gridList.getComponent(UITransform).convertToWorldSpaceAR(gridPos);\r\n                    let newPos = this.node.parent.getComponent(UITransform).convertToNodeSpaceAR(gridWpos);\r\n                    let gridWidth = GridData.instance.gridWidth;\r\n                    let gridHeight = GridData.instance.gridHeight;\r\n                    let rect = new Rect(newPos.x - gridWidth / 2, newPos.y - gridHeight / 2, gridWidth, gridWidth);\r\n                    if (rect.contains(v2(touchPos.x, touchPos.y))) {\r\n                        touched = true;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            if (touched) {\r\n                break;\r\n            }\r\n        }\r\n        if (GridData.instance.gridEditMode && touched) {\r\n            this._isTouch = true;\r\n            this._offfSet = this.weaponList.getComponent(UITransform).convertToNodeSpaceAR(new Vec3(wpos.x, wpos.y, 0));\r\n            this._startPos = this.weaponList.getPosition();\r\n            this.delPlaceAreaKey(this._mainAreaKey);\r\n        }\r\n    }\r\n\r\n    /* 放置拥有格子移动 */\r\n    onTouchMove(wpos: Vec2) {\r\n        if (this._isTouch) {\r\n            let touchPos = this.node.parent.getComponent(UITransform).convertToNodeSpaceAR(new Vec3(wpos.x, wpos.y, 0));\r\n            let pos = new Vec3(touchPos.x - this._offfSet.x, touchPos.y - this._offfSet.y);\r\n            this.gridList.setPosition(pos);\r\n            this.weaponList.setPosition(pos);\r\n            //设置移动提示\r\n            this.setGridMoveTips();\r\n        }\r\n    }\r\n\r\n    /* 放置拥有格子完成 */\r\n    onTouchEnd(wpos: Vec2) {\r\n        if (this._isTouch) {\r\n            this._isTouch = false;\r\n            //是否放置或还原\r\n            if (this._placeStatus) {\r\n                this._startPos = this._temPos;\r\n                this.startPoint = this._temPoint;\r\n            }\r\n            this.gridList.setPosition(this._startPos);\r\n            this.weaponList.setPosition(this._startPos);\r\n            this._placeStatus = false;\r\n            this.initAllGridListTips();\r\n            this.setMainPlaceAreaKey(this.startPoint);\r\n        }\r\n    }\r\n\r\n    onTouchCancle(wpos: Vec2) {\r\n        if (this._isTouch) {\r\n            this._isTouch = false;\r\n            this._placeStatus = false;\r\n            this.gridList.setPosition(this._startPos);\r\n            this.weaponList.setPosition(this._startPos);\r\n            this.initAllGridListTips();\r\n        }\r\n    }\r\n\r\n    onClearAreaData() {\r\n        this._addPlaceAreaData.clear();\r\n    }\r\n\r\n    // 新增：每帧更新计时器\r\n    update(deltaTime: number) {\r\n        this.updateAttributeDisplay(); // 每帧调用属性更新\r\n        if (this._isCounting && this._countdownTime > 0) {\r\n            this._countdownTime -= deltaTime;\r\n            // 更新UI显示（保留2位小数或取整）\r\n            // this.countdownLabel.string = Math.ceil(this._countdownTime).toString();\r\n            // 更新UI显示，修改为显示“时间还有xx秒”\r\n            this.countdownLabel.string = `购物时间还有${Math.ceil(this._countdownTime)}秒`;\r\n        \r\n            // 时间归零处理\r\n            if (this._countdownTime <= 0) {\r\n                this._isCounting = false;\r\n                 this.onCountdownEnd();  // 触发倒计时结束逻辑\r\n            }\r\n        }\r\n        \r\n    }\r\n    private onCountdownEnd() {\r\n        // 跳转场景（替换为实际场景名称）\r\n        director.loadScene('Game_1');  // 示例：跳转到游戏结束场景\r\n        \r\n        // 可选：发送事件通知其他模块（如根据项目事件系统）\r\n        // EventListener.emit(GameEvent.COUNTDOWN_END);\r\n    }\r\n\r\n\r\n    protected onEnable(): void {\r\n        //放置新增格子监听\r\n        EventListener.on(GameEvent.PLACE_GRID_START, this.onPlaceGridStart, this);\r\n        EventListener.on(GameEvent.PLACE_GRID_MOVE, this.onPlaceGridMove, this);\r\n        EventListener.on(GameEvent.PLACE_GRID_END, this.onPlaceGridEnd, this);\r\n\r\n\r\n        //放置拥有格子监听\r\n        EventListener.on(GameEvent.GAME_TOUCH_START, this.onTouchStart, this);\r\n        EventListener.on(GameEvent.GAME_TOUCH_MOVE, this.onTouchMove, this);\r\n        EventListener.on(GameEvent.GAME_TOUCH_END, this.onTouchEnd, this);\r\n        EventListener.on(GameEvent.GAME_TOUCH_CANCLE, this.onTouchEnd, this);\r\n\r\n        EventListener.on(GameEvent.CLEAR_AREA_DATA, this.onClearAreaData, this);\r\n        EventListener.on(GameEvent.PLACE_GRID_FINISH, this.onPlaceGridFinish, this);\r\n\r\n        EventListener.on(GameEvent.WEAPON_PlACE, this.updateAttributeDisplay, this);  // 武器放置事件\r\n        EventListener.on(GameEvent.WEAPON_REMOVE, this.updateAttributeDisplay, this);  // 武器移除事件\r\n        EventListener.on(GameEvent.WEAPON_UPGRADE, this.updateAttributeDisplay, this);  // 武器合成事件\r\n        EventListener.on(GameEvent.REFRESH_ATTRIBUTES, this.updateAttributeDisplay, this); //属性更新时间\r\n\r\n    }\r\n\r\n    protected onDisable(): void {\r\n        EventListener.off(GameEvent.PLACE_GRID_START, this.onPlaceGridStart, this);\r\n        EventListener.off(GameEvent.PLACE_GRID_MOVE, this.onPlaceGridMove, this);\r\n        EventListener.off(GameEvent.PLACE_GRID_END, this.onPlaceGridEnd, this);\r\n\r\n        EventListener.off(GameEvent.GAME_TOUCH_START, this.onTouchStart, this);\r\n        EventListener.off(GameEvent.GAME_TOUCH_MOVE, this.onTouchMove, this);\r\n        EventListener.off(GameEvent.GAME_TOUCH_END, this.onTouchEnd, this);\r\n        EventListener.off(GameEvent.GAME_TOUCH_CANCLE, this.onTouchEnd, this);\r\n\r\n        EventListener.off(GameEvent.CLEAR_AREA_DATA, this.onClearAreaData, this);\r\n        EventListener.off(GameEvent.PLACE_GRID_FINISH, this.onPlaceGridFinish, this);\r\n        EventListener.off(GameEvent.REFRESH_ATTRIBUTES, this.updateAttributeDisplay, this);\r\n    }\r\n\r\n    /** 更新属性显示 */\r\n    private updateAttributeDisplay() {\r\n        const totalAttrs = GridData.instance.getTotalAttributes();\r\n        this.charmLabel.string = `魅力: ${totalAttrs.charm}`;\r\n        this.knowledgeLabel.string = `知识: ${totalAttrs.knowledge}`;\r\n        this.talentLabel.string = `才艺: ${totalAttrs.talent}`;\r\n        this.wealthLabel.string = `财富: ${totalAttrs.wealth}`;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class GridBgObj {\r\n    data: Array<GridObj>;//位置数据\r\n    item: Node;//区域节点\r\n}\r\n\r\n\r\n"]}
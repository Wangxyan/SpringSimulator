{"version":3,"sources":["file:///D:/CODE/cocos_workspace/%E8%83%8C%E5%8C%85%E8%8B%B1%E9%9B%84/assets/Scripts/Game/Mgr/GridManager.ts"],"names":["_decorator","Component","instantiate","Node","Prefab","Rect","UITransform","v2","GridData","GridObj","EventListener","GameEvent","GridItem","WeaponData","GridBgItem","ccclass","property","GridManager","init","instance","initGridList","initAllGridList","gridData","bagCfg","max_grid","i","length","element","j","item","gridBgItem","gridBgPrefab","parent","allGridList","getComponent","gridList","removeAllChildren","getGridMapData","gridItem","gridPrefab","initGridStatus","items","children","setDeafult","cherGridStatus","posArr","weaponItem","wid","weaponCfg","Id","gridIndexArr","gridMapData","n","checkPos","index","m","gridObj","gridValue","pos","getGridPosByTiled","width","gridWidth","height","gridHeight","rect","x","y","contains","push","curWeaponTildeIndex","placeWeaponKeyArr","includes","getGridTiledByIndex","row","col","setRed","weaponKey","setYellow","sanmeCount","setGreen","checkSameWeapoIdByKey","level","Level","group","weaponGroupNum","checkWeaponByLevel","setIconYellow","emit","WEAPON_ICON_STATUS","WEAPON_SHAKE","onWeaponMove","Type","typeArr","split","Number","pointPosArr","points","Points","deletGridDataByWeaponId","gripObj","tieldPos","wpos","point","convertToWorldSpaceAR","node","convertToNodeSpaceAR","WEAPON_ICON_STATUS_INIT","onEnable","on","WEAPON_MOVE","WEAPON_PlACE","INIT_BUILD_GRID_LIST","onDisable","off","clear"],"mappings":"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","sourcesContent":["import { _decorator, Component, instantiate, Intersection2D, Node, Prefab, Rect, UITransform, v2, Vec2, Vec3 } from 'cc';\r\nimport { GridData, GridObj } from '../Data/GridData';\r\nimport { EventListener } from '../../Frame/EventListener';\r\nimport { GameEvent } from '../Event/GameEvent';\r\nimport { WeaponItem } from '../Weapon/WeaponItem';\r\nimport { GridItem } from '../Grid/GridItem';\r\nimport { Util } from '../../Frame/Util';\r\nimport { WeaponData } from '../Data/WeaponData';\r\nimport { GridBgItem } from '../Grid/GridBgItem';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('GridManager')\r\nexport class GridManager extends Component {\r\n    @property(Node)\r\n    allGridList: Node = null;  //所有格子列表\r\n    @property(Node)\r\n    gridList: Node = null;\r\n    @property(Prefab)\r\n    gridPrefab: Prefab = null;\r\n    @property(Prefab)\r\n    gridBgPrefab: Prefab = null; //所有格子背景预制体\r\n    init() {\r\n        GridData.instance.init();\r\n        this.initGridList();\r\n        this.initAllGridList();\r\n    }\r\n\r\n\r\n    /* 初始所有的背景格子 */\r\n    initAllGridList() {\r\n        let gridData = GridData.instance.bagCfg.max_grid;\r\n        for (let i = 0; i < gridData.length; i++) {\r\n            const element = gridData[i];\r\n            for (let j = 0; j < element.length; j++) {\r\n                const item = element[j];\r\n                let gridBgItem = instantiate(this.gridBgPrefab);\r\n                gridBgItem.parent = this.allGridList;\r\n                gridBgItem.getComponent(GridBgItem).init(i, j, item);\r\n            }\r\n        }\r\n    }\r\n\r\n    initGridList() {\r\n        this.gridList.removeAllChildren();\r\n        let gridData = GridData.instance.getGridMapData();\r\n        for (let i = 0; i < gridData.length; i++) {\r\n            const element = gridData[i];\r\n            for (let j = 0; j < element.length; j++) {\r\n                const item = element[j];\r\n                let gridItem = instantiate(this.gridPrefab);\r\n                gridItem.parent = this.gridList;\r\n                gridItem.getComponent(GridItem).init(i, j, item);\r\n            }\r\n        }\r\n    }\r\n\r\n    /* 初始化格子状态 */\r\n    initGridStatus() {\r\n        let items = this.gridList.children;\r\n        for (let j = 0; j < items.length; j++) {\r\n            const element = items[j];\r\n            element.getComponent(GridItem).setDeafult();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 检测位置状态(检测坐标)\r\n     * @param posArr \r\n     * @param wid 武器id\r\n     */\r\n    cherGridStatus(posArr: Array<Vec3>, weaponItem: WeaponItem) {\r\n        let wid = weaponItem.weaponCfg.Id;\r\n        let gridIndexArr: Array<number> = [];\r\n        let items = this.gridList.children;\r\n        let gridMapData = GridData.instance.getGridMapData();\r\n        for (let n = 0; n < posArr.length; n++) {\r\n            const checkPos = posArr[n];\r\n            let index = -1;\r\n            for (let m = 0; m < items.length; m++) {\r\n                const element = items[m];\r\n                let gridObj = element.getComponent(GridItem).gridObj;\r\n                let gridValue = element.getComponent(GridItem).gridValue;\r\n                let pos = GridData.instance.getGridPosByTiled(gridObj);\r\n                let width = GridData.instance.gridWidth;\r\n                let height = GridData.instance.gridHeight;\r\n                let rect = new Rect(pos.x - width / 2, pos.y - height / 2, width, height);\r\n                if (rect.contains(v2(checkPos.x, checkPos.y)) && gridValue) {\r\n                    index = m;\r\n                    break;\r\n                }\r\n            }\r\n            gridIndexArr.push(index);\r\n        }\r\n        GridData.instance.curWeaponTildeIndex = gridIndexArr;\r\n        let placeWeaponKeyArr = [];//被占用可抖动的武器key(多个)\r\n        if (gridIndexArr.includes(-1)) {\r\n            //超出区域(占用和未占用)\r\n            for (let j = 0; j < items.length; j++) {\r\n                const element = items[j];\r\n                if (gridIndexArr.includes(j)) {\r\n                    let gridObj = GridData.instance.getGridTiledByIndex(j);\r\n                    //是否占用\r\n                    if (gridMapData[gridObj.row][gridObj.col]) {\r\n                        element.getComponent(GridItem).setRed();\r\n                        //被占用的武器抖动状态\r\n                        let weaponKey = gridMapData[gridObj.row][gridObj.col];\r\n                        if (!placeWeaponKeyArr.includes(weaponKey)) {\r\n                            placeWeaponKeyArr.push(weaponKey);\r\n                        }\r\n                    }\r\n                    else {\r\n                        element.getComponent(GridItem).setYellow();\r\n                    }\r\n                }\r\n                else {\r\n                    element.getComponent(GridItem).setDeafult();\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            //未超出区域\r\n            let sanmeCount = 0;//相同wid 数量\r\n            let weaponKey = '';\r\n            for (let j = 0; j < items.length; j++) {\r\n                const element = items[j];\r\n                if (gridIndexArr.includes(j)) {\r\n                    element.getComponent(GridItem).setGreen();\r\n                    //抖动和合成状态\r\n                    let gridObj = GridData.instance.getGridTiledByIndex(j);\r\n                    weaponKey = gridMapData[gridObj.row][gridObj.col];\r\n                    //检测武器id是否相同\r\n                    if (GridData.instance.checkSameWeapoIdByKey(weaponKey, wid)) {\r\n                        sanmeCount++;\r\n                    }\r\n                    //添加到抖动列表\r\n                    if (!placeWeaponKeyArr.includes(weaponKey)) {\r\n                        placeWeaponKeyArr.push(weaponKey);\r\n                    }\r\n                }\r\n                else {\r\n                    element.getComponent(GridItem).setDeafult();\r\n                }\r\n\r\n            }\r\n            //是否达到合成成状态\r\n            if (sanmeCount == gridIndexArr.length) {\r\n                //可以合成(是否合成达到最大等级)\r\n                let level = weaponItem.weaponCfg.Level;\r\n                let group = weaponItem.weaponCfg.weaponGroupNum;\r\n                if (WeaponData.instance.checkWeaponByLevel(level + 1, group)) {\r\n                    placeWeaponKeyArr = [];\r\n                    weaponItem.setIconYellow();\r\n                    EventListener.emit(GameEvent.WEAPON_ICON_STATUS, weaponKey, true);\r\n                }\r\n            }\r\n        }\r\n        //设置抖动\r\n        for (let index = 0; index < placeWeaponKeyArr.length; index++) {\r\n            const element = placeWeaponKeyArr[index];\r\n            EventListener.emit(GameEvent.WEAPON_SHAKE, element);\r\n        }\r\n    }\r\n\r\n\r\n    /* 武器移动 */\r\n    onWeaponMove(weaponItem: WeaponItem) {\r\n        let weaponKey = weaponItem.weaponKey;\r\n        let weaponCfg = weaponItem.weaponCfg;\r\n        let Type = weaponCfg.Type;\r\n        let typeArr = Type.split('_');\r\n        let row = Number(typeArr[0]);\r\n        let col = Number(typeArr[1]);\r\n        let pointPosArr: Array<Vec3> = [];\r\n        let points = weaponCfg.Points;\r\n        GridData.instance.deletGridDataByWeaponId(weaponKey);\r\n        for (let i = 0; i < row; i++) {\r\n            for (let j = 0; j < col; j++) {\r\n                if (points[i][j]) {\r\n                    //如果位置点存在\r\n                    let gripObj = new GridObj();\r\n                    gripObj.row = i;\r\n                    gripObj.col = j;\r\n                    let tieldPos = GridData.instance.getGridPosByTiled(gripObj);\r\n                    let wpos = weaponItem.point.getComponent(UITransform).convertToWorldSpaceAR(tieldPos);\r\n                    let pos = weaponItem.node.parent.getComponent(UITransform).convertToNodeSpaceAR(wpos);\r\n                    pointPosArr.push(pos);\r\n                }\r\n            }\r\n        }\r\n        //初始状态\r\n        EventListener.emit(GameEvent.WEAPON_ICON_STATUS_INIT);\r\n        this.cherGridStatus(pointPosArr, weaponItem);\r\n    }\r\n\r\n    protected onEnable(): void {\r\n        EventListener.on(GameEvent.WEAPON_MOVE, this.onWeaponMove, this);\r\n        EventListener.on(GameEvent.WEAPON_PlACE, this.initGridStatus, this);\r\n        EventListener.on(GameEvent.INIT_BUILD_GRID_LIST, this.initGridList, this);\r\n    }\r\n\r\n    protected onDisable(): void {\r\n        EventListener.off(GameEvent.WEAPON_MOVE, this.onWeaponMove, this);\r\n        EventListener.off(GameEvent.WEAPON_PlACE, this.initGridStatus, this);\r\n        EventListener.off(GameEvent.INIT_BUILD_GRID_LIST, this.initGridList, this);\r\n    }\r\n\r\n    clear() {\r\n        GridData.instance.clear();\r\n    }\r\n}\r\n\r\n\r\n"]}
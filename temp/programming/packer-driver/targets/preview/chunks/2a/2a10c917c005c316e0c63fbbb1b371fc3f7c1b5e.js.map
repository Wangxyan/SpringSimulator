{"version":3,"sources":["file:///D:/CODE/cocos_workspace/%E8%83%8C%E5%8C%85%E8%8B%B1%E9%9B%84/assets/Scripts/Frame/ResourcesUtil.ts"],"names":["ResourcesUtil","Component","resources","Prefab","Material","error","instantiate","find","Sprite","SpriteFrame","SpriteAtlas","sp","TiledMapAsset","isValid","assetManager","Texture2D","cache","loadRes","url","type","cb","load","err","res","loadEffectRes","modulePath","Promise","resolve","reject","prefab","console","info","loadModelRes","loadMatRes","matPath","mat","loadModelResArr","path","arrName","progressCb","completeCb","arrUrls","map","item","getMapObj","idx","length","push","getJsonData","fileName","content","message","json","getTextData","text","loadFile","resName","get","data","undefined","loadDir","dirPath","loadRemote","loadResNew","getUIPrefabRes","prefabPath","createUI","parent","pf","node","setPosition","addChild","setSpriteFrame","sprite","clear","callback","spriteFrame","geSpriteFrame","setSpriteAtlasSpriteFrame","atlas","frame","getSpriteFrame","getSpriteAtlasSpriteFrame","getSkeletonData","SkeletonData","getPrefab","releaseRes","decRef","getTiledMap","releaseSprite","getComponent","loadRemoteImg","imageAsset","spFrame","_uuid","texture","image","addRef","releaseRemoteSprite","refCount","packable","original","_texture","destroy"],"mappings":"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","sourcesContent":["import { Node, Component, resources, Prefab, Material, error, JsonAsset, TextAsset, instantiate, find, Sprite, SpriteFrame, SpriteAtlas, sp, TiledMapAsset, Asset, AssetManager, isValid, assetManager, ImageAsset, Texture2D } from \"cc\";\r\nexport class ResourcesUtil extends Component {\r\n    /**\r\n* 加载资源\r\n* @param url   资源路径\r\n* @param type  资源类型\r\n* @param cb    回调\r\n* @method loadRes\r\n*/\r\n    public static loadRes(url: string, type: any, cb: Function = () => { }) {\r\n        resources.load(url, (err: any, res: any) => {\r\n            if (err) {\r\n                cb(err, res);\r\n                return;\r\n            }\r\n\r\n            cb && cb(null, res);\r\n        })\r\n    }\r\n\r\n    /**\r\n     * 获取特效prefab\r\n     * @param modulePath 路径\r\n     * @returns \r\n     */\r\n    public static loadEffectRes(modulePath: string) {\r\n        return new Promise((resolve, reject) => {\r\n            this.loadRes(`prefab/effect/${modulePath}`, Prefab, (err: any, prefab: Prefab) => {\r\n                if (err) {\r\n                    console.info('effect load failed', modulePath);\r\n                    reject && reject();\r\n                    return;\r\n                }\r\n\r\n                resolve && resolve(prefab);\r\n            })\r\n        })\r\n    }\r\n\r\n    /**\r\n     * 获取模型数据\r\n     * @param modulePath 模型路径\r\n     * @returns \r\n     */\r\n    public static loadModelRes(modulePath: string) {\r\n        return new Promise((resolve, reject) => {\r\n            this.loadRes(`${modulePath}`, Prefab, (err: any, prefab: Prefab) => {\r\n                if (err) {\r\n                    console.info(\"model load failed\", modulePath);\r\n                    reject && reject();\r\n                    return;\r\n                }\r\n\r\n                resolve && resolve(prefab);\r\n            })\r\n        })\r\n    }\r\n\r\n    /**\r\n     * 获取材质\r\n     * @param matPath 路径\r\n     * @returns \r\n     */\r\n    public static loadMatRes(matPath: string) {\r\n        return new Promise((resolve, reject) => {\r\n            this.loadRes(`${matPath}`, Material, (err: any, mat: Prefab) => {\r\n                if (err) {\r\n                    console.info('mat load failed', matPath);\r\n                    reject && reject();\r\n                    return;\r\n                }\r\n\r\n                resolve && resolve(mat);\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * 获取多模型数据\r\n     * @param path 资源路径\r\n     * @param arrName 资源名称\r\n     * @param progressCb 过程回调函数\r\n     * @param completeCb 完成回调函数\r\n     */\r\n    public static loadModelResArr(path: string, arrName: Array<string>, progressCb: any, completeCb: any) {\r\n        let arrUrls = arrName.map((item) => {\r\n            return `${path}/${item}`;\r\n        })\r\n\r\n        resources.load(arrUrls, Prefab, progressCb, completeCb);\r\n    }\r\n\r\n    /**\r\n     * 获取关卡数据\r\n     * @param type 关卡类型\r\n     * @param arrName 资源名称\r\n     * @param progressCb 过程回调函数\r\n     * @param completeCb 完成回调函数\r\n     */\r\n    public static getMapObj(type: string, arrName: Array<string>, progressCb?: any, completeCb?: any) {\r\n        let arrUrls: string[] = [];\r\n        for (let idx = 0; idx < arrName.length; idx++) {\r\n            arrUrls.push(`map/${type}/${arrName[idx]}`)\r\n        }\r\n\r\n        resources.load(arrUrls, Prefab, progressCb, completeCb);\r\n    }\r\n\r\n    /**\r\n     * 获取json数据\r\n     * @param fileName 文件名\r\n     * @param cb 回调函数 \r\n     */\r\n    public static getJsonData(fileName: string, cb: Function) {\r\n        this.loadRes(\"datas/\" + fileName, null, function (err: any, content: JsonAsset) {\r\n            if (err) {\r\n                error(err.message || err);\r\n                return;\r\n            }\r\n\r\n            if (content.json) {\r\n                cb(err, content.json);\r\n            } else {\r\n                cb('failed!!!');\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 获取文本数据\r\n     * @param fileName 文件名\r\n     * @param cb  回调函数\r\n     */\r\n    public static getTextData(fileName: string, cb: Function) {\r\n        this.loadRes(\"datas/\" + fileName, null, function (err: any, content: TextAsset) {\r\n            if (err) {\r\n                error(err.message || err);\r\n                return;\r\n            }\r\n\r\n            let text: string = content.text;\r\n            cb(err, text);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param resName 加载单个文件\r\n     * @param type \r\n     * @returns \r\n     */\r\n    public static loadFile(resName: string, type: any) {\r\n        return new Promise((resolve, reject) => {\r\n            if (!resName) {\r\n                resolve([]);\r\n                return;\r\n            }\r\n\r\n            let res = resources.get(resName);\r\n            if (res) {\r\n                resolve([resName, res]);\r\n            }\r\n            else {\r\n                resources.load(resName, type, (err: Error | null, data: any) => {\r\n                    if (err != undefined) {\r\n                        console.info(\"下载资源错误：\" + err);\r\n                        return;\r\n                    }\r\n                    resolve([resName, data]);\r\n                });\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 加载整个文件夹里的文本数据\r\n     * @param dirPath \r\n     * @param type \r\n     * @returns \r\n     */\r\n    public static loadDir(dirPath: string) {\r\n        return new Promise((resolve, reject) => {\r\n            if (!dirPath) {\r\n                resolve([]);\r\n                return;\r\n            }\r\n\r\n            resources.loadDir(dirPath, (err: Error | null, data: any[]) => {\r\n                if (err != undefined) {\r\n                    console.info(\"下载资源错误：\" + err);\r\n                    return;\r\n                }\r\n                resolve(data);\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 加载远程资源\r\n     * @param dirPath \r\n     * @param type \r\n     * @returns \r\n     */\r\n    public static loadRemote(dirPath: string, type: any) {\r\n        return new Promise((resolve, reject) => {\r\n            if (!dirPath) {\r\n                resolve([]);\r\n                console.info(\"路径错误：\" + dirPath);\r\n                return;\r\n            }\r\n            assetManager.loadRemote(dirPath, function (err, data) {\r\n                if (err != undefined) {\r\n                    console.info(\"下载资源错误：\" + err);\r\n                    return;\r\n                }\r\n\r\n                resolve(data);\r\n            });\r\n        })\r\n    }\r\n\r\n\r\n    /**\r\n    * 加载资源\r\n    * @param url   资源路径\r\n    * @param type  资源类型\r\n    * @method loadRes\r\n    */\r\n    public static loadResNew(url: string, type: any) {\r\n        return new Promise((resolve, reject) => {\r\n            resources.load(url, type, (err: any, res: any) => {\r\n                if (err) {\r\n                    error(err.message || err);\r\n                    reject && reject(err)\r\n                    return;\r\n                }\r\n\r\n                resolve && resolve(res);\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n    /**\r\n     * 获取UI prefab\r\n     * @param prefabPath prefab路径 \r\n     * @param cb 回调函数\r\n     */\r\n    public static getUIPrefabRes(prefabPath: string) {\r\n        return this.loadResNew(prefabPath, Prefab);\r\n    }\r\n\r\n    /**\r\n      * 创建ui界面\r\n      * @param path ui路径\r\n      * @param cb 回调函数\r\n      * @param parent 父节点\r\n      */\r\n    public static async createUI(path: string, parent?: Node) {\r\n        let pf = await this.getUIPrefabRes(path) as Prefab;\r\n        let node: Node = instantiate(pf);\r\n        node.setPosition(0, 0, 0);\r\n        if (!parent) {\r\n            parent = find(\"Canvas\") as Node;\r\n        }\r\n        parent.addChild(node);\r\n        return node;\r\n    }\r\n\r\n    /**\r\n    * 设置节点精灵\r\n    * @param path 资源路径\r\n    * @param node 节点\r\n    */\r\n\r\n    public static setSpriteFrame(path: string, sprite: Sprite, clear = true, callback: any = null) {\r\n        if (sprite) {\r\n            if (clear) {\r\n                sprite.spriteFrame = null;\r\n            }\r\n            resources.load(path, SpriteFrame, function (err: any, SpriteFrame: SpriteFrame) {\r\n                if (err) {\r\n                    console.info('set sprite frame failed! err:', path, err);\r\n                    if (callback) {\r\n                        callback();\r\n                    }\r\n                    return;\r\n                }\r\n                if (sprite && sprite) {\r\n                    sprite.spriteFrame = SpriteFrame;\r\n                }\r\n\r\n                if (callback) {\r\n                    callback();\r\n                }\r\n            })\r\n        } else {\r\n            if (callback) {\r\n                callback();\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    public static geSpriteFrame(path: string) {\r\n        return new Promise((resolve, reject) => {\r\n            resources.load(path, SpriteFrame, function (err: any, SpriteFrame: SpriteFrame) {\r\n                if (err) {\r\n                    console.info('set sprite frame failed! err:', path);\r\n                    resolve(null)\r\n                    return;\r\n                }\r\n                resolve(SpriteFrame);\r\n            })\r\n        })\r\n    }\r\n\r\n    /**\r\n     * 设置图集\r\n     * @param path \r\n     * @param res \r\n     * @param sprite \r\n     */\r\n    public static setSpriteAtlasSpriteFrame(path: string, res: string, sprite: Sprite) {\r\n        if (sprite) {\r\n            resources.load(path, SpriteAtlas, (err, atlas) => {\r\n                if (err) {\r\n                    console.info('set spriteAtlas frame failed! err:', path, err);\r\n                    return;\r\n                }\r\n                const frame = atlas.getSpriteFrame(res);\r\n                sprite.spriteFrame = frame;\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取图集中的精灵\r\n     *  ResourcesUtil.getSpriteAtlasSpriteFrame(Constants.skillImagePath, resIcon).then((spriterFrame: SpriteFrame) => {\r\n            this.iconSprite.spriteFrame = spriterFrame;\r\n        });\r\n     * @param path \r\n     * @param res \r\n     * @returns \r\n     */\r\n    public static getSpriteAtlasSpriteFrame(path: string, res: string) {\r\n        return new Promise((resolve) => {\r\n            resources.load(path, SpriteAtlas, (err, atlas) => {\r\n                if (err) {\r\n                    console.info('get SpriteAtlasSprite failed! err:', path);\r\n                    resolve(null);\r\n                    return;\r\n                }\r\n                const frame = atlas.getSpriteFrame(res);\r\n                resolve(frame);\r\n            });\r\n        })\r\n    }\r\n\r\n    /**\r\n     * 获得精灵\r\n     * @param path 资源路径\r\n     */\r\n    public static getSpriteFrame(path: string) {\r\n        return new Promise((resolve) => {\r\n            resources.load(path, SpriteFrame, function (err: any, SpriteFrame: SpriteFrame) {\r\n                resolve(SpriteFrame);\r\n            })\r\n        })\r\n    }\r\n\r\n    /**\r\n    * 获得龙骨数据\r\n    * @param path 资源路径\r\n    */\r\n    public static getSkeletonData(path: string) {\r\n        return new Promise((resolve) => {\r\n            resources.load(path, sp.SkeletonData, function (err: any, SkeletonData: sp.SkeletonData) {\r\n                if (err) {\r\n                    console.info('get SkeletonData failed! err:', path);\r\n                    return;\r\n                }\r\n                resolve(SkeletonData);\r\n            })\r\n        })\r\n    }\r\n\r\n    /**\r\n    * 获得龙骨数据\r\n    * @param path 资源路径\r\n    */\r\n    public static getPrefab(path: string) {\r\n        return new Promise((resolve, reject) => {\r\n            resources.load(path, Prefab, function (err: any, prefab: Prefab) {\r\n                if (err) {\r\n                    console.info('get Prefab failed! err:', path);\r\n                    reject(null);\r\n                }\r\n                resolve(prefab);\r\n            })\r\n        })\r\n    }\r\n\r\n    /**\r\n     * 资源释放\r\n     * @param sp \r\n     */\r\n    public static releaseRes(sp: Sprite) {\r\n        let res = sp.spriteFrame;\r\n        sp.spriteFrame = null;\r\n        res.decRef();\r\n    }\r\n\r\n    /**\r\n   * 获得tiledMap数据\r\n   * @param path 资源路径\r\n   */\r\n    public static getTiledMap(path: string) {\r\n        return new Promise((resolve) => {\r\n            resources.load(path, TiledMapAsset, function (err: any, data: TiledMapAsset) {\r\n                if (err) {\r\n                    console.info('get Prefab failed! err:', path);\r\n                    return;\r\n                }\r\n                resolve(data);\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n    /* 释放节点资源 */\r\n    releaseSprite(node: Node) {\r\n        if (!isValid(node)) {\r\n            return;\r\n        }\r\n        const sp = node.getComponent(Sprite) as Sprite;\r\n        if (sp && sp.spriteFrame) {\r\n            sp.spriteFrame.decRef();\r\n            sp.spriteFrame = null;\r\n        }\r\n    }\r\n\r\n\r\n    /* 加载远程资源 */\r\n    cache: { [name: string]: SpriteFrame } = {};\r\n    loadRemoteImg(url: string) {\r\n        assetManager.loadRemote<ImageAsset>(url, (err, imageAsset) => {\r\n            if (!err && imageAsset) {\r\n                let spFrame = this.cache[imageAsset._uuid];\r\n                if (!spFrame) {\r\n                    const texture = new Texture2D();\r\n                    texture.image = imageAsset;\r\n                    spFrame = new SpriteFrame();\r\n                    spFrame.texture = texture;\r\n                    imageAsset.addRef();\r\n                    this.cache[imageAsset._uuid] = spFrame; // 添加映射表记录\r\n                }\r\n                spFrame.addRef(); // 计数加1\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    /* 释放远程资源 */\r\n    releaseRemoteSprite(node: Node) {\r\n        if (!isValid(node)) {\r\n            return;\r\n        }\r\n        const sp = node.getComponent(Sprite) as Sprite;\r\n        if (sp && sp.spriteFrame) {\r\n            const spFrame = sp.spriteFrame;\r\n            sp.spriteFrame.decRef(false); // 只把计数减1\r\n            sp.spriteFrame = null;\r\n\r\n            if (spFrame.refCount <= 0) {\r\n                let texture = spFrame.texture as Texture2D;\r\n                // 如果已加入动态合图，必须取原始的Texture2D\r\n                if (spFrame.packable) {\r\n                    texture = spFrame.original?._texture as Texture2D;\r\n                }\r\n                if (texture) {\r\n                    delete this.cache[texture.image!._uuid]; // 删除映射表记录\r\n                    texture.image?.decRef();\r\n                    texture.destroy();\r\n                }\r\n                spFrame.destroy();\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\n"]}
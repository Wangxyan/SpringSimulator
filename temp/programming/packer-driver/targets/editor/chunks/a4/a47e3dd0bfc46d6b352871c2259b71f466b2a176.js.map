{"version":3,"sources":["file:///D:/CODE/cocos_workspace/%E8%83%8C%E5%8C%85%E8%8B%B1%E9%9B%84/assets/Scripts/Game/Skill/SkillBulletBase.ts"],"names":["_decorator","bezier","misc","Node","Rect","tween","v2","v3","Vec2","Vec3","PoolManager","BaseComponent","EventListener","GameEvent","Util","AtkObj","GameDefine","ccclass","property","SkillBulletBase","skillBulletObj","initStatus","bulletId","during","damageR","damageInterval","damageTimes","isCollider","LoopCount","moveSpeed","initSpeed","isEasing","scale","_dir","curPos","targetPos","quadBoundBox","boundBox","_skillBulletKey","type","_minY","_maxY","_minX","_maxX","_playTime","atkObj","atk","Math","floor","getRandomInt","initSkillBullet","angel","skillCfg","Type","nodePos","node","getPosition","vector","clone","subtract","curAngel","vector_to_angle","x","y","v","angle_to_vector","set","normalize","setSkillSize","getSkillMoveSpeedByType","random","toString","substring","setSkillBulletAnim","setScale","easingSpeed","time","isAcc","BintTweenObj","t","speedTweenObj","to","onUpdate","target","p0","p1","p2","p3","start","setBulletMove","dt","Speed","dir","dis","multiply","temPos","add","setPosition","setBulletAngle","r","signAngle","angle","radiansToDegrees","playBulletTween","eulerAngles","bullet","startPos","position","startAngle","bulletTween","mixY","maxY","mixX","maxX","progressX","end","current","progressY","parallel","progress","easing","call","z","updateSkillBulletScreen","rect","viewWidth","viewHeight","pos","contains","clear","duringTriggleClearByType","updateSkillDamageInterval","Damage_interval","insertRectCircleObj","emit","INSERT_QUARD_TREE_RECT_CIRCLE","onAttacked","triggleSkillBySkillId","colliderTriggleSkill","triggerCount","checkColliderCount","count","com","parent","damageTimeClearByType","colliderTriggleClearByType","speed","onEnable","onDisable","callback","DELETE_QUARD_TREE_OBJ","instance","putNode","childUpdate","deltaTime"],"mappings":"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","sourcesContent":["\r\nimport { _decorator, bezier, BoxCollider2D, CircleCollider2D, Component, director, find, log, misc, Node, Rect, sp, Sprite, tween, v2, v3, Vec2, Vec3 } from 'cc';\r\nimport { PoolManager } from '../../Frame/PoolManager';\r\nimport { Debug } from '../../Frame/Debug';\r\nimport BaseComponent from '../../Frame/BaseComponent';\r\nimport { EventListener } from '../../Frame/EventListener';\r\nimport { GameEvent } from '../Event/GameEvent';\r\nimport { Util } from '../../Frame/Util';\r\nimport { MonsterBase } from '../Monster/MonsterBase';\r\nimport { AtkObj, SkillBulletObj, SkillData } from '../Data/SkillData';\r\nimport { HeroData } from '../Data/HeroData';\r\nimport { GameDefine } from '../../GameDefine';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('SkillBulletBase')\r\nexport class SkillBulletBase extends BaseComponent {\r\n    @property(Node)\r\n    icon: Node = null;\r\n    public skillBulletObj: SkillBulletObj = null;\r\n    public initStatus: boolean = false;\r\n    public bulletId: number = 101;//子弹id\r\n    public during: number = 10;//持续时间\r\n    public damageR: number = 30;//默认伤害范围\r\n    public damageInterval: number;//伤害间隔\r\n    public damageTimes: number;//伤害次数\r\n    public isCollider: boolean;//是否碰撞 （伤害间隔控制）\r\n    public LoopCount: number = 0;//动画播放次数\r\n    public moveSpeed: number = 1500;//子弹速度\r\n    public initSpeed: number = 1500;//初始速度\r\n    public isEasing: boolean = false;//是否子弹加速\r\n    public scale: number = 1;//缩放大小\r\n    private _dir = new Vec3();//方向向量\r\n    public curPos: Vec3 = new Vec3();//技能当前坐标\r\n    public targetPos: Vec3 = new Vec3();//目标点坐标\r\n    public quadBoundBox: BoxCollider2D | CircleCollider2D = null;//四叉树检测包围盒\r\n    public boundBox: BoxCollider2D | CircleCollider2D = null;//技能检测区域\r\n    public _skillBulletKey: string = '';\r\n    public type: number = 0;//技能类型\r\n\r\n    private _minY = 5;\r\n    private _maxY = 300;\r\n    private _minX = 0;\r\n    private _maxX = 0;\r\n    private _playTime = 1;//飞行时间\r\n    public get atkObj() {\r\n        let atkObj = new AtkObj();\r\n        atkObj.atk = Math.floor(Util.getRandomInt(5, 15));\r\n        return atkObj;\r\n    }\r\n\r\n    /* 初始化技能子弹 */\r\n    initSkillBullet(targetPos: Vec3, angel = 0) {\r\n        this.type = this.skillBulletObj.skillCfg.Type;\r\n        let nodePos = this.node.getPosition();\r\n        let vector = new Vec3();\r\n        this.targetPos = targetPos.clone();\r\n        Vec3.subtract(vector, targetPos, nodePos);\r\n        //根据偏移角度计算新向量\r\n        let curAngel = Util.vector_to_angle(v2(vector.x, vector.y));\r\n        let v = Util.angle_to_vector(curAngel + angel);\r\n        vector.set(v.x, v.y);\r\n        this._dir = vector.normalize();\r\n        this.isEasing = false;\r\n        this.curPos = this.node.getPosition();\r\n        this.scale = 1;\r\n        this.setSkillSize();\r\n        this.during = 10;\r\n        this.moveSpeed = this.getSkillMoveSpeedByType();\r\n        this.initSpeed = this.moveSpeed;\r\n        this.damageTimes = 1;\r\n        this.damageInterval = 0;\r\n        this.isCollider = true;\r\n        this.LoopCount = 0;\r\n        this._skillBulletKey = 'skillBullet' + this.bulletId + Math.random().toString().substring(2, 6) + Math.random().toString().substring(2, 12);\r\n        this.setSkillBulletAnim();\r\n        this.initStatus = true;\r\n    }\r\n\r\n    /* 设置技能大小 */\r\n    setSkillSize() {\r\n        this.node.setScale(v3(this.scale, this.scale, this.scale));\r\n    }\r\n\r\n    /* 设置技能动画 */\r\n    setSkillBulletAnim() {\r\n\r\n    }\r\n\r\n    /**\r\n     * 加速运动\r\n     * @param time \r\n     * @param isAcc \r\n     */\r\n    easingSpeed(time: number, isAcc: boolean = true) {\r\n        if (this.isEasing) {\r\n            class BintTweenObj {\r\n                t: number;\r\n            }\r\n            let speedTweenObj = new BintTweenObj();\r\n            speedTweenObj.t = 0;\r\n            tween(speedTweenObj).to(time, { t: 1 }, {\r\n                onUpdate: (target, t) => {\r\n                    const p0 = v2(0, 0);\r\n                    const p1 = v2(0, 0.4);\r\n                    const p2 = v2(0.2, 1);\r\n                    const p3 = v2(1, 1);\r\n                    const x = p0.x * (1 - t) * (1 - t) * (1 - t) + 3 * p1.x * t * (1 - t) * (1 - t) + 3 * p2.x * t * t * (1 - t) + p3.x * t * t * t;\r\n                    const y = p0.y * (1 - t) * (1 - t) * (1 - t) + 3 * p1.y * t * (1 - t) * (1 - t) + 3 * p2.y * t * t * (1 - t) + p3.y * t * t * t;\r\n                    //调试\r\n                    this.moveSpeed = this.initSpeed + 500 * y;\r\n                }\r\n            }).start();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置子弹移动\r\n     * @param dt \r\n     * @param isAngle  是否有旋转角度 \r\n     * @returns \r\n     */\r\n    setBulletMove(dt: number) {\r\n        if (this.skillBulletObj.skillCfg.Speed > 0) {\r\n            let nodePos = this.node.getPosition();\r\n            let dir = v3(this._dir.x, this._dir.y, 0);\r\n            let dis = dir.multiply(v3(this.moveSpeed * dt, this.moveSpeed * dt, 0));\r\n            let temPos = nodePos.add(dis);\r\n            this.node.setPosition(temPos);\r\n            this.curPos = temPos;\r\n            //调角度\r\n            this.setBulletAngle(this.skillBulletObj.skillCfg.Type);\r\n        }\r\n    }\r\n\r\n    setBulletAngle(type: number) {\r\n        switch (type) {\r\n            case 1:\r\n                //直线运动\r\n                let r = new Vec2(this._dir.x, this._dir.y).signAngle(new Vec2(0, 1));\r\n                let angle = misc.radiansToDegrees(r);\r\n                this.node.angle = -angle;\r\n                break;\r\n            case 2:\r\n                //直线运动旋转\r\n                this.node.angle = this.node.angle - 20;\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n    /* 设置子弹抛物线 */\r\n    playBulletTween(targetPos: Vec3) {\r\n        this.node.eulerAngles = new Vec3(0, 0, 0);\r\n        var bullet = this.node;\r\n        var startPos = bullet.position;\r\n        var startAngle = bullet.eulerAngles;\r\n        var bulletTween = tween(startPos);\r\n        // let time = Vec3.distance(startPos, targetPos) / this.skillBulletObj.skillCfg.Speed;\r\n        // this._playTime = time > 0.2 ? time : 0.2;\r\n        this._minY = startPos.y + (targetPos.y - startPos.y) / 2 + 100;\r\n        this._maxY = startPos.y + (targetPos.y - startPos.y) / 2 + 100;\r\n        this._maxX = startPos.x + (targetPos.x - startPos.x) / 2 + 100;\r\n        this._minX = startPos.x + (targetPos.x - startPos.x) / 2 + 100;\r\n        const mixY = this._minY;\r\n        const maxY = this._maxY;\r\n        const mixX = this._minX;\r\n        const maxX = this._maxX;\r\n        var progressX = function (start, end, current, t) {\r\n            current = bezier(start, mixX, maxX, end, t);\r\n            return current;\r\n        };\r\n        var progressY = function (start, end, current, t) {\r\n            current = bezier(start, mixY, maxY, end, t);\r\n            return current;\r\n        };\r\n\r\n        bulletTween.parallel(\r\n            tween().to(this._playTime, { x: targetPos.x }, {\r\n                progress: progressX, easing: \"smooth\", onUpdate: () => {\r\n                    bullet.setPosition(startPos);\r\n                    this.curPos = startPos;\r\n                }\r\n            }),\r\n            tween().to(this._playTime, { y: targetPos.y }, {\r\n                progress: progressY, easing: \"smooth\", onUpdate: () => {\r\n                    bullet.setPosition(startPos);\r\n                    this.curPos = startPos;\r\n                }\r\n            }),\r\n        ).call(() => {\r\n\r\n        }).start();\r\n        tween(startAngle).to(this._playTime, { z: -1440 }, {\r\n            onUpdate: () => {\r\n                bullet.eulerAngles = startAngle;\r\n            }\r\n        }).start();\r\n    }\r\n\r\n\r\n    /**\r\n     * 更新技能是否出屏幕\r\n     * @param dt \r\n     * @returns \r\n     */\r\n    updateSkillBulletScreen(dt: number) {\r\n        //出屏幕移除\r\n        let rect = new Rect(-GameDefine.viewWidth / 2, -GameDefine.viewHeight / 2, GameDefine.viewWidth, GameDefine.viewHeight);\r\n        let pos = this.curPos\r\n        if (!rect.contains(v2(pos.x, pos.y))) {\r\n            this.clear();\r\n            return;\r\n        }\r\n        //持续时间到清除\r\n        this.duringTriggleClearByType(dt);\r\n    }\r\n\r\n    /* 更新技能伤害间隔 */\r\n    updateSkillDamageInterval(dt: number) {\r\n        if (this.skillBulletObj.skillCfg.Damage_interval) {\r\n            this.damageInterval -= dt;\r\n            this.isCollider = false;\r\n            if (this.damageInterval <= 0) {\r\n                this.isCollider = true;\r\n                this.damageInterval = this.skillBulletObj.skillCfg.Damage_interval;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n    * 添加方形区域检测对象\r\n    * @param dt \r\n    */\r\n    insertRectCircleObj() {\r\n        if (this.initStatus) {\r\n            //通过类型判定是否加入检测对象\r\n            switch (this.type) {\r\n                case 10:\r\n                    break;\r\n                default:\r\n                    EventListener.emit(GameEvent.INSERT_QUARD_TREE_RECT_CIRCLE, this._skillBulletKey, this, this.quadBoundBox, 1);\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    onAttacked() {\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * 直接触发链接技能\r\n     */\r\n    triggleSkillBySkillId() {\r\n\r\n    }\r\n\r\n    /* 碰撞触发技能 */\r\n    colliderTriggleSkill(triggerCount: number, damageTimes: number) {\r\n\r\n    }\r\n\r\n    /**\r\n     * 检测碰撞次数\r\n     * @param count 碰撞次数\r\n     * @param com \r\n     *  1=碰撞之后首次触发\r\n        2=技能结束后触发\r\n        3=碰撞触发\r\n        4=闪电链击中触发\r\n        5=范围伤害碰撞后\r\n        6=技能释放或命中多少次触发\r\n        7=由城墙释放\r\n        8=持续技能触发，和持续技能一起释放一起结束\r\n        9=怪物死亡后触发\r\n        11=持续技能碰撞后触发\r\n     */\r\n    checkColliderCount(count: number, com: MonsterBase) {\r\n        //伤害次数为0则为持续释放\r\n        if (count == 1) {\r\n            //震动\r\n            // EventListener.emit(GameEvent.SCREEN_VIBRATOR, 3, this.skillBulletObj.skillCfg.shake);\r\n            //击退\r\n            if (com.node.parent) {\r\n                // com.setMonsterHurtMoveEffect(this.skillBulletObj.skillCfg.move, this.skillBulletObj.skillCfg.intensity, this._dir.clone(), this.getColliderPos());\r\n            }\r\n        }\r\n        if (this.damageTimes) {\r\n            //碰撞结束触发新技能效果\r\n            this.colliderTriggleSkill(count, this.damageTimes);\r\n            if (count >= this.damageTimes) {\r\n                //伤害次数达到移除\r\n                this.damageTimeClearByType();\r\n            }\r\n        }\r\n        else {\r\n            //伤害次数为0根据类型判断是否首次碰撞触发技能\r\n            this.colliderTriggleClearByType(count, this.damageTimes);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 根据类型判断是否首次碰撞触发技能\r\n     */\r\n    colliderTriggleClearByType(count: number, damageTimes: number) {\r\n\r\n    }\r\n\r\n    /* 根据类型 持续时间了清除 */\r\n    duringTriggleClearByType(dt: number) {\r\n        this.during -= dt;\r\n        if (this.during <= 0) {\r\n            this.clear();\r\n        }\r\n    }\r\n\r\n    /* 根据类型 伤害次数达到了清除 */\r\n    damageTimeClearByType() {\r\n        //TODO 通过类型\r\n        this.clear();\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * 通过技能类型获取移动速度\r\n     */\r\n    getSkillMoveSpeedByType() {\r\n        let speed = 0;\r\n        switch (this.type) {\r\n            case 99:\r\n                speed = 0;\r\n                break;\r\n            default:\r\n                speed = this.skillBulletObj.skillCfg.Speed;\r\n                break;\r\n        }\r\n        return speed;\r\n    }\r\n\r\n    protected onEnable(): void {\r\n\r\n    }\r\n\r\n    protected onDisable(): void {\r\n\r\n    }\r\n\r\n    clear() {\r\n        this.initStatus = false;\r\n        this.boundBox = null;\r\n        this.quadBoundBox = null;\r\n        //技能释放回调\r\n        this.skillBulletObj.callback && this.skillBulletObj.callback();\r\n        EventListener.emit(GameEvent.DELETE_QUARD_TREE_OBJ, this._skillBulletKey);\r\n        PoolManager.instance.putNode(this.node);\r\n    }\r\n\r\n    childUpdate(deltaTime: number) {\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n"]}
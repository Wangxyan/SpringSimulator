{"version":3,"sources":["file:///D:/CODE/cocos_workspace/%E8%83%8C%E5%8C%85%E8%8B%B1%E9%9B%84/assets/Scripts/Game/Mgr/BattleUIManager.ts"],"names":["_decorator","Component","Node","Vec3","EventListener","GameEvent","PoolManager","DamageItem","ResourcesUtil","BlastItem","HeroHpItem","MonsterHpItem","Constants","Shadow","ccclass","property","BattleUIManager","_battlerUIPrefabData","Map","_battleUiNode","onEnable","on","CREATE_DAMAGER_NUM","onCreateDamageNum","SHOW_MONSTER_DIE_EFFECT","onCreateDieEffect","SHOW_HERO_HP","onCreateHeroHp","SHOW_MONSTER_HP","onCreateMonsterHp","SHOW_MONSTER_SHADOW","onCreateMonsterShadow","onDisable","off","pos","attack","type","fontSize","key","damageItem","damagePrefab","has","get","instance","getNodeItem","battleUIParent","addChild","setPosition","getComponent","init","path","battlePath","getPrefab","then","set","blastItem","blastPrefab","parent","battleUIDownParent","getChildByName","heroHpItem","heroHpPrefab","newPos","x","y","com","monsterHpItem","monsterHpPrefab","monsterShadownItem","monsterShadownPrefab","monsterShadow","clear","removeAllChildren"],"mappings":"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","sourcesContent":["import { _decorator, Component, instantiate, log, Node, Prefab, v2, v3, Vec3 } from 'cc';\r\nimport { EventListener } from '../../Frame/EventListener';\r\nimport { GameEvent } from '../Event/GameEvent';\r\nimport { PoolManager } from '../../Frame/PoolManager';\r\nimport { DamageItem } from '../Battle/DamageItem';\r\nimport { ResourcesUtil } from '../../Frame/ResourcesUtil';\r\nimport { BlastItem } from '../Battle/BlastItem';\r\nimport { HeroHpItem } from '../Battle/HeroHpItem';\r\nimport { MonsterHpItem } from '../Battle/MonsterHpItem';\r\nimport { MonsterBase } from '../Monster/MonsterBase';\r\nimport { Constants } from '../../Constants';\r\nimport { Shadow } from '../Battle/Shadow';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('BattleUIManager')\r\nexport class BattleUIManager extends Component {\r\n    @property(Node)\r\n    battleUIParent: Node = null;\r\n    @property(Node)\r\n    battleUIDownParent: Node = null;\r\n\r\n    private _battlerUIPrefabData: Map<string, Prefab> = new Map();//预制体数据\r\n    private _battleUiNode: Map<string, Node> = new Map();\r\n\r\n    protected onEnable(): void {\r\n        EventListener.on(GameEvent.CREATE_DAMAGER_NUM, this.onCreateDamageNum, this);\r\n        EventListener.on(GameEvent.SHOW_MONSTER_DIE_EFFECT, this.onCreateDieEffect, this);\r\n        EventListener.on(GameEvent.SHOW_HERO_HP, this.onCreateHeroHp, this);\r\n        EventListener.on(GameEvent.SHOW_MONSTER_HP, this.onCreateMonsterHp, this);\r\n        EventListener.on(GameEvent.SHOW_MONSTER_SHADOW, this.onCreateMonsterShadow, this);\r\n    }\r\n\r\n    protected onDisable(): void {\r\n        EventListener.off(GameEvent.CREATE_DAMAGER_NUM, this.onCreateDamageNum, this);\r\n        EventListener.off(GameEvent.SHOW_MONSTER_DIE_EFFECT, this.onCreateDieEffect, this);\r\n        EventListener.off(GameEvent.SHOW_HERO_HP, this.onCreateHeroHp, this);\r\n        EventListener.off(GameEvent.SHOW_MONSTER_HP, this.onCreateMonsterHp, this);\r\n        EventListener.off(GameEvent.SHOW_MONSTER_SHADOW, this.onCreateMonsterShadow, this);\r\n    }\r\n\r\n    /**\r\n     * 伤害数字\r\n     * @param pos 位置\r\n     * @param attack 伤害值\r\n     * @param type 伤害类型\r\n     */\r\n    onCreateDamageNum(pos: Vec3, attack: number, type: number, fontSize?: number) {\r\n        let key = 'damageNum';\r\n        let damageItem: Node = null;\r\n        let damagePrefab: Prefab = null;\r\n        if (this._battlerUIPrefabData.has(key)) {\r\n            damagePrefab = this._battlerUIPrefabData.get(key);\r\n            damageItem = PoolManager.instance.getNodeItem(damagePrefab);\r\n            this.battleUIParent.addChild(damageItem);\r\n            damageItem.setPosition(pos);\r\n            damageItem.getComponent(DamageItem).init(attack, type);\r\n        }\r\n        else {\r\n            //动态加载\r\n            let path = Constants.battlePath + key;\r\n            ResourcesUtil.getPrefab(path).then((damagePrefab: Prefab) => {\r\n                this._battlerUIPrefabData.set(key, damagePrefab);\r\n                damageItem = PoolManager.instance.getNodeItem(damagePrefab);\r\n                this.battleUIParent.addChild(damageItem);\r\n                damageItem.setPosition(pos);\r\n                damageItem.getComponent(DamageItem).init(attack, type);\r\n            })\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 怪物死亡特效\r\n     * @param pos \r\n     */\r\n    onCreateDieEffect(pos: Vec3) {\r\n        let key = 'blastItem';\r\n        let blastItem: Node = null;\r\n        let blastPrefab: Prefab = null;\r\n        let parent = this.battleUIDownParent.getChildByName('Die');\r\n        if (this._battlerUIPrefabData.has(key)) {\r\n            blastPrefab = this._battlerUIPrefabData.get(key);\r\n            blastItem = PoolManager.instance.getNodeItem(blastPrefab);\r\n            parent.addChild(blastItem);\r\n            blastItem.setPosition(pos);\r\n            blastItem.getComponent(BlastItem).init();\r\n        }\r\n        else {\r\n            //动态加载\r\n            let path = Constants.battlePath + key;\r\n            ResourcesUtil.getPrefab(path).then((damagePrefab: Prefab) => {\r\n                this._battlerUIPrefabData.set(key, damagePrefab);\r\n                blastItem = PoolManager.instance.getNodeItem(damagePrefab);\r\n                parent.addChild(blastItem);\r\n                blastItem.setPosition(pos);\r\n                blastItem.getComponent(BlastItem).init();\r\n            })\r\n        }\r\n    }\r\n\r\n    /* 创建英雄血条 */\r\n    onCreateHeroHp(pos: Vec3) {\r\n        let key = 'heroHpItem';\r\n        let heroHpItem: Node = null;\r\n        let heroHpPrefab: Prefab = null;\r\n        let parent = this.battleUIParent;\r\n        let newPos = new Vec3(pos.x, pos.y - 30, 0);\r\n        if (this._battlerUIPrefabData.has(key)) {\r\n            heroHpPrefab = this._battlerUIPrefabData.get(key);\r\n            heroHpItem = PoolManager.instance.getNodeItem(heroHpPrefab);\r\n            parent.addChild(heroHpItem);\r\n            heroHpItem.setPosition(newPos);\r\n            heroHpItem.getComponent(HeroHpItem).init();\r\n        }\r\n        else {\r\n            //动态加载\r\n            let path = Constants.battlePath + key;\r\n            ResourcesUtil.getPrefab(path).then((heroHpPrefab: Prefab) => {\r\n                this._battlerUIPrefabData.set(key, heroHpPrefab);\r\n                heroHpItem = PoolManager.instance.getNodeItem(heroHpPrefab);\r\n                parent.addChild(heroHpItem);\r\n                heroHpItem.setPosition(newPos);\r\n                heroHpItem.getComponent(HeroHpItem).init();\r\n            })\r\n        }\r\n    }\r\n\r\n    /* 创建怪物血条 */\r\n    onCreateMonsterHp(com: MonsterBase) {\r\n        let key = 'monsterHpItem';\r\n        let monsterHpItem: Node = null;\r\n        let monsterHpPrefab: Prefab = null;\r\n        let parent = this.battleUIParent;\r\n        if (this._battlerUIPrefabData.has(key)) {\r\n            monsterHpPrefab = this._battlerUIPrefabData.get(key);\r\n            monsterHpItem = PoolManager.instance.getNodeItem(monsterHpPrefab);\r\n            parent.addChild(monsterHpItem);\r\n            monsterHpItem.getComponent(MonsterHpItem).init(com);\r\n            com.monsterHpItem = monsterHpItem.getComponent(MonsterHpItem);\r\n        }\r\n        else {\r\n            //动态加载\r\n            let path = Constants.battlePath + key;\r\n            ResourcesUtil.getPrefab(path).then((monsterHpPrefab: Prefab) => {\r\n                this._battlerUIPrefabData.set(key, monsterHpPrefab);\r\n                monsterHpItem = PoolManager.instance.getNodeItem(monsterHpPrefab);\r\n                parent.addChild(monsterHpItem);\r\n                monsterHpItem.getComponent(MonsterHpItem).init(com);\r\n                com.monsterHpItem = monsterHpItem.getComponent(MonsterHpItem);\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    /* 创建怪物阴影 */\r\n    onCreateMonsterShadow(com: MonsterBase) {\r\n        let key = 'shadown';\r\n        let monsterShadownItem: Node = null;\r\n        let monsterShadownPrefab: Prefab = null;\r\n        let parent = this.battleUIDownParent.getChildByName('Shadow');\r\n        if (this._battlerUIPrefabData.has(key)) {\r\n            monsterShadownPrefab = this._battlerUIPrefabData.get(key);\r\n            monsterShadownItem = PoolManager.instance.getNodeItem(monsterShadownPrefab);\r\n            parent.addChild(monsterShadownItem);\r\n            monsterShadownItem.getComponent(Shadow).init(com);\r\n            com.monsterShadow = monsterShadownItem.getComponent(Shadow);\r\n        }\r\n        else {\r\n            //动态加载\r\n            let path = Constants.battlePath + key;\r\n            ResourcesUtil.getPrefab(path).then((monsterShadownPrefab: Prefab) => {\r\n                this._battlerUIPrefabData.set(key, monsterShadownPrefab);\r\n                monsterShadownItem = PoolManager.instance.getNodeItem(monsterShadownPrefab);\r\n                parent.addChild(monsterShadownItem);\r\n                monsterShadownItem.getComponent(Shadow).init(com);\r\n                com.monsterShadow = monsterShadownItem.getComponent(Shadow);\r\n            })\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this._battlerUIPrefabData.clear();\r\n        this._battleUiNode.clear();\r\n        this.battleUIParent.removeAllChildren();\r\n        this.battleUIDownParent.getChildByName('Die').removeAllChildren();\r\n        this.battleUIDownParent.getChildByName('Shadow').removeAllChildren();\r\n    }\r\n}\r\n\r\n\r\n\r\n"]}
{"version":3,"sources":["file:///D:/CODE/cocos_workspace/%E8%83%8C%E5%8C%85%E8%8B%B1%E9%9B%84/assets/Scripts/Game/Mgr/GridMapManager.ts"],"names":["GridBgObj","_decorator","Component","Node","UITransform","Layout","Sprite","Vec3","v3","UIOpacity","v2","Rect","Constants","EventListener","ResourcesUtil","Util","GridData","GridObj","GameEvent","GridBgItem","WeaponItem","ccclass","property","GridMapManager","_gridRes","_padding","startPoint","_isTouch","_offfSet","_startPos","_placeStatus","_temPos","_temPoint","_temAddPoint","_mainAreaKey","_addPlaceAreaData","Map","init","initGridRes","initStatPoint","max_gridLenArr","instance","bagCfg","max_gridLen","split","private_gridLenArr","private_gridLen","startRow","Math","floor","Number","startCol","gridObj","row","col","initAllGridRes","space","size","getMaxGridMapSize","gridWidth","allGridList","getComponent","setContentSize","spacingX","spacingY","bg","width","height","paddingTop","paddingBottom","paddingLeft","paddingRight","updateLayout","setPosition","removeWeaponList","i","length","res","sprite","bgs","path","gridPath","geSpriteFrame","then","data","spriteFrame","pos","resNodePos","equals","ZERO","getGridMapSize","rowColArr","gridList","weaponList","preWeaponList","offerY","offerX","padding","setNodeOpacity","value","opacity","children","element","setMainPlaceAreaKey","startGridObj","gripObjArr","getGridMapObjArr","items","index","subGridObj","griddata","getGridMapData","newGridObj","push","newIndex","getGridBgIndexByTiled","gridBgItem","placeAreaKey","gridValue","gridBgObj","item","set","setAddPlaceAreaKey","weaponBgItem","getPointGridObjArr","weaponCfg","weaponKey","node","delPlaceAreaKey","key","getConnectStatus","isConnect","row_col","checkAddAreaGridData","forEach","upObj","downObj","leftObj","rightObj","destroy","rebuildGridData","emit","ADD_REMOVE_WEAPON_LIST","delete","gridObjArr","concat","rowMinMax","colMinMax","sort","x","y","newdata","rowData","j","setRebuildGridMapData","INIT_BUILD_GRID_LIST","INIT_BUILD_WEAPON_POS","debugAllList","a","debugAllListValue","debugAllListGridObj","onPlaceGridStart","active","initAllGridListPlaceValue","gridEditMode","parent","preBg","SHOW_HIDE_PLACE_LIST","getGridPosByTiled","wpos","convertToWorldSpaceAR","newPos","convertToNodeSpaceAR","gridHeight","onPlaceGridMove","initAllGridListTips","firstGridObj","tieldPos","point","checkPos","all_row_col","rect","contains","placeArr","setTipsGreen","includes","startPos","points","Points","n","m","gridObj1","endGridObj","newEndObj","pos1","wpos1","endPos","centePos","clone","onPlaceGridEnd","onPlaceGridFinish","getFirstGridObj","gridMapData","gripObj","gridBg","setTipsDefault","checkAllGridListByPos","setGridMoveTips","onTouchStart","touchPos","gridData","touched","gridPos","gridWpos","getPosition","onTouchMove","onTouchEnd","onTouchCancle","onClearAreaData","clear","onEnable","on","PLACE_GRID_START","PLACE_GRID_MOVE","PLACE_GRID_END","GAME_TOUCH_START","GAME_TOUCH_MOVE","GAME_TOUCH_END","GAME_TOUCH_CANCLE","CLEAR_AREA_DATA","PLACE_GRID_FINISH","onDisable","off"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, UITransform, Layout, Sprite, Vec3, Size, v3, SpriteFrame, UIOpacity, Vec2, v2, Rect, tween } from 'cc';\r\nimport { Constants } from '../../Constants';\r\nimport { EventListener } from '../../Frame/EventListener';\r\nimport { ResourcesUtil } from '../../Frame/ResourcesUtil';\r\nimport { Util } from '../../Frame/Util';\r\nimport { WeaponCfg } from '../../Model/WeaponModel';\r\nimport { GridData, GridObj } from '../Data/GridData';\r\nimport { GameEvent } from '../Event/GameEvent';\r\nimport { GridBgItem } from '../Grid/GridBgItem';\r\nimport { WeaponBgItem } from '../Weapon/WeaponBgItem';\r\nimport { WeaponItem } from '../Weapon/WeaponItem';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('GridMapManager')\r\nexport class GridMapManager extends Component {\r\n    @property(Node)\r\n    bgs: Array<Node> = [];\r\n    @property(Node)\r\n    bg: Node = null;\r\n    @property(Node)\r\n    gridList: Node = null;  //拥有格子\r\n    @property(Node)\r\n    allGridList: Node = null;  //所有格子列表\r\n    @property(Node)\r\n    weaponList: Node = null;\r\n    @property(Node)\r\n    removeWeaponList: Node = null;\r\n    @property(Node)\r\n    preWeaponList: Node = null;\r\n    @property(Node)\r\n    preBg: Node = null;\r\n\r\n    private _gridRes: Array<string> = ['bag1', 'bag1', 'bag3', 'bag5', 'bag5', 'bag6', 'bag6', 'bag7', 'bag7', 'bag8', 'bag8', 'bag9', 'bag']; //背包背景图\r\n    private _padding: number = 90;//周围内边距距离\r\n\r\n    private startPoint: GridObj = null; //拥有格子gridList \r\n    private _isTouch: boolean = false;//是否被点击\r\n    private _offfSet: Vec3 = new Vec3(0, 0, 0);//移动偏移 \r\n    private _startPos: Vec3 = new Vec3(0, 0, 0);//weaponList初始位置\r\n    private _placeStatus: boolean = false; //是否正确放置了\r\n    private _temPos: Vec3 = new Vec3(0, 0, 0);\r\n    private _temPoint: GridObj = null;\r\n    private _temAddPoint: GridObj = null; //新增格子\r\n    private _mainAreaKey: string = '1';//原区域key \r\n\r\n    private _addPlaceAreaData: Map<string, GridBgObj> = new Map();//新增放置区域数据  key=>placeAreaKey\r\n\r\n    init() {\r\n        this.initGridRes();\r\n        this.initStatPoint();\r\n    }\r\n\r\n    /* 初始拥有格子在背景格子中的位置 */\r\n    initStatPoint() {\r\n        let max_gridLenArr = GridData.instance.bagCfg.max_gridLen.split('_');\r\n        let private_gridLenArr = GridData.instance.bagCfg.private_gridLen.split('_');\r\n        let startRow = Math.floor((Number(max_gridLenArr[0]) - Number(private_gridLenArr[0])) / 2);\r\n        let startCol = Math.floor((Number(max_gridLenArr[1]) - Number(private_gridLenArr[1])) / 2);\r\n        let gridObj = new GridObj();\r\n        gridObj.row = startRow;\r\n        gridObj.col = startCol;\r\n        this.startPoint = gridObj;\r\n    }\r\n\r\n    /* 所有格子适配 */\r\n    initAllGridRes() {\r\n        let space = GridData.instance.space;\r\n        let size = GridData.instance.getMaxGridMapSize();\r\n        let gridWidth = GridData.instance.gridWidth;\r\n        this.allGridList.getComponent(UITransform).setContentSize(size);\r\n        this.allGridList.getComponent(Layout).spacingX = space;\r\n        this.allGridList.getComponent(Layout).spacingY = space;\r\n        this.bg.getComponent(UITransform).setContentSize(size.width + this._padding, size.height + this._padding);\r\n        this.bg.getComponent(Layout).paddingTop = this._padding / 2;\r\n        this.bg.getComponent(Layout).paddingBottom = this._padding / 2;\r\n        this.bg.getComponent(Layout).paddingLeft = this._padding / 2;\r\n        this.bg.getComponent(Layout).paddingRight = this._padding / 2;\r\n        this.allGridList.getComponent(Layout).updateLayout(true);\r\n        this.bg.getComponent(Layout).updateLayout(true);\r\n        this.allGridList.setPosition(-size.width / 2, size.height / 2);\r\n        this.removeWeaponList.setPosition(0, -size.height / 2 - 100);\r\n        for (let i = 0; i < this._gridRes.length; i++) {\r\n            const res = this._gridRes[i];\r\n            let sprite = this.bgs[i].getComponent(Sprite);\r\n            let path = Constants.gridPath + res + '/spriteFrame';\r\n            ResourcesUtil.geSpriteFrame(path).then((data: SpriteFrame) => {\r\n                sprite.spriteFrame = data;\r\n                let pos = this.resNodePos(i, size, this._padding, gridWidth);\r\n                if (!pos.equals(Vec3.ZERO)) {\r\n                    this.bgs[i].setPosition(pos);\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    initGridRes() {\r\n        let space = GridData.instance.space;\r\n        let size = GridData.instance.getGridMapSize();\r\n        let gridWidth = GridData.instance.gridWidth;\r\n        let bagCfg = GridData.instance.bagCfg;\r\n        let rowColArr = bagCfg.private_gridLen.split('_');\r\n        this.gridList.getComponent(UITransform).setContentSize(size);\r\n        this.gridList.getComponent(Layout).spacingX = space;\r\n        this.gridList.getComponent(Layout).spacingY = space;\r\n        this.bg.getComponent(UITransform).setContentSize(size.width + this._padding, size.height + this._padding);\r\n        this.bg.getComponent(Layout).paddingTop = this._padding / 2;\r\n        this.bg.getComponent(Layout).paddingBottom = this._padding / 2;\r\n        this.bg.getComponent(Layout).paddingLeft = this._padding / 2;\r\n        this.bg.getComponent(Layout).paddingRight = this._padding / 2;\r\n        this.gridList.getComponent(Layout).updateLayout(true);\r\n        this.bg.getComponent(Layout).updateLayout(true);\r\n\r\n        // 固定位置计算方法\r\n        this.gridList.setPosition(-size.width / 2, size.height / 2);\r\n        this.weaponList.setPosition(-size.width / 2, size.height / 2)\r\n        this.preWeaponList.setPosition(-size.width / 2, size.height / 2);\r\n        // 改为直接使用Map对象的Position  \r\n        //let mapPosition = this.getMapPosition();  \r\n        //this.gridList.setPosition(mapPosition.x, mapPosition.y);\r\n        //this.weaponList.setPosition(mapPosition.x, mapPosition.y);\r\n        //this.preWeaponList.setPosition(mapPosition.x, mapPosition.y); \r\n        \r\n        this.weaponList.getComponent(UITransform).setContentSize(size.width, size.height);\r\n        this.preWeaponList.getComponent(UITransform).setContentSize(size.width, size.height);\r\n        let offerY = Number(rowColArr[0]) > 5 ? 100 : 200;\r\n        // this.removeWeaponList.setPosition(0, -size.height / 2 - offerY);\r\n        let offerX = size.width / 2 + 800; // 可以根据需要调整距离  \r\n        this.removeWeaponList.setPosition(-offerX, offerY); \r\n        for (let i = 0; i < this._gridRes.length; i++) {\r\n            const res = this._gridRes[i];\r\n            let sprite = this.bgs[i].getComponent(Sprite);\r\n            let path = Constants.gridPath + res + '/spriteFrame';\r\n            ResourcesUtil.geSpriteFrame(path).then((data: SpriteFrame) => {\r\n                sprite.spriteFrame = data;\r\n                let pos = this.resNodePos(i, size, this._padding, gridWidth);\r\n                if (!pos.equals(Vec3.ZERO)) {\r\n                    this.bgs[i].setPosition(pos);\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    resNodePos(i: number, size: Size, padding: number, gridWidth: number) {\r\n        let pos = Vec3.ZERO;\r\n        switch (i) {\r\n            case 0:\r\n                pos = v3(-(size.width - 100) / 2, -size.height / 2 - 10, 0);\r\n                break;\r\n            case 1:\r\n                pos = v3((size.width - 100) / 2, -size.height / 2 - 10, 0);\r\n                break;\r\n            case 2:\r\n                pos = v3(0, size.height / 2 + padding / 2 - padding / 2 / 3, 0);\r\n                break;\r\n            case 3:\r\n                pos = v3(size.width / 2 + padding / 2 / 3, size.height / 2, 0);\r\n                break;\r\n            case 4:\r\n                pos = v3(-(size.width / 2 + padding / 2 / 3), size.height / 2, 0);\r\n                break;\r\n            case 5:\r\n                pos = v3(-(gridWidth / 2 + gridWidth) + 10, size.height / 2 + padding / 2, 0);\r\n                break;\r\n            case 6:\r\n                pos = v3(gridWidth / 2 + gridWidth - 10, size.height / 2 + padding / 2, 0);\r\n                break;\r\n            case 7:\r\n                pos = v3(-size.width / 2 - padding / 4, -size.height / 2 + gridWidth / 2 + padding / 4, 0);\r\n                break;\r\n            case 8:\r\n                pos = v3(size.width / 2 + padding / 4, -size.height / 2 + gridWidth / 2 + padding / 4, 0);\r\n                break;\r\n            case 9:\r\n                pos = v3(-(size.width / 2 + padding / 2 / 3), size.height / 2 - 30, 0);\r\n                break;\r\n            case 10:\r\n                pos = v3((size.width / 2 + padding / 2 / 3), size.height / 2 - 30, 0);\r\n                break;\r\n            case 11:\r\n                pos = v3(0, size.height / 2 - padding / 2 + 20, 0);\r\n                this.bgs[i].getComponent(UITransform).width = size.width;\r\n                break;\r\n        }\r\n\r\n        return pos;\r\n    }\r\n\r\n\r\n    /* 设置节点透明度 */\r\n    setNodeOpacity(value: number) {\r\n        this.weaponList.getComponent(UIOpacity).opacity = value;\r\n        for (let i = 0; i < this.removeWeaponList.children.length; i++) {\r\n            const element = this.removeWeaponList.children[i];\r\n            if (element.getComponent(WeaponItem)) {\r\n                element.getComponent(UIOpacity).opacity = value;\r\n            }\r\n        }\r\n    }\r\n\r\n    /* 设置区域占位key */\r\n    setMainPlaceAreaKey(startGridObj: GridObj) {\r\n        let gripObjArr = this.getGridMapObjArr();\r\n        let items = this.allGridList.children;\r\n        let data: Array<GridObj> = [];\r\n        for (let index = 0; index < gripObjArr.length; index++) {\r\n            const subGridObj = gripObjArr[index];\r\n            let griddata = GridData.instance.getGridMapData();\r\n            let value = griddata[subGridObj.row][subGridObj.col]\r\n            let row = startGridObj.row + subGridObj.row;\r\n            let col = startGridObj.col + subGridObj.col;\r\n            let newGridObj = new GridObj();\r\n            newGridObj.row = row;\r\n            newGridObj.col = col;\r\n            data.push(newGridObj);\r\n            let newIndex = GridData.instance.getGridBgIndexByTiled(row, col);\r\n            let gridBgItem = items[newIndex];\r\n            gridBgItem.getComponent(GridBgItem).placeAreaKey = this._mainAreaKey;\r\n            gridBgItem.getComponent(GridBgItem).gridValue = value;\r\n        }\r\n        let gridBgObj = new GridBgObj();\r\n        gridBgObj.item = this.weaponList;\r\n        gridBgObj.data = data;\r\n        this._addPlaceAreaData.set(this._mainAreaKey, gridBgObj);\r\n    }\r\n\r\n    /* 设置新增格子区域的占位key */\r\n    setAddPlaceAreaKey(weaponBgItem: WeaponBgItem) {\r\n        let startGridObj = this._temAddPoint;\r\n        let gripObjArr = this.getPointGridObjArr(weaponBgItem.weaponCfg);\r\n        let items = this.allGridList.children;\r\n        let data: Array<GridObj> = [];\r\n        for (let index = 0; index < gripObjArr.length; index++) {\r\n            const subGridObj = gripObjArr[index];\r\n            let row = startGridObj.row + subGridObj.row;\r\n            let col = startGridObj.col + subGridObj.col;\r\n            let newGridObj = new GridObj();\r\n            newGridObj.row = row;\r\n            newGridObj.col = col;\r\n            data.push(newGridObj);\r\n            let newIndex = GridData.instance.getGridBgIndexByTiled(row, col);\r\n            let gridBgItem = items[newIndex];\r\n            gridBgItem.getComponent(GridBgItem).placeAreaKey = weaponBgItem.weaponKey;\r\n        }\r\n        let gridBgObj = new GridBgObj();\r\n        gridBgObj.item = weaponBgItem.node;\r\n        gridBgObj.data = data;\r\n        this._addPlaceAreaData.set(weaponBgItem.weaponKey, gridBgObj);\r\n\r\n    }\r\n\r\n    /* 清除区域key 和区域值 */\r\n    delPlaceAreaKey(key: string) {\r\n        let items = this.allGridList.children;\r\n        for (let index = 0; index < items.length; index++) {\r\n            const gridBgItem = items[index];\r\n            gridBgItem.getComponent(GridBgItem).delPlaceAreaKey(key);\r\n        }\r\n    }\r\n\r\n    getConnectStatus(gridObj: GridObj) {\r\n        let isConnect = false;\r\n        let bagCfg = GridData.instance.bagCfg;\r\n        let row_col = bagCfg.max_gridLen.split('_');\r\n\r\n        if (gridObj.row >= 0 && gridObj.col >= 0 && gridObj.row <= Number(row_col[0]) - 1 && gridObj.col <= Number(row_col[1]) - 1) {\r\n            let index = GridData.instance.getGridBgIndexByTiled(gridObj.row, gridObj.col);\r\n            let item = this.allGridList.children[index];\r\n            if (item.getComponent(GridBgItem).placeAreaKey == this._mainAreaKey) {\r\n                isConnect = true;\r\n            }\r\n        }\r\n        return isConnect;\r\n    }\r\n\r\n    /* 检测新增区域数据是否相连 */\r\n    checkAddAreaGridData() {\r\n        this._addPlaceAreaData.forEach((gridBgObj, key) => {\r\n            if (key != this._mainAreaKey) {\r\n                let item = gridBgObj.item;\r\n                let data = gridBgObj.data;\r\n                let isConnect = false;\r\n                for (let i = 0; i < data.length; i++) {\r\n                    const gridObj = data[i];\r\n                    //上\r\n                    let upObj = new GridObj();\r\n                    upObj.row = gridObj.row - 1;\r\n                    upObj.col = gridObj.col;\r\n                    if (!isConnect) {\r\n                        isConnect = this.getConnectStatus(upObj);\r\n                    }\r\n                    //下\r\n                    let downObj = new GridObj();\r\n                    downObj.row = gridObj.row + 1;\r\n                    downObj.col = gridObj.col;\r\n                    if (!isConnect) {\r\n                        isConnect = this.getConnectStatus(downObj);\r\n                    }\r\n                    //左\r\n                    let leftObj = new GridObj();\r\n                    leftObj.row = gridObj.row;\r\n                    leftObj.col = gridObj.col - 1;\r\n                    if (!isConnect) {\r\n                        isConnect = this.getConnectStatus(leftObj);\r\n                    }\r\n                    //右\r\n                    let rightObj = new GridObj();\r\n                    rightObj.row = gridObj.row;\r\n                    rightObj.col = gridObj.col + 1;\r\n                    if (!isConnect) {\r\n                        isConnect = this.getConnectStatus(rightObj);\r\n                    }\r\n                    if (isConnect) {\r\n                        break;\r\n                    }\r\n                }\r\n                if (isConnect) {\r\n                    item.destroy();\r\n                    this.rebuildGridData();\r\n                }\r\n                else {\r\n                    EventListener.emit(GameEvent.ADD_REMOVE_WEAPON_LIST, item);\r\n                    this._addPlaceAreaData.delete(key);\r\n                    this.delPlaceAreaKey(key);\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    /* 重组拥有格子数据 */\r\n    rebuildGridData() {\r\n        let data: Array<GridObj> = [];\r\n        this._addPlaceAreaData.forEach((gridBgObj, key) => {\r\n            let gridObjArr = gridBgObj.data;\r\n            data = data.concat(gridObjArr);\r\n        })\r\n        let rowMinMax = [];\r\n        let colMinMax = [];\r\n        data.sort((x, y) => { return x.row - y.row });\r\n        rowMinMax.push(data[0].row);\r\n        rowMinMax.push(data[data.length - 1].row);\r\n        data.sort((x, y) => { return x.col - y.col });\r\n        colMinMax.push(data[0].col);\r\n        colMinMax.push(data[data.length - 1].col);\r\n        //重组新格子数据\r\n        let newdata: Array<Array<string>> = [];\r\n        let items = this.allGridList.children;\r\n        for (let i = rowMinMax[0]; i <= rowMinMax[1]; i++) {\r\n            let rowData = [];\r\n            for (let j = colMinMax[0]; j <= colMinMax[1]; j++) {\r\n                let index = GridData.instance.getGridBgIndexByTiled(i, j);\r\n                let gridBgItem = items[index];\r\n                let value = gridBgItem.getComponent(GridBgItem).placeAreaKey ? gridBgItem.getComponent(GridBgItem).gridValue : '';\r\n                rowData.push(value);\r\n            }\r\n            newdata.push(rowData);\r\n        }\r\n        GridData.instance.setRebuildGridMapData(newdata);\r\n        EventListener.emit(GameEvent.INIT_BUILD_GRID_LIST);\r\n        EventListener.emit(GameEvent.INIT_BUILD_WEAPON_POS);\r\n        this.startPoint.row = rowMinMax[0];\r\n        this.startPoint.col = colMinMax[0];\r\n    }\r\n\r\n    /* 调试查看数据 */\r\n    debugAllList() {\r\n        let items = this.allGridList.children;\r\n        let data: Array<Array<string>> = [];\r\n        for (let i = 0; i < 7; i++) {\r\n            let a = [];\r\n            for (let j = 0; j < 5; j++) {\r\n                let index = GridData.instance.getGridBgIndexByTiled(i, j);\r\n                let value = items[index].getComponent(GridBgItem).placeAreaKey;\r\n                a.push(value)\r\n            }\r\n            data.push(a);\r\n        }\r\n    }\r\n\r\n    /* 调试查看数据 */\r\n    debugAllListValue() {\r\n        let items = this.allGridList.children;\r\n        let data: Array<Array<string>> = [];\r\n        for (let i = 0; i < 7; i++) {\r\n            let a = [];\r\n            for (let j = 0; j < 5; j++) {\r\n                let index = GridData.instance.getGridBgIndexByTiled(i, j);\r\n                let value = items[index].getComponent(GridBgItem).gridValue;\r\n                a.push(value)\r\n            }\r\n            data.push(a);\r\n        }\r\n    }\r\n\r\n\r\n    /* 调试查看数据 */\r\n    debugAllListGridObj() {\r\n        let items = this.allGridList.children;\r\n        let data: Array<Array<string>> = [];\r\n        for (let i = 0; i < 7; i++) {\r\n            let a = [];\r\n            for (let j = 0; j < 5; j++) {\r\n                let index = GridData.instance.getGridBgIndexByTiled(i, j);\r\n                let gridObj = items[index].getComponent(GridBgItem).gridObj;\r\n                a.push(gridObj)\r\n            }\r\n            data.push(a);\r\n        }\r\n    }\r\n\r\n    /* 放置新增格子开始 */\r\n    onPlaceGridStart(weaponBgItem: WeaponBgItem) {\r\n        if (!this.allGridList.active) {\r\n            this.initAllGridListPlaceValue();\r\n            GridData.instance.gridEditMode = true;\r\n            this.gridList.parent = this.preBg;\r\n            weaponBgItem.node.parent = this.node;\r\n            this.allGridList.active = true;\r\n            //设置透明度\r\n            this.setNodeOpacity(100);\r\n            this.initAllGridRes();\r\n            this.node.parent.getComponent(UITransform).height = this.allGridList.getComponent(UITransform).height;\r\n            EventListener.emit(GameEvent.SHOW_HIDE_PLACE_LIST, true);\r\n            //设置拥有格子列表位置\r\n            let pos = GridData.instance.getGridPosByTiled(this.startPoint);\r\n            let wpos = this.allGridList.getComponent(UITransform).convertToWorldSpaceAR(pos);\r\n            let newPos = this.node.parent.getComponent(UITransform).convertToNodeSpaceAR(wpos);\r\n            let gridWidth = GridData.instance.gridWidth;\r\n            let gridHeight = GridData.instance.gridHeight;\r\n            this.gridList.setPosition(newPos.x - gridWidth / 2, newPos.y + gridHeight / 2);\r\n            this.weaponList.setPosition(newPos.x - gridWidth / 2, newPos.y + gridHeight / 2);\r\n            this.setMainPlaceAreaKey(this.startPoint);\r\n        }\r\n        this.delPlaceAreaKey(weaponBgItem.weaponKey);\r\n    }\r\n\r\n    /* 放置新增格子移动 */\r\n    onPlaceGridMove(weaponBgItem: WeaponBgItem) {\r\n        weaponBgItem.node.parent = this.node;\r\n        this.initAllGridListTips();\r\n        let firstGridObj = new GridObj();\r\n        firstGridObj.row = 0;\r\n        firstGridObj.col = 0;\r\n        let tieldPos = GridData.instance.getGridPosByTiled(firstGridObj);\r\n        let wpos = weaponBgItem.point.getComponent(UITransform).convertToWorldSpaceAR(tieldPos);\r\n        let checkPos = this.allGridList.getComponent(UITransform).convertToNodeSpaceAR(wpos);\r\n        let items = this.allGridList.children;\r\n        let all_row_col = GridData.instance.bagCfg.max_gridLen.split('_');\r\n        this._placeStatus = false;\r\n        for (let i = 0; i < items.length; i++) {\r\n            const element = items[i];\r\n            let gridObj = element.getComponent(GridBgItem).gridObj;\r\n            let pos = GridData.instance.getGridPosByTiled(gridObj);\r\n            let width = GridData.instance.gridWidth;\r\n            let height = GridData.instance.gridHeight;\r\n            let rect = new Rect(pos.x - width / 2, pos.y - height / 2, width, height);\r\n            if (rect.contains(v2(checkPos.x, checkPos.y))) {\r\n                let gripObjArr = this.getPointGridObjArr(weaponBgItem.weaponCfg);\r\n                let placeArr = [];//0 为未放置\r\n                for (let index = 0; index < gripObjArr.length; index++) {\r\n                    const subGridObj = gripObjArr[index];\r\n                    let row = gridObj.row + subGridObj.row;\r\n                    let col = gridObj.col + subGridObj.col;\r\n                    if (row < Number(all_row_col[0]) && col < Number(all_row_col[1])) {\r\n                        let newIndex = GridData.instance.getGridBgIndexByTiled(row, col);\r\n                        let gridBgItem = items[newIndex];\r\n                        //检测格子占用\r\n                        if (!gridBgItem.getComponent(GridBgItem).placeAreaKey) {\r\n                            gridBgItem.getComponent(GridBgItem).setTipsGreen();\r\n                            placeArr.push(1);\r\n                        }\r\n                        else {\r\n                            placeArr.push(0);\r\n                        }\r\n                    }\r\n                    else {\r\n                        placeArr.push(0);\r\n                    }\r\n                }\r\n                if (placeArr.includes(0)) {\r\n                    this._placeStatus = false;\r\n\r\n                }\r\n                else {\r\n                    this._placeStatus = true;\r\n                    //设置新坐标\r\n                    let wpos = this.allGridList.getComponent(UITransform).convertToWorldSpaceAR(pos);\r\n                    let startPos = this.node.parent.getComponent(UITransform).convertToNodeSpaceAR(wpos);\r\n\r\n                    let points = weaponBgItem.weaponCfg.Points;\r\n                    let data: Array<GridObj> = [];\r\n                    for (let n = 0; n < points.length; n++) {\r\n                        const element = points[n];\r\n                        for (let m = 0; m < element.length; m++) {\r\n                            let gridObj1 = new GridObj();\r\n                            gridObj1.row = n;\r\n                            gridObj1.col = m;\r\n                            data.push(gridObj1);\r\n                        }\r\n                    }\r\n                    const endGridObj = data[data.length - 1];\r\n                    let newEndObj = new GridObj();\r\n                    newEndObj.row = gridObj.row + endGridObj.row;\r\n                    newEndObj.col = gridObj.col + endGridObj.col;\r\n                    let pos1 = GridData.instance.getGridPosByTiled(newEndObj);\r\n                    let wpos1 = this.allGridList.getComponent(UITransform).convertToWorldSpaceAR(pos1);\r\n                    let endPos = this.node.parent.getComponent(UITransform).convertToNodeSpaceAR(wpos1);\r\n\r\n                    let centePos = new Vec3(0, 0, 0);\r\n                    centePos.x = (startPos.x + endPos.x) / 2;\r\n                    centePos.y = (startPos.y + endPos.y) / 2;\r\n                    this._temPos = centePos;\r\n                    this._temAddPoint = Util.clone(gridObj);\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    /* 放置新增格子完成 */\r\n    onPlaceGridEnd(weaponBgItem: WeaponBgItem) {\r\n        let item = weaponBgItem.node;\r\n        this.initAllGridListTips();\r\n        if (this._placeStatus) {\r\n            item.setPosition(this._temPos);\r\n            this.setAddPlaceAreaKey(weaponBgItem);\r\n        }\r\n        else {\r\n            EventListener.emit(GameEvent.ADD_REMOVE_WEAPON_LIST, item);\r\n            this._addPlaceAreaData.delete(weaponBgItem.weaponKey);\r\n        }\r\n        this._placeStatus = false;\r\n    }\r\n\r\n\r\n    /* 放置格子确定 */\r\n    onPlaceGridFinish() {\r\n        if (this.allGridList.active) {\r\n            this.checkAddAreaGridData();\r\n            GridData.instance.gridEditMode = false;\r\n            this.allGridList.active = false;\r\n            this.gridList.parent = this.bg;\r\n            //设置透明度\r\n            this.setNodeOpacity(255);\r\n            this.initGridRes();\r\n            EventListener.emit(GameEvent.SHOW_HIDE_PLACE_LIST, false);\r\n\r\n        }\r\n    }\r\n\r\n    /* 获取拥有格子里的第一个有格子的数据 */\r\n    getFirstGridObj() {\r\n        let gridMapData = GridData.instance.getGridMapData();\r\n        let gripObjArr: Array<GridObj> = [];\r\n        let gripObj = null;\r\n        for (let i = 0; i < gridMapData.length; i++) {\r\n            const element = gridMapData[i];\r\n            for (let j = 0; j < element.length; j++) {\r\n                const value = element[j];\r\n                if (value) {\r\n                    gripObj = new GridObj();\r\n                    gripObj.row = i;\r\n                    gripObj.col = j;\r\n                    break;\r\n                }\r\n            }\r\n            if (gripObj) {\r\n                break;\r\n            }\r\n        }\r\n        return gripObj;\r\n    }\r\n\r\n    /* 获取拥有格子的位置数据 */\r\n    getGridMapObjArr() {\r\n        let gridMapData = GridData.instance.getGridMapData();\r\n        let gripObjArr: Array<GridObj> = [];\r\n        for (let i = 0; i < gridMapData.length; i++) {\r\n            const element = gridMapData[i];\r\n            for (let j = 0; j < element.length; j++) {\r\n                const value = element[j];\r\n                if (value) {\r\n                    let gripObj = new GridObj();\r\n                    gripObj.row = i;\r\n                    gripObj.col = j;\r\n                    gripObjArr.push(gripObj);\r\n                }\r\n            }\r\n        }\r\n        return gripObjArr;\r\n    }\r\n\r\n    getPointGridObjArr(weaponCfg: WeaponCfg) {\r\n        let point = weaponCfg.Points;\r\n        let gripObjArr: Array<GridObj> = [];\r\n        for (let i = 0; i < point.length; i++) {\r\n            const element = point[i];\r\n            for (let j = 0; j < element.length; j++) {\r\n                const value = element[j];\r\n                if (value) {\r\n                    let gripObj = new GridObj();\r\n                    gripObj.row = i;\r\n                    gripObj.col = j;\r\n                    gripObjArr.push(gripObj);\r\n                }\r\n            }\r\n        }\r\n        return gripObjArr;\r\n    }\r\n\r\n    /* 初始格子颜色 */\r\n    initAllGridListTips() {\r\n        let items = this.allGridList.children;\r\n        for (let index = 0; index < items.length; index++) {\r\n            const gridBg = items[index];\r\n            gridBg.getComponent(GridBgItem).setTipsDefault();\r\n        }\r\n    }\r\n\r\n    /* 初始格子占有 */\r\n    initAllGridListPlaceValue() {\r\n        let items = this.allGridList.children;\r\n        for (let index = 0; index < items.length; index++) {\r\n            const gridBg = items[index];\r\n            gridBg.getComponent(GridBgItem).placeAreaKey = '';\r\n        }\r\n    }\r\n\r\n    /* 检测坐标是否在格子中 */\r\n    checkAllGridListByPos(checkPos: Vec3) {\r\n        let items = this.allGridList.children;\r\n        let all_row_col = GridData.instance.bagCfg.max_gridLen.split('_');\r\n        this._placeStatus = false;\r\n        for (let i = 0; i < items.length; i++) {\r\n            const element = items[i];\r\n            let gridObj = element.getComponent(GridBgItem).gridObj;\r\n            let pos = GridData.instance.getGridPosByTiled(gridObj);\r\n            let width = GridData.instance.gridWidth;\r\n            let height = GridData.instance.gridHeight;\r\n            let rect = new Rect(pos.x - width / 2, pos.y - height / 2, width, height);\r\n            if (rect.contains(v2(checkPos.x, checkPos.y))) {\r\n                let gripObjArr = this.getGridMapObjArr();\r\n                let placeArr = [];//0 为未放置\r\n                for (let index = 0; index < gripObjArr.length; index++) {\r\n                    const subGridObj = gripObjArr[index];\r\n                    let row = gridObj.row + subGridObj.row;\r\n                    let col = gridObj.col + subGridObj.col;\r\n                    if (row < Number(all_row_col[0]) && col < Number(all_row_col[1])) {\r\n                        let newIndex = GridData.instance.getGridBgIndexByTiled(row, col);\r\n                        let gridBgItem = items[newIndex];\r\n                        //是否格子占用\r\n                        if (!gridBgItem.getComponent(GridBgItem).placeAreaKey) {\r\n                            gridBgItem.getComponent(GridBgItem).setTipsGreen();\r\n                            placeArr.push(1);\r\n                        }\r\n                        else {\r\n                            placeArr.push(0);\r\n                        }\r\n                    }\r\n                    else {\r\n                        placeArr.push(0);\r\n                    }\r\n                }\r\n                if (placeArr.includes(0)) {\r\n                    this._placeStatus = false;\r\n                }\r\n                else {\r\n                    this._placeStatus = true;\r\n                    let wpos = this.allGridList.getComponent(UITransform).convertToWorldSpaceAR(pos);\r\n                    let newPos = this.node.parent.getComponent(UITransform).convertToNodeSpaceAR(wpos);\r\n                    let gridWidth = GridData.instance.gridWidth;\r\n                    let gridHeight = GridData.instance.gridHeight;\r\n                    this._temPos.x = newPos.x - gridWidth / 2;\r\n                    this._temPos.y = newPos.y + gridHeight / 2;\r\n                    this._temPoint = Util.clone(gridObj);\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    /* 设置移动提示 */\r\n    setGridMoveTips() {\r\n        this.initAllGridListTips();\r\n        //检测第一个格子是否在所有格子里中\r\n        let firstGridObj = new GridObj();\r\n        firstGridObj.row = 0;\r\n        firstGridObj.col = 0;\r\n        let tieldPos = GridData.instance.getGridPosByTiled(firstGridObj);\r\n        let wpos = this.gridList.getComponent(UITransform).convertToWorldSpaceAR(tieldPos);\r\n        let pos = this.allGridList.getComponent(UITransform).convertToNodeSpaceAR(wpos);\r\n        this.checkAllGridListByPos(pos);\r\n    }\r\n\r\n    /*放置拥有格子触摸点击 */\r\n    onTouchStart(wpos: Vec2) {\r\n        //是否触摸到拥有格子列表\r\n        let touchPos = this.node.parent.getComponent(UITransform).convertToNodeSpaceAR(new Vec3(wpos.x, wpos.y, 0));\r\n        //坐标在可用格子中时\r\n        let gridData = GridData.instance.getGridMapData();\r\n        let touched = false;\r\n        for (let i = 0; i < gridData.length; i++) {\r\n            const element = gridData[i];\r\n            for (let j = 0; j < element.length; j++) {\r\n                const value = element[j];\r\n                if (value) {\r\n                    let gridObj = new GridObj();\r\n                    gridObj.row = i;\r\n                    gridObj.col = j;\r\n                    let gridPos = GridData.instance.getGridPosByTiled(gridObj);\r\n                    let gridWpos = this.gridList.getComponent(UITransform).convertToWorldSpaceAR(gridPos);\r\n                    let newPos = this.node.parent.getComponent(UITransform).convertToNodeSpaceAR(gridWpos);\r\n                    let gridWidth = GridData.instance.gridWidth;\r\n                    let gridHeight = GridData.instance.gridHeight;\r\n                    let rect = new Rect(newPos.x - gridWidth / 2, newPos.y - gridHeight / 2, gridWidth, gridWidth);\r\n                    if (rect.contains(v2(touchPos.x, touchPos.y))) {\r\n                        touched = true;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            if (touched) {\r\n                break;\r\n            }\r\n        }\r\n        if (GridData.instance.gridEditMode && touched) {\r\n            this._isTouch = true;\r\n            this._offfSet = this.weaponList.getComponent(UITransform).convertToNodeSpaceAR(new Vec3(wpos.x, wpos.y, 0));\r\n            this._startPos = this.weaponList.getPosition();\r\n            this.delPlaceAreaKey(this._mainAreaKey);\r\n        }\r\n    }\r\n\r\n    /* 放置拥有格子移动 */\r\n    onTouchMove(wpos: Vec2) {\r\n        if (this._isTouch) {\r\n            let touchPos = this.node.parent.getComponent(UITransform).convertToNodeSpaceAR(new Vec3(wpos.x, wpos.y, 0));\r\n            let pos = new Vec3(touchPos.x - this._offfSet.x, touchPos.y - this._offfSet.y);\r\n            this.gridList.setPosition(pos);\r\n            this.weaponList.setPosition(pos);\r\n            //设置移动提示\r\n            this.setGridMoveTips();\r\n        }\r\n    }\r\n\r\n    /* 放置拥有格子完成 */\r\n    onTouchEnd(wpos: Vec2) {\r\n        if (this._isTouch) {\r\n            this._isTouch = false;\r\n            //是否放置或还原\r\n            if (this._placeStatus) {\r\n                this._startPos = this._temPos;\r\n                this.startPoint = this._temPoint;\r\n            }\r\n            this.gridList.setPosition(this._startPos);\r\n            this.weaponList.setPosition(this._startPos);\r\n            this._placeStatus = false;\r\n            this.initAllGridListTips();\r\n            this.setMainPlaceAreaKey(this.startPoint);\r\n        }\r\n    }\r\n\r\n    onTouchCancle(wpos: Vec2) {\r\n        if (this._isTouch) {\r\n            this._isTouch = false;\r\n            this._placeStatus = false;\r\n            this.gridList.setPosition(this._startPos);\r\n            this.weaponList.setPosition(this._startPos);\r\n            this.initAllGridListTips();\r\n        }\r\n    }\r\n\r\n    onClearAreaData() {\r\n        this._addPlaceAreaData.clear();\r\n    }\r\n\r\n\r\n    protected onEnable(): void {\r\n        //放置新增格子监听\r\n        EventListener.on(GameEvent.PLACE_GRID_START, this.onPlaceGridStart, this);\r\n        EventListener.on(GameEvent.PLACE_GRID_MOVE, this.onPlaceGridMove, this);\r\n        EventListener.on(GameEvent.PLACE_GRID_END, this.onPlaceGridEnd, this);\r\n\r\n\r\n        //放置拥有格子监听\r\n        EventListener.on(GameEvent.GAME_TOUCH_START, this.onTouchStart, this);\r\n        EventListener.on(GameEvent.GAME_TOUCH_MOVE, this.onTouchMove, this);\r\n        EventListener.on(GameEvent.GAME_TOUCH_END, this.onTouchEnd, this);\r\n        EventListener.on(GameEvent.GAME_TOUCH_CANCLE, this.onTouchEnd, this);\r\n\r\n        EventListener.on(GameEvent.CLEAR_AREA_DATA, this.onClearAreaData, this);\r\n        EventListener.on(GameEvent.PLACE_GRID_FINISH, this.onPlaceGridFinish, this);\r\n\r\n    }\r\n\r\n    protected onDisable(): void {\r\n        EventListener.off(GameEvent.PLACE_GRID_START, this.onPlaceGridStart, this);\r\n        EventListener.off(GameEvent.PLACE_GRID_MOVE, this.onPlaceGridMove, this);\r\n        EventListener.off(GameEvent.PLACE_GRID_END, this.onPlaceGridEnd, this);\r\n\r\n        EventListener.off(GameEvent.GAME_TOUCH_START, this.onTouchStart, this);\r\n        EventListener.off(GameEvent.GAME_TOUCH_MOVE, this.onTouchMove, this);\r\n        EventListener.off(GameEvent.GAME_TOUCH_END, this.onTouchEnd, this);\r\n        EventListener.off(GameEvent.GAME_TOUCH_CANCLE, this.onTouchEnd, this);\r\n\r\n        EventListener.off(GameEvent.CLEAR_AREA_DATA, this.onClearAreaData, this);\r\n        EventListener.off(GameEvent.PLACE_GRID_FINISH, this.onPlaceGridFinish, this);\r\n    }\r\n}\r\n\r\n\r\nexport class GridBgObj {\r\n    data: Array<GridObj>;//位置数据\r\n    item: Node;//区域节点\r\n}\r\n\r\n\r\n"]}
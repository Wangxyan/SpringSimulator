{"version":3,"sources":["file:///D:/CODE/cocos_workspace/%E8%83%8C%E5%8C%85%E8%8B%B1%E9%9B%84/assets/Scripts/Popup/Game/GamePopup.ts"],"names":["_decorator","Component","Node","UITransform","Label","instantiate","tween","v3","ProgressBar","view","Button","Sprite","Constants","EventListener","OpenPopupManager","ResourcesUtil","Util","GridData","MonsterData","SkillUpgradeData","WeaponData","GameEvent","SkillTypeItem","ccclass","property","GamePopup","weaponSkill","_totalGold","_maxExp","_curExp","_level","show","instance","getBattleLevelByLevel","gold","string","scale","adapterScale","buttonList","setScale","expProgerssBar","node","active","progress","onSetWaveInfo","updateLevelInfo","clearSkill","onGameCoin","coinObj","targetPos","getPosition","count","num","wpos","path","battlePath","startPos","parent","getComponent","convertToNodeSpaceAR","getPrefab","then","itemPrefab","i","item","posX","Math","random","x","posY","y","setPosition","to","position","easing","delay","call","destroy","start","wave","MaxWave","onUpdateMonsterProgress","exp","kill","expLevel","setBattleBtnStatus","weaponIdArr","getGridItemDataKeys","battleBtn","children","length","interactable","grayscale","onRerollBtn","emit","WEAPON_REMOVE_REFRESH","onBattleBtn","GAME_BATTLE_START","onPlaceFinishBtn","PLACE_GRID_FINISH","placeList","onShowHidePlaceList","status","onShowHideSkillList","skillTypeList","element","initHeroSkill","visibleSize","getVisibleSize","width","skillTypeItem0","cMaxCount","rMaxCount","space","maxWidth","weaponData","Array","from","getGridItemMapData","values","skillCount","limtCount","floor","startPosX","startPosY","weaponObj","wid","key","id","weaponCfg","getWeaponCfgById","skillId","SkillId","skillKey","skillTypeItem","name","init","push","onPauseBtn","showPausePopup","onEnable","on","WEAPON_CHANGE_COIN","GAME_BATTLE","UPDATE_MONSTER_PROGRESS","SET_BATTLE_BTN_STATUS","INIT_HERO_SKILL","SHOW_HIDE_SKILL_LIST","SHOW_HIDE_PLACE_LIST","onDisable","off","onTapBtn","GAME_TAP_BTN"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, UITransform, Label, instantiate, Prefab, tween, v3, ProgressBar, view, Button, Sprite, Layout } from 'cc';\r\nimport { Constants } from '../../Constants';\r\nimport { Debug } from '../../Frame/Debug';\r\nimport { EventListener } from '../../Frame/EventListener';\r\nimport { OpenPopupManager } from '../../Frame/OpenPopupManager';\r\nimport { PopupManager } from '../../Frame/PopupManager';\r\nimport { ResourcesUtil } from '../../Frame/ResourcesUtil';\r\nimport { Util } from '../../Frame/Util';\r\nimport { GridData } from '../../Game/Data/GridData';\r\nimport { MonsterData } from '../../Game/Data/MonsterData';\r\nimport { SkillUpgradeData } from '../../Game/Data/SkillUpgradeData';\r\nimport { CoinObj, WeaponData } from '../../Game/Data/WeaponData';\r\nimport { GameEvent } from '../../Game/Event/GameEvent';\r\nimport { SkillTypeItem } from '../../Game/Skill/SkillTypeItem';\r\nimport { GameDefine } from '../../GameDefine';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('GamePopup')\r\nexport class GamePopup extends Component {\r\n    @property(ProgressBar)\r\n    expProgerssBar: ProgressBar = null;\r\n    @property(Label)\r\n    expLevel: Label = null;\r\n    @property(Label)\r\n    kill: Label = null;\r\n    @property(Label)\r\n    gold: Label = null;\r\n    @property(Label)\r\n    wave: Label = null;\r\n    @property(Node)\r\n    buttonList: Node = null;\r\n    @property(Node)\r\n    placeList: Node = null;\r\n    @property(Node)\r\n    skillTypeList: Node = null;\r\n\r\n    public weaponSkill: Array<number> = [];//携带的武器id\r\n    private _totalGold: number = 0;\r\n\r\n    private _maxExp: number = 100;//当前最大经验值\r\n    private _curExp: number = 0;//当前经验值\r\n    private _level: number = 0;//当期前等级\r\n\r\n    show() {\r\n        this._totalGold = 0;\r\n        this._curExp = 0;\r\n        this._level = 0;\r\n        this._maxExp = SkillUpgradeData.instance.getBattleLevelByLevel(this._level + 1);\r\n        this.weaponSkill = [];\r\n        this.gold.string = `${this._totalGold}`;\r\n        let scale = Util.adapterScale();\r\n        this.buttonList.setScale(scale, scale);\r\n        this.expProgerssBar.node.active = false;\r\n        this.expProgerssBar.progress = 0;\r\n        this.expProgerssBar.node.setScale(scale, scale);\r\n        this.onSetWaveInfo(1);\r\n        this.updateLevelInfo();\r\n        this.clearSkill();\r\n        this.buttonList.active = true;\r\n        this.expProgerssBar.node.active = false;\r\n    }\r\n\r\n    /* 金币动画 */\r\n    onGameCoin(coinObj: CoinObj) {\r\n        let targetPos = this.gold.node.getPosition();\r\n        let count = coinObj.num;\r\n        let wpos = coinObj.wpos;\r\n        let path = Constants.battlePath + 'goldItem';\r\n        let startPos = this.gold.node.parent.getComponent(UITransform).convertToNodeSpaceAR(wpos);\r\n        ResourcesUtil.getPrefab(path).then((itemPrefab: Prefab) => {\r\n            for (let i = 0; i < count; i++) {\r\n                let item = instantiate(itemPrefab);\r\n                let posX = (Math.random() - 0.5) * 2 * 100 + startPos.x;\r\n                let posY = (Math.random() - 0.5) * 2 * 50 + startPos.y;\r\n                item.parent = this.gold.node.parent;\r\n                item.setPosition(startPos);\r\n                tween(item).to(0.2, { position: v3(posX, posY, 0) }, { easing: 'sineIn' }).delay(0.2).to(0.5, { position: targetPos }, { easing: 'sineInOut' }).call(() => {\r\n                    this._totalGold++;\r\n                    this.gold.string = `${this._totalGold}`;\r\n                    item.destroy();\r\n                }).start();\r\n            }\r\n        })\r\n    }\r\n\r\n    /* 设置战斗波次信息 */\r\n    onSetWaveInfo(wave: number) {\r\n        this.wave.string = `第${wave}/${MonsterData.instance.MaxWave}波`;\r\n    }\r\n\r\n    /* 更新怪物进度 */\r\n    onUpdateMonsterProgress(num: number, exp: number) {\r\n        this.kill.string = `杀敌数：${num}`;\r\n        this._curExp += exp;\r\n        this._maxExp = SkillUpgradeData.instance.getBattleLevelByLevel(this._level + 1);\r\n        if (this._curExp >= this._maxExp) {\r\n            //升级\r\n            this._level++;\r\n            this._curExp = this._curExp - this._maxExp;\r\n            this.updateLevelInfo();\r\n        }\r\n        this.updateLevelInfo();\r\n    }\r\n\r\n    /**\r\n     * 更新玩家经验信息\r\n   */\r\n    updateLevelInfo() {\r\n        this.expLevel.string = `${this._level}`;\r\n        this.expProgerssBar.progress = this._curExp / this._maxExp;\r\n    }\r\n\r\n    /* 设置战斗按钮状态 */\r\n    setBattleBtnStatus() {\r\n        let weaponIdArr = GridData.instance.getGridItemDataKeys();\r\n        let battleBtn = this.buttonList.children[1];\r\n        if (weaponIdArr.length) {\r\n            battleBtn.getComponent(Button).interactable = true;\r\n            battleBtn.getComponent(Sprite).grayscale = false;\r\n        }\r\n        else {\r\n            battleBtn.getComponent(Button).interactable = false;\r\n            battleBtn.getComponent(Sprite).grayscale = true;\r\n        }\r\n    }\r\n\r\n    /* 刷新 */\r\n    onRerollBtn() {\r\n        EventListener.emit(GameEvent.WEAPON_REMOVE_REFRESH);\r\n    }\r\n\r\n    /* 战斗 */\r\n    onBattleBtn() {\r\n        this.buttonList.active = false;\r\n        this.expProgerssBar.node.active = true;\r\n        EventListener.emit(GameEvent.GAME_BATTLE_START);\r\n    }\r\n\r\n    onPlaceFinishBtn() {\r\n        EventListener.emit(GameEvent.PLACE_GRID_FINISH);\r\n        this.placeList.active = false;\r\n    }\r\n\r\n    onShowHidePlaceList(status: boolean) {\r\n        this.buttonList.active = !status;\r\n        this.placeList.active = status;\r\n    }\r\n\r\n    onShowHideSkillList(status: boolean) {\r\n        this.skillTypeList.active = status;\r\n        this.buttonList.active = !status;\r\n        this.expProgerssBar.node.active = status;\r\n    }\r\n\r\n\r\n    clearSkill() {\r\n        for (let i = 0; i < this.skillTypeList.children.length; i++) {\r\n            const element = this.skillTypeList.children[i];\r\n            if (element.active) {\r\n                element.destroy();\r\n            }\r\n        }\r\n    }\r\n\r\n    initHeroSkill() {\r\n        //清除技能\r\n        this.clearSkill();\r\n        let visibleSize = view.getVisibleSize();\r\n        this.skillTypeList.active = true;\r\n        this.skillTypeList.getComponent(UITransform).width = visibleSize.width;\r\n        let skillTypeItem0 = this.skillTypeList.children[0];\r\n        let cMaxCount = 8; //行数\r\n        let rMaxCount = 2; //列数\r\n        let space = 10;\r\n        let maxWidth = 100;\r\n        this.weaponSkill = [];\r\n        let weaponData = Array.from(GridData.instance.getGridItemMapData().values());\r\n        let skillCount = weaponData.length;\r\n        let limtCount = skillCount > cMaxCount ? cMaxCount : skillCount;\r\n        let width = Math.floor((visibleSize.width - (limtCount + 1) * space) / limtCount) > maxWidth ? maxWidth : Math.floor((visibleSize.width - (limtCount + 1) * space) / limtCount);\r\n        let scale = width < maxWidth ? width / maxWidth : 1;\r\n        skillTypeItem0.setScale(scale, scale);\r\n        let startPosX = limtCount % 2 == 0 ? -(space / 2 + (limtCount / 2 - 1) * space + limtCount / 2 * width - width / 2) : -Math.floor(limtCount / 2) * (space + width);\r\n        let startPosY = skillCount > cMaxCount ? 50 : 0;\r\n        for (let i = 0; i < weaponData.length; i++) {\r\n            const weaponObj = weaponData[i];\r\n            let wid = weaponObj.wid;\r\n            let key = weaponObj.id;\r\n            let weaponCfg = WeaponData.instance.getWeaponCfgById(wid);\r\n            let skillId = weaponCfg.SkillId;\r\n            let skillKey = 'skillTypeItem' + weaponObj.id;\r\n            let skillTypeItem = null;\r\n            let posX = i >= cMaxCount ? startPosX + (i % cMaxCount) * (width + space) : startPosX + i * (width + space);\r\n            let posY = i >= cMaxCount ? startPosY - width - space : startPosY;\r\n            skillTypeItem = instantiate(skillTypeItem0);\r\n            skillTypeItem.parent = this.skillTypeList;\r\n            skillTypeItem.active = true;\r\n            skillTypeItem.setPosition(posX, posY);\r\n            skillTypeItem.name = skillKey;\r\n            skillTypeItem.getComponent(SkillTypeItem).init(key, weaponCfg);\r\n            this.weaponSkill.push(wid);\r\n        }\r\n    }\r\n\r\n    onPauseBtn() {\r\n        OpenPopupManager.instance.showPausePopup();\r\n    }\r\n\r\n    onEnable() {\r\n        EventListener.on(GameEvent.WEAPON_CHANGE_COIN, this.onGameCoin, this);\r\n        EventListener.on(GameEvent.GAME_BATTLE, this.onSetWaveInfo, this);\r\n        EventListener.on(GameEvent.UPDATE_MONSTER_PROGRESS, this.onUpdateMonsterProgress, this);\r\n        EventListener.on(GameEvent.SET_BATTLE_BTN_STATUS, this.setBattleBtnStatus, this);\r\n        EventListener.on(GameEvent.INIT_HERO_SKILL, this.initHeroSkill, this);\r\n        EventListener.on(GameEvent.SHOW_HIDE_SKILL_LIST, this.onShowHideSkillList, this);\r\n        EventListener.on(GameEvent.SHOW_HIDE_PLACE_LIST, this.onShowHidePlaceList, this);\r\n    }\r\n\r\n    onDisable() {\r\n        EventListener.off(GameEvent.WEAPON_CHANGE_COIN, this.onGameCoin, this);\r\n        EventListener.off(GameEvent.GAME_BATTLE, this.onSetWaveInfo, this);\r\n        EventListener.off(GameEvent.UPDATE_MONSTER_PROGRESS, this.onUpdateMonsterProgress, this);\r\n        EventListener.off(GameEvent.SET_BATTLE_BTN_STATUS, this.setBattleBtnStatus, this);\r\n        EventListener.off(GameEvent.INIT_HERO_SKILL, this.initHeroSkill, this);\r\n        EventListener.off(GameEvent.SHOW_HIDE_SKILL_LIST, this.onShowHideSkillList, this);\r\n        EventListener.off(GameEvent.SHOW_HIDE_PLACE_LIST, this.onShowHidePlaceList, this);\r\n\r\n    }\r\n\r\n    onTapBtn() {\r\n        EventListener.emit(GameEvent.GAME_TAP_BTN);\r\n    }\r\n}\r\n\r\n\r\n"]}
{"version":3,"sources":["file:///D:/CODE/cocos_workspace/%E8%83%8C%E5%8C%85%E8%8B%B1%E9%9B%84/assets/Scripts/Game/Data/GameData.ts"],"names":["GameData","Constants","Configuration","_gameTime","_eventTime","_dataInited","eventTime","value","gameTime","init","loadFromCache","checkGameEventOver","getRandEquipMaterialByWeight","idsStr","idsArr","split","start","end","sum","ids","weights","forEach","itemStr","itemArr","push","Number","randWeight","Math","floor","random","index","some","weight","idx","clear","instance","clearConfigDataToVersion","playerInfo","getConfigData","playerConfigId","clearCacheData","clearConfigData","_instance"],"mappings":"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","sourcesContent":["import { Constants } from \"../../Constants\";\r\nimport { Configuration } from \"../../Frame/Configuration\";\r\n\r\n\r\n\r\n\r\nexport class GameData {\r\n    private _gameTime: number = 0;//游戏时间\r\n    private _eventTime: number = 0;//时间时间轴\r\n    private _dataInited: boolean = false;//数据初始化完成\r\n\r\n    public set eventTime(value: number) {\r\n        this._eventTime = value;\r\n    }\r\n\r\n    public set gameTime(value: number) {\r\n        this._gameTime = value;\r\n    }\r\n\r\n    public get gameTime() {\r\n        return this._gameTime;\r\n    }\r\n\r\n\r\n    init() {\r\n        //读取本地数据\r\n        this.loadFromCache();\r\n    }\r\n\r\n    /* 检测游戏事件是否结束 */\r\n    checkGameEventOver() {\r\n        // let bossTimeArr = MonsterData.instance.bossTimePoint;\r\n        // let maxTime = bossTimeArr[bossTimeArr.length - 1];\r\n        // if (this._eventTime >= maxTime) {\r\n        //     return true;\r\n        // }\r\n        return false;\r\n    }\r\n\r\n\r\n    /**\r\n    * 按权重获取随机装备材料\r\n    * @param idsStr \r\n    * @returns \r\n    */\r\n    getRandEquipMaterialByWeight(idsStr: string) {\r\n        let idsArr = idsStr.split(',');\r\n        let start = 0;\r\n        let end = 0;\r\n        let sum = 0;\r\n        let ids = [];\r\n        let weights = [];\r\n        idsArr.forEach((itemStr: string) => {\r\n            let itemArr = itemStr.split('|');\r\n            ids.push(Number(itemArr[0]));\r\n            weights.push(Number(itemArr[1]));\r\n            sum += Number(itemArr[1]);\r\n        })\r\n        let randWeight = Math.floor(Math.random() * sum);\r\n        let index = 0;\r\n        weights.some((weight, idx) => {\r\n            end = start + weight;\r\n            if (randWeight >= start && randWeight < end) {\r\n                index = idx;\r\n                return true;\r\n            }\r\n            start = end;\r\n        })\r\n        return ids[index];\r\n    }\r\n\r\n    clear() {\r\n        this._gameTime = 0;\r\n        this._eventTime = 0;\r\n    }\r\n\r\n    /* 读取本地数据 */\r\n    public loadFromCache() {\r\n        if (this._dataInited) {\r\n            return;\r\n        }\r\n        // Configuration.instance().clearConfigData();\r\n        Configuration.instance.init();\r\n        Configuration.instance.clearConfigDataToVersion();//版本号清除数据\r\n        const playerInfo = Configuration.instance.getConfigData(Constants.playerConfigId);\r\n        this._dataInited = true;\r\n    }\r\n\r\n    /* 清除本地数据 */\r\n    public clearCacheData() {\r\n        Configuration.instance.clearConfigData();\r\n    }\r\n\r\n    private static _instance: GameData = null;\r\n    public static get instance() {\r\n        if (!this._instance) {\r\n            this._instance = new GameData();\r\n        }\r\n        return this._instance;\r\n    }\r\n}\r\n\r\n\r\n"]}
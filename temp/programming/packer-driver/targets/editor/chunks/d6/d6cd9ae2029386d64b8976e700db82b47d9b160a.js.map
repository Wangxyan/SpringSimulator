{"version":3,"sources":["file:///D:/CODE/cocos_workspace/%E8%83%8C%E5%8C%85%E8%8B%B1%E9%9B%84/assets/Scripts/Game/Data/WeaponData.ts"],"names":["WeaponData","CoinObj","CfgMgr","Util","WeaponCfg","_isSelect","_weaponCfgMapData","Map","_weaponGridData","isSelect","value","init","weaponCfgArr","getCfgDataArray","index","length","element","itemType","key","weaponGroupNum","Level","set","Id","getWeaponCfgByLevel","level","group","get","checkWeaponByLevel","has","getWeaponCfgById","id","getDataById","getWeaponCfgData","data","arr","i","push","getWeaponPool","rand","countRegionOccurrences","matrix","region","count","regionRows","regionCols","j","match","r","c","getPlaceGridIdByWeigh","weaponData","size","forEach","weaponCfg","Points","placeId","start","end","sum","options_num","Math","floor","random","some","item","idx","clear","instance","_instance","wpos","num"],"mappings":"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","sourcesContent":["import { Vec3 } from \"cc\";\r\nimport { CfgMgr } from \"../../Frame/CfgMgr\";\r\nimport { Util } from \"../../Frame/Util\";\r\nimport { WeaponCfg } from \"../../Model/WeaponModel\";\r\n\r\nexport class WeaponData {\r\n    private _isSelect: boolean = false;//是否选中武器\r\n    private _weaponCfgMapData: Map<string, WeaponCfg> = new Map(); // key=> group + '|' + level \r\n    private _weaponGridData: Map<number, WeaponCfg> = new Map();//可用格子数据\r\n\r\n    get isSelect() {\r\n        return this._isSelect;\r\n    }\r\n\r\n    set isSelect(value: boolean) {\r\n        this._isSelect = value;\r\n    }\r\n\r\n    init() {\r\n        let weaponCfgArr = CfgMgr.getCfgDataArray<WeaponCfg>(new WeaponCfg())\r\n        for (let index = 0; index < weaponCfgArr.length; index++) {\r\n            const element = weaponCfgArr[index];\r\n            if (element.itemType) {\r\n                let key = element.weaponGroupNum + '|' + element.Level;\r\n                this._weaponCfgMapData.set(key, element);\r\n            }\r\n            else {\r\n                this._weaponGridData.set(element.Id, element);\r\n            }\r\n        }\r\n    }\r\n\r\n    getWeaponCfgByLevel(level: number, group: number) {\r\n        let key = group + '|' + level;\r\n        return this._weaponCfgMapData.get(key)\r\n    }\r\n\r\n    /* 通过level检测是否有该等级的装备 */\r\n    checkWeaponByLevel(level: number, group: number) {\r\n        let key = group + '|' + level;\r\n        if (this._weaponCfgMapData.has(key)) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getWeaponCfgById(id: number) {\r\n        return CfgMgr.getDataById<WeaponCfg>(new WeaponCfg(), id);\r\n    }\r\n\r\n    getWeaponCfgData() {\r\n        let data = [];\r\n        let arr = CfgMgr.getCfgDataArray<WeaponCfg>(new WeaponCfg());\r\n        for (let i = 0; i < arr.length; i++) {\r\n            const element = arr[i];\r\n            if (element.itemType) {\r\n                data.push(element);\r\n            }\r\n        }\r\n\r\n        return data;\r\n    }\r\n\r\n    getWeaponPool() {\r\n        let arr: Array<number> = [];\r\n        let data: Array<WeaponCfg> = Util.rand(this.getWeaponCfgData());\r\n        for (let i = 0; i < data.length; i++) {\r\n            const element = data[i];\r\n            if (element.Level == 1 && element.itemType) {\r\n                arr.push(element.Id);\r\n                if (arr.length == 6) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    /**\r\n * 检测大数组数据中是否存在区域数据\r\n * @param matrix 大数组区域数据 (0:占有 1:未占有)\r\n * @param region  待检测的区域数据\r\n * @returns \r\n */\r\n    countRegionOccurrences(matrix: number[][], region: number[][]): number {\r\n        let count = 0;\r\n        const regionRows = region.length;\r\n        const regionCols = region[0].length;\r\n        for (let i = 0; i <= matrix.length - regionRows; i++) {\r\n            for (let j = 0; j <= matrix[0].length - regionCols; j++) {\r\n                let match = true;\r\n                for (let r = 0; r < regionRows; r++) {\r\n                    for (let c = 0; c < regionCols; c++) {\r\n                        if (matrix[i + r][j + c] !== region[r][c]) {\r\n                            match = false;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (!match) {\r\n                        break;\r\n                    }\r\n                }\r\n                if (match) {\r\n                    count++;\r\n                }\r\n            }\r\n        }\r\n        return count;\r\n    }\r\n\r\n\r\n    /* 通过权重获取可以放置的id  */\r\n    getPlaceGridIdByWeigh(matrix: number[][]) {\r\n        let weaponData: Array<WeaponCfg> = [];\r\n        //找出可以放置的格子\r\n        if (this._weaponGridData.size) {\r\n            this._weaponGridData.forEach((weaponCfg, key) => {\r\n                let count = this.countRegionOccurrences(matrix, weaponCfg.Points);\r\n                if (count) {\r\n                    weaponData.push(weaponCfg);\r\n                }\r\n            })\r\n        }\r\n        let placeId = 0;\r\n        if (weaponData.length) {\r\n            let start = 0;\r\n            let end = 0;\r\n            let sum = 0;\r\n            for (let i = 0; i < weaponData.length; i++) {\r\n                const element = weaponData[i];\r\n                sum += element.options_num;\r\n            }\r\n            let rand = Math.floor(Math.random() * sum);\r\n            let index = 0;\r\n            weaponData.some((item, idx) => {\r\n                end = start + item.options_num;\r\n                if (rand >= start && rand < end) {\r\n                    index = idx;\r\n                    return true;\r\n                }\r\n                start = end;\r\n            })\r\n            placeId = weaponData[index].Id;\r\n        }\r\n        return placeId;\r\n    }\r\n\r\n    clear() {\r\n        this._isSelect = false;\r\n    }\r\n\r\n    private static _instance: WeaponData = null;\r\n    public static get instance(): WeaponData {\r\n        if (!this._instance) {\r\n            this._instance = new WeaponData();\r\n        }\r\n        return this._instance;\r\n    }\r\n\r\n}\r\n\r\nexport class CoinObj {\r\n    wpos: Vec3;//金币坐标\r\n    num: number;//金币数量\r\n}\r\n\r\n\r\n"]}